

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 20 17:23:51 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	strings
   207  0800                     __pstrings:	
   208  0800                     stringtab:	
   209  0800                     __stringtab:	
   210                           
   211                           ;	String table - string pointers are 1 byte each
   212  0800  1BFF               	btfsc	btemp+1,7
   213  0801  280A               	ljmp	stringcode
   214  0802  1383               	bcf	3,7
   215  0803  187F               	btfsc	btemp+1,0
   216  0804  1783               	bsf	3,7
   217  0805  0800               	movf	0,w
   218  0806  0A84               	incf	4,f
   219  0807  1903               	skipnz
   220  0808  0AFF               	incf	btemp+1,f
   221  0809  0008               	return
   222  080A                     stringcode:	
   223  080A                     stringdir:	
   224  080A  3008               	movlw	high stringdir
   225  080B  008A               	movwf	10
   226  080C  0804               	movf	4,w
   227  080D  0A84               	incf	4,f
   228  080E  0782               	addwf	2,f
   229  080F                     __stringbase:	
   230  080F  3400               	retlw	0
   231  0810                     __end_of__stringtab:	
   232  0810                     __powers_:	
   233  0810  3400               	retlw	0
   234  0811  3400               	retlw	0
   235  0812  3480               	retlw	128
   236  0813  343F               	retlw	63
   237  0814  3400               	retlw	0
   238  0815  3400               	retlw	0
   239  0816  3420               	retlw	32
   240  0817  3441               	retlw	65
   241  0818  3400               	retlw	0
   242  0819  3400               	retlw	0
   243  081A  34C8               	retlw	200
   244  081B  3442               	retlw	66
   245  081C  3400               	retlw	0
   246  081D  3400               	retlw	0
   247  081E  347A               	retlw	122
   248  081F  3444               	retlw	68
   249  0820  3400               	retlw	0
   250  0821  3440               	retlw	64
   251  0822  341C               	retlw	28
   252  0823  3446               	retlw	70
   253  0824  3400               	retlw	0
   254  0825  3450               	retlw	80
   255  0826  34C3               	retlw	195
   256  0827  3447               	retlw	71
   257  0828  3400               	retlw	0
   258  0829  3424               	retlw	36
   259  082A  3474               	retlw	116
   260  082B  3449               	retlw	73
   261  082C  3480               	retlw	128
   262  082D  3496               	retlw	150
   263  082E  3418               	retlw	24
   264  082F  344B               	retlw	75
   265  0830  3420               	retlw	32
   266  0831  34BC               	retlw	188
   267  0832  34BE               	retlw	190
   268  0833  344C               	retlw	76
   269  0834  3428               	retlw	40
   270  0835  346B               	retlw	107
   271  0836  346E               	retlw	110
   272  0837  344E               	retlw	78
   273  0838  34F9               	retlw	249
   274  0839  3402               	retlw	2
   275  083A  3415               	retlw	21
   276  083B  3450               	retlw	80
   277  083C  34EC               	retlw	236
   278  083D  3478               	retlw	120
   279  083E  34AD               	retlw	173
   280  083F  3460               	retlw	96
   281  0840  34CA               	retlw	202
   282  0841  34F2               	retlw	242
   283  0842  3449               	retlw	73
   284  0843  3471               	retlw	113
   285  0844                     __end_of__powers_:	
   286  0844                     __npowers_:	
   287  0844  3400               	retlw	0
   288  0845  3400               	retlw	0
   289  0846  3480               	retlw	128
   290  0847  343F               	retlw	63
   291  0848  34CD               	retlw	205
   292  0849  34CC               	retlw	204
   293  084A  34CC               	retlw	204
   294  084B  343D               	retlw	61
   295  084C  340A               	retlw	10
   296  084D  34D7               	retlw	215
   297  084E  3423               	retlw	35
   298  084F  343C               	retlw	60
   299  0850  346F               	retlw	111
   300  0851  3412               	retlw	18
   301  0852  3483               	retlw	131
   302  0853  343A               	retlw	58
   303  0854  3417               	retlw	23
   304  0855  34B7               	retlw	183
   305  0856  34D1               	retlw	209
   306  0857  3438               	retlw	56
   307  0858  34AC               	retlw	172
   308  0859  34C5               	retlw	197
   309  085A  3427               	retlw	39
   310  085B  3437               	retlw	55
   311  085C  34BD               	retlw	189
   312  085D  3437               	retlw	55
   313  085E  3486               	retlw	134
   314  085F  3435               	retlw	53
   315  0860  3495               	retlw	149
   316  0861  34BF               	retlw	191
   317  0862  34D6               	retlw	214
   318  0863  3433               	retlw	51
   319  0864  3477               	retlw	119
   320  0865  34CC               	retlw	204
   321  0866  342B               	retlw	43
   322  0867  3432               	retlw	50
   323  0868  345F               	retlw	95
   324  0869  3470               	retlw	112
   325  086A  3489               	retlw	137
   326  086B  3430               	retlw	48
   327  086C  34FF               	retlw	255
   328  086D  34E6               	retlw	230
   329  086E  34DB               	retlw	219
   330  086F  342E               	retlw	46
   331  0870  3408               	retlw	8
   332  0871  34E5               	retlw	229
   333  0872  343C               	retlw	60
   334  0873  341E               	retlw	30
   335  0874  3460               	retlw	96
   336  0875  3442               	retlw	66
   337  0876  34A2               	retlw	162
   338  0877  340D               	retlw	13
   339  0878                     __end_of__npowers_:	
   340  0878                     _dpowers:	
   341  0878  3401               	retlw	1
   342  0879  3400               	retlw	0
   343  087A  3400               	retlw	0
   344  087B  3400               	retlw	0
   345  087C  340A               	retlw	10
   346  087D  3400               	retlw	0
   347  087E  3400               	retlw	0
   348  087F  3400               	retlw	0
   349  0880  3464               	retlw	100
   350  0881  3400               	retlw	0
   351  0882  3400               	retlw	0
   352  0883  3400               	retlw	0
   353  0884  34E8               	retlw	232
   354  0885  3403               	retlw	3
   355  0886  3400               	retlw	0
   356  0887  3400               	retlw	0
   357  0888  3410               	retlw	16
   358  0889  3427               	retlw	39
   359  088A  3400               	retlw	0
   360  088B  3400               	retlw	0
   361  088C  34A0               	retlw	160
   362  088D  3486               	retlw	134
   363  088E  3401               	retlw	1
   364  088F  3400               	retlw	0
   365  0890  3440               	retlw	64
   366  0891  3442               	retlw	66
   367  0892  340F               	retlw	15
   368  0893  3400               	retlw	0
   369  0894  3480               	retlw	128
   370  0895  3496               	retlw	150
   371  0896  3498               	retlw	152
   372  0897  3400               	retlw	0
   373  0898  3400               	retlw	0
   374  0899  34E1               	retlw	225
   375  089A  34F5               	retlw	245
   376  089B  3405               	retlw	5
   377  089C  3400               	retlw	0
   378  089D  34CA               	retlw	202
   379  089E  349A               	retlw	154
   380  089F  343B               	retlw	59
   381  08A0                     __end_of_dpowers:	
   382  0007                     _PORTC	set	7
   383  0006                     _PORTB	set	6
   384  0008                     _PORTD	set	8
   385  001E                     _ADRESH	set	30
   386  001F                     _ADCON0	set	31
   387  00FA                     _GO_nDONE	set	250
   388  0043                     _RD3	set	67
   389  0042                     _RD2	set	66
   390  0047                     _RD7	set	71
   391  0046                     _RD6	set	70
   392  0045                     _RD5	set	69
   393  0044                     _RD4	set	68
   394  0087                     _TRISC	set	135
   395  0086                     _TRISB	set	134
   396  0088                     _TRISD	set	136
   397  0085                     _TRISA	set	133
   398  009E                     _ADRESL	set	158
   399  009F                     _ADCON1	set	159
   400  08A0                     STR_3:	
   401  08A0  344C               	retlw	76	;'L'
   402  08A1  344D               	retlw	77	;'M'
   403  08A2  3433               	retlw	51	;'3'
   404  08A3  3435               	retlw	53	;'5'
   405  08A4  343A               	retlw	58	;':'
   406  08A5  3400               	retlw	0
   407  08A6                     STR_2:	
   408  08A6  344E               	retlw	78	;'N'
   409  08A7  3454               	retlw	84	;'T'
   410  08A8  3443               	retlw	67	;'C'
   411  08A9  343A               	retlw	58	;':'
   412  08AA  3400               	retlw	0
   413  08AB                     STR_4:	
   414  08AB  3450               	retlw	80	;'P'
   415  08AC  344F               	retlw	79	;'O'
   416  08AD  3454               	retlw	84	;'T'
   417  08AE  343A               	retlw	58	;':'
   418  08AF  3400               	retlw	0
   419  08B0                     STR_1:	
   420  08B0  3425               	retlw	37	;'%'
   421  08B1  342E               	retlw	46	;'.'
   422  08B2  3431               	retlw	49	;'1'
   423  08B3  3466               	retlw	102	;'f'
   424  08B4  3400               	retlw	0
   425                           
   426                           ; #config settings
   427  0000                     
   428                           	psect	cinit
   429  07EC                     start_initialization:	
   430  07EC                     __initialization:	
   431                           
   432                           ; Clear objects allocated to BANK1
   433  07EC  1683               	bsf	3,5	;RP0=1, select bank1
   434  07ED  1303               	bcf	3,6	;RP1=0, select bank1
   435  07EE  01E2               	clrf	__pbssBANK1& (0+127)
   436  07EF  01E3               	clrf	(__pbssBANK1+1)& (0+127)
   437  07F0  01E4               	clrf	(__pbssBANK1+2)& (0+127)
   438  07F1  01E5               	clrf	(__pbssBANK1+3)& (0+127)
   439  07F2  01E6               	clrf	(__pbssBANK1+4)& (0+127)
   440  07F3  01E7               	clrf	(__pbssBANK1+5)& (0+127)
   441  07F4  01E8               	clrf	(__pbssBANK1+6)& (0+127)
   442  07F5  01E9               	clrf	(__pbssBANK1+7)& (0+127)
   443  07F6  01EA               	clrf	(__pbssBANK1+8)& (0+127)
   444  07F7  01EB               	clrf	(__pbssBANK1+9)& (0+127)
   445  07F8  01EC               	clrf	(__pbssBANK1+10)& (0+127)
   446  07F9  01ED               	clrf	(__pbssBANK1+11)& (0+127)
   447  07FA  01EE               	clrf	(__pbssBANK1+12)& (0+127)
   448  07FB  01EF               	clrf	(__pbssBANK1+13)& (0+127)
   449  07FC                     end_of_initialization:	
   450                           ;End of C runtime variable initialization code
   451                           
   452  07FC                     __end_of__initialization:	
   453  07FC  0183               	clrf	3
   454  07FD  120A  158A  2CBC   	ljmp	_main	;jump to C main() function
   455                           
   456                           	psect	bssBANK1
   457  00E2                     __pbssBANK1:	
   458  00E2                     _sensor3:	
   459  00E2                     	ds	2
   460  00E4                     _sensor2:	
   461  00E4                     	ds	2
   462  00E6                     _sensor1:	
   463  00E6                     	ds	2
   464  00E8                     _aux:	
   465  00E8                     	ds	4
   466  00EC                     _temp:	
   467  00EC                     	ds	4
   468                           
   469                           	psect	cstackBANK1
   470  00A0                     __pcstackBANK1:	
   471  00A0                     ?_sprintf:	
   472  00A0                     sprintf@f:	
   473                           ; 2 bytes @ 0x0
   474                           
   475                           
   476                           ; 1 bytes @ 0x0
   477  00A0                     	ds	5
   478  00A5                     ??_sprintf:	
   479                           
   480                           ; 1 bytes @ 0x5
   481  00A5                     	ds	5
   482  00AA                     _sprintf$837:	
   483                           
   484                           ; 4 bytes @ 0xA
   485  00AA                     	ds	4
   486  00AE                     sprintf@ap:	
   487                           
   488                           ; 1 bytes @ 0xE
   489  00AE                     	ds	1
   490  00AF                     sprintf@flag:	
   491                           
   492                           ; 2 bytes @ 0xF
   493  00AF                     	ds	2
   494  00B1                     sprintf@val:	
   495                           
   496                           ; 4 bytes @ 0x11
   497  00B1                     	ds	4
   498  00B5                     sprintf@eexp:	
   499                           
   500                           ; 2 bytes @ 0x15
   501  00B5                     	ds	2
   502  00B7                     sprintf@tmpval:	
   503                           
   504                           ; 4 bytes @ 0x17
   505  00B7                     	ds	4
   506  00BB                     sprintf@sp:	
   507                           
   508                           ; 1 bytes @ 0x1B
   509  00BB                     	ds	1
   510  00BC                     sprintf@prec:	
   511                           
   512                           ; 2 bytes @ 0x1C
   513  00BC                     	ds	2
   514  00BE                     sprintf@fval:	
   515                           
   516                           ; 4 bytes @ 0x1E
   517  00BE                     	ds	4
   518  00C2                     sprintf@c:	
   519                           
   520                           ; 1 bytes @ 0x22
   521  00C2                     	ds	1
   522  00C3                     ?_Lcd_flotante:	
   523  00C3                     Lcd_flotante@f:	
   524                           ; 1 bytes @ 0x23
   525                           
   526                           
   527                           ; 4 bytes @ 0x23
   528  00C3                     	ds	4
   529  00C7                     Lcd_flotante@s:	
   530                           
   531                           ; 7 bytes @ 0x27
   532  00C7                     	ds	7
   533  00CE                     _main$829:	
   534                           
   535                           ; 4 bytes @ 0x2E
   536  00CE                     	ds	4
   537  00D2                     _main$830:	
   538                           
   539                           ; 4 bytes @ 0x32
   540  00D2                     	ds	4
   541  00D6                     _main$831:	
   542                           
   543                           ; 4 bytes @ 0x36
   544  00D6                     	ds	4
   545  00DA                     _main$832:	
   546                           
   547                           ; 4 bytes @ 0x3A
   548  00DA                     	ds	4
   549  00DE                     _main$833:	
   550                           
   551                           ; 4 bytes @ 0x3E
   552  00DE                     	ds	4
   553                           
   554                           	psect	cstackCOMMON
   555  0070                     __pcstackCOMMON:	
   556  0070                     ?_isdigit:	
   557  0070                     ?___fleq:	
   558                           ; 1 bit 
   559                           
   560  0070                     ?___flge:	
   561                           ; 1 bit 
   562                           
   563  0070                     ??_isdigit:	
   564                           ; 1 bit 
   565                           
   566  0070                     ?_Lcd_Port:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ??_Lcd_Port:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_Lcd_Cmd:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_Lcd_Init:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_Lcd_Write_Char:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_init:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_init:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_main:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?___lbmod:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?__Umul8_16:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_Lcd_Clear:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ?_conversion:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ?___wmul:	
   603                           ; 2 bytes @ 0x0
   604                           
   605  0070                     ?___awmod:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0070                     ?___lwdiv:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     ?___lwmod:	
   612                           ; 2 bytes @ 0x0
   613                           
   614  0070                     ?__tdiv_to_l_:	
   615                           ; 2 bytes @ 0x0
   616                           
   617  0070                     ?__div_to_l_:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0070                     ?___lldiv:	
   621                           ; 4 bytes @ 0x0
   622                           
   623  0070                     ?___flneg:	
   624                           ; 4 bytes @ 0x0
   625                           
   626  0070                     ?___llmod:	
   627                           ; 4 bytes @ 0x0
   628                           
   629  0070                     ?___xxtofl:	
   630                           ; 4 bytes @ 0x0
   631                           
   632  0070                     Lcd_Port@a:	
   633                           ; 4 bytes @ 0x0
   634                           
   635  0070                     ___lbmod@divisor:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     _isdigit$618:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     __Umul8_16@multiplicand:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ___wmul@multiplier:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ___awmod@divisor:	
   648                           ; 2 bytes @ 0x0
   649                           
   650  0070                     ___lwdiv@divisor:	
   651                           ; 2 bytes @ 0x0
   652                           
   653  0070                     ___lwmod@divisor:	
   654                           ; 2 bytes @ 0x0
   655                           
   656  0070                     ___lldiv@divisor:	
   657                           ; 2 bytes @ 0x0
   658                           
   659  0070                     __div_to_l_@f1:	
   660                           ; 4 bytes @ 0x0
   661                           
   662  0070                     ___fleq@ff1:	
   663                           ; 4 bytes @ 0x0
   664                           
   665  0070                     ___flge@ff1:	
   666                           ; 4 bytes @ 0x0
   667                           
   668  0070                     ___flneg@f1:	
   669                           ; 4 bytes @ 0x0
   670                           
   671  0070                     __tdiv_to_l_@f1:	
   672                           ; 4 bytes @ 0x0
   673                           
   674  0070                     ___llmod@divisor:	
   675                           ; 4 bytes @ 0x0
   676                           
   677  0070                     ___xxtofl@val:	
   678                           ; 4 bytes @ 0x0
   679                           
   680                           
   681                           ; 4 bytes @ 0x0
   682  0070                     	ds	1
   683  0071                     ??_Lcd_Cmd:	
   684  0071                     ??_Lcd_Write_Char:	
   685                           ; 1 bytes @ 0x1
   686                           
   687  0071                     ??___lbmod:	
   688                           ; 1 bytes @ 0x1
   689                           
   690  0071                     isdigit@c:	
   691                           ; 1 bytes @ 0x1
   692                           
   693                           
   694                           ; 1 bytes @ 0x1
   695  0071                     	ds	1
   696  0072                     ??__Umul8_16:	
   697  0072                     ??_conversion:	
   698                           ; 1 bytes @ 0x2
   699                           
   700  0072                     Lcd_Write_Char@temp:	
   701                           ; 1 bytes @ 0x2
   702                           
   703  0072                     ___wmul@multiplicand:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     ___awmod@dividend:	
   707                           ; 2 bytes @ 0x2
   708                           
   709  0072                     ___lwdiv@dividend:	
   710                           ; 2 bytes @ 0x2
   711                           
   712  0072                     ___lwmod@dividend:	
   713                           ; 2 bytes @ 0x2
   714                           
   715                           
   716                           ; 2 bytes @ 0x2
   717  0072                     	ds	1
   718  0073                     Lcd_Cmd@a:	
   719  0073                     Lcd_Write_Char@y:	
   720                           ; 1 bytes @ 0x3
   721                           
   722                           
   723                           ; 1 bytes @ 0x3
   724  0073                     	ds	1
   725  0074                     ??_Lcd_Clear:	
   726  0074                     ?_Lcd_Set_Cursor:	
   727                           ; 1 bytes @ 0x4
   728                           
   729  0074                     ??_Lcd_Init:	
   730                           ; 1 bytes @ 0x4
   731                           
   732  0074                     ??___wmul:	
   733                           ; 1 bytes @ 0x4
   734                           
   735  0074                     ??___awmod:	
   736                           ; 1 bytes @ 0x4
   737                           
   738  0074                     ??___flneg:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0074                     ??___lwdiv:	
   742                           ; 1 bytes @ 0x4
   743                           
   744  0074                     ??___lwmod:	
   745                           ; 1 bytes @ 0x4
   746                           
   747  0074                     ??___xxtofl:	
   748                           ; 1 bytes @ 0x4
   749                           
   750  0074                     Lcd_Set_Cursor@b:	
   751                           ; 1 bytes @ 0x4
   752                           
   753  0074                     Lcd_Write_Char@a:	
   754                           ; 1 bytes @ 0x4
   755                           
   756  0074                     ___lbmod@dividend:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0074                     conversion@resultado:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0074                     ___wmul@product:	
   763                           ; 2 bytes @ 0x4
   764                           
   765  0074                     __Umul8_16@product:	
   766                           ; 2 bytes @ 0x4
   767                           
   768  0074                     ___lldiv@dividend:	
   769                           ; 2 bytes @ 0x4
   770                           
   771  0074                     __div_to_l_@f2:	
   772                           ; 4 bytes @ 0x4
   773                           
   774  0074                     ___fleq@ff2:	
   775                           ; 4 bytes @ 0x4
   776                           
   777  0074                     ___flge@ff2:	
   778                           ; 4 bytes @ 0x4
   779                           
   780  0074                     __tdiv_to_l_@f2:	
   781                           ; 4 bytes @ 0x4
   782                           
   783  0074                     ___llmod@dividend:	
   784                           ; 4 bytes @ 0x4
   785                           
   786                           
   787                           ; 4 bytes @ 0x4
   788  0074                     	ds	1
   789  0075                     ??_Lcd_Set_Cursor:	
   790  0075                     ?_Lcd_Write_String:	
   791                           ; 1 bytes @ 0x5
   792                           
   793  0075                     ___awmod@counter:	
   794                           ; 1 bytes @ 0x5
   795                           
   796  0075                     ___lbmod@counter:	
   797                           ; 1 bytes @ 0x5
   798                           
   799  0075                     ___lwmod@counter:	
   800                           ; 1 bytes @ 0x5
   801                           
   802  0075                     Lcd_Write_String@a:	
   803                           ; 1 bytes @ 0x5
   804                           
   805  0075                     ___lwdiv@quotient:	
   806                           ; 2 bytes @ 0x5
   807                           
   808                           
   809                           ; 2 bytes @ 0x5
   810  0075                     	ds	1
   811  0076                     conversion@canal:	
   812  0076                     ___awmod@sign:	
   813                           ; 1 bytes @ 0x6
   814                           
   815  0076                     ___lbmod@rem:	
   816                           ; 1 bytes @ 0x6
   817                           
   818  0076                     __Umul8_16@word_mpld:	
   819                           ; 1 bytes @ 0x6
   820                           
   821                           
   822                           ; 2 bytes @ 0x6
   823  0076                     	ds	1
   824  0077                     ??_Lcd_Write_String:	
   825  0077                     ?___lbdiv:	
   826                           ; 1 bytes @ 0x7
   827                           
   828  0077                     ?___awdiv:	
   829                           ; 1 bytes @ 0x7
   830                           
   831  0077                     Lcd_Set_Cursor@a:	
   832                           ; 2 bytes @ 0x7
   833                           
   834  0077                     ___lbdiv@divisor:	
   835                           ; 1 bytes @ 0x7
   836                           
   837  0077                     ___lwdiv@counter:	
   838                           ; 1 bytes @ 0x7
   839                           
   840  0077                     ___awdiv@divisor:	
   841                           ; 1 bytes @ 0x7
   842                           
   843                           
   844                           ; 2 bytes @ 0x7
   845  0077                     	ds	1
   846  0078                     ??__tdiv_to_l_:	
   847  0078                     ??__div_to_l_:	
   848                           ; 1 bytes @ 0x8
   849                           
   850  0078                     ?_utoa:	
   851                           ; 1 bytes @ 0x8
   852                           
   853  0078                     ??___lldiv:	
   854                           ; 1 bytes @ 0x8
   855                           
   856  0078                     ??___fleq:	
   857                           ; 1 bytes @ 0x8
   858                           
   859  0078                     ??___flge:	
   860                           ; 1 bytes @ 0x8
   861                           
   862  0078                     ??___lbdiv:	
   863                           ; 1 bytes @ 0x8
   864                           
   865  0078                     ??___llmod:	
   866                           ; 1 bytes @ 0x8
   867                           
   868  0078                     Lcd_Set_Cursor@z:	
   869                           ; 1 bytes @ 0x8
   870                           
   871  0078                     ___xxtofl@sign:	
   872                           ; 1 bytes @ 0x8
   873                           
   874  0078                     __Umul8_16@multiplier:	
   875                           ; 1 bytes @ 0x8
   876                           
   877  0078                     utoa@val:	
   878                           ; 1 bytes @ 0x8
   879                           
   880                           
   881                           ; 2 bytes @ 0x8
   882  0078                     	ds	1
   883  0079                     Lcd_Set_Cursor@y:	
   884  0079                     ___lbdiv@dividend:	
   885                           ; 1 bytes @ 0x9
   886                           
   887  0079                     ___llmod@counter:	
   888                           ; 1 bytes @ 0x9
   889                           
   890  0079                     ___xxtofl@exp:	
   891                           ; 1 bytes @ 0x9
   892                           
   893  0079                     ___awdiv@dividend:	
   894                           ; 1 bytes @ 0x9
   895                           
   896  0079                     ___lldiv@quotient:	
   897                           ; 2 bytes @ 0x9
   898                           
   899                           
   900                           ; 4 bytes @ 0x9
   901  0079                     	ds	1
   902  007A                     Lcd_Set_Cursor@temp:	
   903  007A                     ___lbdiv@counter:	
   904                           ; 1 bytes @ 0xA
   905                           
   906  007A                     Lcd_Write_String@i:	
   907                           ; 1 bytes @ 0xA
   908                           
   909  007A                     utoa@base:	
   910                           ; 2 bytes @ 0xA
   911                           
   912  007A                     ___xxtofl@arg:	
   913                           ; 2 bytes @ 0xA
   914                           
   915                           
   916                           ; 4 bytes @ 0xA
   917  007A                     	ds	1
   918  007B                     ??___awdiv:	
   919  007B                     ___lbdiv@quotient:	
   920                           ; 1 bytes @ 0xB
   921                           
   922                           
   923                           ; 1 bytes @ 0xB
   924  007B                     	ds	1
   925  007C                     ??_utoa:	
   926                           
   927                           ; 1 bytes @ 0xC
   928  007C                     	ds	1
   929  007D                     ??_itoa:	
   930  007D                     ___lldiv@counter:	
   931                           ; 1 bytes @ 0xD
   932                           
   933                           
   934                           ; 1 bytes @ 0xD
   935  007D                     	ds	1
   936  007E                     ??_Lcd_Write_Int:	
   937  007E                     ??___flsub:	
   938                           ; 1 bytes @ 0xE
   939                           
   940                           
   941                           	psect	cstackBANK0
   942  0020                     __pcstackBANK0:	
   943                           ; 1 bytes @ 0xE
   944                           
   945  0020                     ___awdiv@counter:	
   946  0020                     utoa@v:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0020                     __div_to_l_@quot:	
   950                           ; 2 bytes @ 0x0
   951                           
   952  0020                     __tdiv_to_l_@quot:	
   953                           ; 4 bytes @ 0x0
   954                           
   955                           
   956                           ; 4 bytes @ 0x0
   957  0020                     	ds	1
   958  0021                     ___awdiv@sign:	
   959                           
   960                           ; 1 bytes @ 0x1
   961  0021                     	ds	1
   962  0022                     utoa@c:	
   963  0022                     ___awdiv@quotient:	
   964                           ; 1 bytes @ 0x2
   965                           
   966                           
   967                           ; 2 bytes @ 0x2
   968  0022                     	ds	1
   969  0023                     utoa@buf:	
   970                           
   971                           ; 1 bytes @ 0x3
   972  0023                     	ds	1
   973  0024                     ?_itoa:	
   974  0024                     ?___flmul:	
   975                           ; 1 bytes @ 0x4
   976                           
   977  0024                     __div_to_l_@cntr:	
   978                           ; 4 bytes @ 0x4
   979                           
   980  0024                     __tdiv_to_l_@cntr:	
   981                           ; 1 bytes @ 0x4
   982                           
   983  0024                     itoa@val:	
   984                           ; 1 bytes @ 0x4
   985                           
   986  0024                     ___flmul@b:	
   987                           ; 2 bytes @ 0x4
   988                           
   989                           
   990                           ; 4 bytes @ 0x4
   991  0024                     	ds	1
   992  0025                     __div_to_l_@exp1:	
   993  0025                     __tdiv_to_l_@exp1:	
   994                           ; 1 bytes @ 0x5
   995                           
   996                           
   997                           ; 1 bytes @ 0x5
   998  0025                     	ds	1
   999  0026                     itoa@base:	
  1000                           
  1001                           ; 2 bytes @ 0x6
  1002  0026                     	ds	2
  1003  0028                     ___flmul@a:	
  1004                           
  1005                           ; 4 bytes @ 0x8
  1006  0028                     	ds	1
  1007  0029                     itoa@buf:	
  1008                           
  1009                           ; 1 bytes @ 0x9
  1010  0029                     	ds	3
  1011  002C                     ??___flmul:	
  1012                           
  1013                           ; 1 bytes @ 0xC
  1014  002C                     	ds	5
  1015  0031                     ___flmul@sign:	
  1016                           
  1017                           ; 1 bytes @ 0x11
  1018  0031                     	ds	1
  1019  0032                     ___flmul@aexp:	
  1020                           
  1021                           ; 1 bytes @ 0x12
  1022  0032                     	ds	1
  1023  0033                     ___flmul@grs:	
  1024                           
  1025                           ; 4 bytes @ 0x13
  1026  0033                     	ds	4
  1027  0037                     ___flmul@bexp:	
  1028                           
  1029                           ; 1 bytes @ 0x17
  1030  0037                     	ds	1
  1031  0038                     ___flmul@prod:	
  1032                           
  1033                           ; 4 bytes @ 0x18
  1034  0038                     	ds	4
  1035  003C                     ___flmul@temp:	
  1036                           
  1037                           ; 2 bytes @ 0x1C
  1038  003C                     	ds	2
  1039  003E                     ?_fround:	
  1040  003E                     ?_scale:	
  1041                           ; 4 bytes @ 0x1E
  1042                           
  1043  003E                     ?___fldiv:	
  1044                           ; 4 bytes @ 0x1E
  1045                           
  1046  003E                     ___fldiv@a:	
  1047                           ; 4 bytes @ 0x1E
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x1E
  1051  003E                     	ds	4
  1052  0042                     ??_fround:	
  1053  0042                     ??_scale:	
  1054                           ; 1 bytes @ 0x22
  1055                           
  1056  0042                     ___fldiv@b:	
  1057                           ; 1 bytes @ 0x22
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x22
  1061  0042                     	ds	4
  1062  0046                     ??___fldiv:	
  1063                           
  1064                           ; 1 bytes @ 0x26
  1065  0046                     	ds	3
  1066  0049                     _fround$835:	
  1067                           
  1068                           ; 4 bytes @ 0x29
  1069  0049                     	ds	2
  1070  004B                     ___fldiv@rem:	
  1071                           
  1072                           ; 4 bytes @ 0x2B
  1073  004B                     	ds	1
  1074  004C                     _scale$836:	
  1075                           
  1076                           ; 4 bytes @ 0x2C
  1077  004C                     	ds	1
  1078  004D                     _fround$834:	
  1079                           
  1080                           ; 4 bytes @ 0x2D
  1081  004D                     	ds	2
  1082  004F                     ___fldiv@sign:	
  1083                           
  1084                           ; 1 bytes @ 0x2F
  1085  004F                     	ds	1
  1086  0050                     scale@scl:	
  1087  0050                     ___fldiv@new_exp:	
  1088                           ; 1 bytes @ 0x30
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x30
  1092  0050                     	ds	1
  1093  0051                     ?___fltol:	
  1094  0051                     fround@prec:	
  1095                           ; 4 bytes @ 0x31
  1096                           
  1097  0051                     ___fltol@f1:	
  1098                           ; 1 bytes @ 0x31
  1099                           
  1100                           
  1101                           ; 4 bytes @ 0x31
  1102  0051                     	ds	1
  1103  0052                     ?___fladd:	
  1104  0052                     ___fladd@b:	
  1105                           ; 4 bytes @ 0x32
  1106                           
  1107  0052                     ___fldiv@grs:	
  1108                           ; 4 bytes @ 0x32
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x32
  1112  0052                     	ds	3
  1113  0055                     ??___fltol:	
  1114                           
  1115                           ; 1 bytes @ 0x35
  1116  0055                     	ds	1
  1117  0056                     ___fldiv@bexp:	
  1118  0056                     ___fladd@a:	
  1119                           ; 1 bytes @ 0x36
  1120                           
  1121                           
  1122                           ; 4 bytes @ 0x36
  1123  0056                     	ds	1
  1124  0057                     ___fldiv@aexp:	
  1125                           
  1126                           ; 1 bytes @ 0x37
  1127  0057                     	ds	3
  1128  005A                     ??___fladd:	
  1129  005A                     ___fltol@sign1:	
  1130                           ; 1 bytes @ 0x3A
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x3A
  1134  005A                     	ds	1
  1135  005B                     ___fltol@exp1:	
  1136                           
  1137                           ; 1 bytes @ 0x3B
  1138  005B                     	ds	1
  1139  005C                     ?_Lcd_Write_Int:	
  1140  005C                     Lcd_Write_Int@num:	
  1141                           ; 1 bytes @ 0x3C
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0x3C
  1145  005C                     	ds	2
  1146  005E                     Lcd_Write_Int@buff:	
  1147                           
  1148                           ; 17 bytes @ 0x3E
  1149  005E                     	ds	4
  1150  0062                     ___fladd@signs:	
  1151                           
  1152                           ; 1 bytes @ 0x42
  1153  0062                     	ds	1
  1154  0063                     ___fladd@aexp:	
  1155                           
  1156                           ; 1 bytes @ 0x43
  1157  0063                     	ds	1
  1158  0064                     ___fladd@bexp:	
  1159                           
  1160                           ; 1 bytes @ 0x44
  1161  0064                     	ds	1
  1162  0065                     ___fladd@grs:	
  1163                           
  1164                           ; 1 bytes @ 0x45
  1165  0065                     	ds	1
  1166  0066                     ?___flsub:	
  1167  0066                     ___flsub@a:	
  1168                           ; 4 bytes @ 0x46
  1169                           
  1170                           
  1171                           ; 4 bytes @ 0x46
  1172  0066                     	ds	4
  1173  006A                     ___flsub@b:	
  1174                           
  1175                           ; 4 bytes @ 0x4A
  1176  006A                     	ds	4
  1177  006E                     ??_Lcd_flotante:	
  1178                           
  1179                           ; 1 bytes @ 0x4E
  1180  006E                     	ds	1
  1181  006F                     ??_main:	
  1182                           
  1183                           ; 1 bytes @ 0x4F
  1184  006F                     	ds	1
  1185                           
  1186                           	psect	maintext
  1187  0CBC                     __pmaintext:	
  1188 ;;
  1189 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1190 ;;
  1191 ;; *************** function _main *****************
  1192 ;; Defined at:
  1193 ;;		line 66 in file "converter.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : B00/0
  1204 ;;		On exit  : 300/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0      20       0       0
  1209 ;;      Temps:          0       1       0       0       0
  1210 ;;      Totals:         0       1      20       0       0
  1211 ;;Total ram usage:       21 bytes
  1212 ;; Hardware stack levels required when called:    5
  1213 ;; This function calls:
  1214 ;;		_Lcd_Clear
  1215 ;;		_Lcd_Init
  1216 ;;		_Lcd_Set_Cursor
  1217 ;;		_Lcd_Write_Int
  1218 ;;		_Lcd_Write_String
  1219 ;;		_Lcd_flotante
  1220 ;;		___fladd
  1221 ;;		___fldiv
  1222 ;;		___flmul
  1223 ;;		___flsub
  1224 ;;		___fltol
  1225 ;;		___xxtofl
  1226 ;;		_conversion
  1227 ;;		_init
  1228 ;; This function is called by:
  1229 ;;		Startup code after reset
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _main
  1235  0CBC                     _main:	
  1236                           
  1237                           ;converter.c: 67:     init();
  1238                           
  1239                           ;incstack = 0
  1240                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1241  0CBC  160A  158A  2317  120A  158A  	fcall	_init
  1242                           
  1243                           ;converter.c: 68:     TRISA=0xFF;
  1244  0CC1  30FF               	movlw	255
  1245  0CC2  0085               	movwf	5	;volatile
  1246                           
  1247                           ;converter.c: 69:     TRISD=0x00;
  1248  0CC3  0188               	clrf	8	;volatile
  1249                           
  1250                           ;converter.c: 70:     TRISB=0;
  1251  0CC4  0186               	clrf	6	;volatile
  1252                           
  1253                           ;converter.c: 71:     TRISC=0;
  1254  0CC5  0187               	clrf	7	;volatile
  1255                           
  1256                           ;converter.c: 72:     PORTD=0;
  1257  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0CC7  0188               	clrf	8	;volatile
  1259                           
  1260                           ;converter.c: 73:     PORTB=0;
  1261  0CC8  0186               	clrf	6	;volatile
  1262                           
  1263                           ;converter.c: 74:     PORTC=0;
  1264  0CC9  0187               	clrf	7	;volatile
  1265                           
  1266                           ;converter.c: 75:     Lcd_Init();
  1267  0CCA  160A  118A  2000  120A  158A  	fcall	_Lcd_Init
  1268                           
  1269                           ;converter.c: 76:     Lcd_Clear();
  1270  0CCF  160A  158A  2326  120A  158A  	fcall	_Lcd_Clear
  1271  0CD4                     l3735:	
  1272                           
  1273                           ;converter.c: 80:         sensor1=conversion(0);
  1274  0CD4  3000               	movlw	0
  1275  0CD5  160A  158A  247E  120A  158A  	fcall	_conversion
  1276  0CDA  0871               	movf	?_conversion+1,w
  1277  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  1278  0CDC  00E7               	movwf	(_sensor1+1)^(0+128)
  1279  0CDD  0870               	movf	?_conversion,w
  1280  0CDE  00E6               	movwf	_sensor1^(0+128)
  1281                           
  1282                           ;converter.c: 81:         temp=(sensor1*5.0)/1023.0;
  1283  0CDF  3044               	movlw	68
  1284  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0CE1  00C1               	movwf	___fldiv@a+3
  1286  0CE2  307F               	movlw	127
  1287  0CE3  00C0               	movwf	___fldiv@a+2
  1288  0CE4  30C0               	movlw	192
  1289  0CE5  00BF               	movwf	___fldiv@a+1
  1290  0CE6  3000               	movlw	0
  1291  0CE7  00BE               	movwf	___fldiv@a
  1292  0CE8  3040               	movlw	64
  1293  0CE9  00A7               	movwf	___flmul@b+3
  1294  0CEA  30A0               	movlw	160
  1295  0CEB  00A6               	movwf	___flmul@b+2
  1296  0CEC  3000               	movlw	0
  1297  0CED  00A5               	movwf	___flmul@b+1
  1298  0CEE  3000               	movlw	0
  1299  0CEF  00A4               	movwf	___flmul@b
  1300  0CF0  1683               	bsf	3,5	;RP0=1, select bank1
  1301  0CF1  0866               	movf	_sensor1^(0+128),w
  1302  0CF2  00F0               	movwf	___xxtofl@val
  1303  0CF3  0867               	movf	(_sensor1+1)^(0+128),w
  1304  0CF4  00F1               	movwf	___xxtofl@val+1
  1305  0CF5  3000               	movlw	0
  1306  0CF6  1BF1               	btfsc	___xxtofl@val+1,7
  1307  0CF7  30FF               	movlw	255
  1308  0CF8  00F2               	movwf	___xxtofl@val+2
  1309  0CF9  00F3               	movwf	___xxtofl@val+3
  1310  0CFA  3001               	movlw	1
  1311  0CFB  160A  118A  205B  120A  158A  	fcall	___xxtofl
  1312  0D00  0873               	movf	?___xxtofl+3,w
  1313  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0D02  00AB               	movwf	___flmul@a+3
  1315  0D03  0872               	movf	?___xxtofl+2,w
  1316  0D04  00AA               	movwf	___flmul@a+2
  1317  0D05  0871               	movf	?___xxtofl+1,w
  1318  0D06  00A9               	movwf	___flmul@a+1
  1319  0D07  0870               	movf	?___xxtofl,w
  1320  0D08  00A8               	movwf	___flmul@a
  1321  0D09  160A  118A  250B  120A  158A  	fcall	___flmul
  1322  0D0E  0827               	movf	?___flmul+3,w
  1323  0D0F  00C5               	movwf	___fldiv@b+3
  1324  0D10  0826               	movf	?___flmul+2,w
  1325  0D11  00C4               	movwf	___fldiv@b+2
  1326  0D12  0825               	movf	?___flmul+1,w
  1327  0D13  00C3               	movwf	___fldiv@b+1
  1328  0D14  0824               	movf	?___flmul,w
  1329  0D15  00C2               	movwf	___fldiv@b
  1330  0D16  160A  118A  21A7  120A  158A  	fcall	___fldiv
  1331  0D1B  0841               	movf	?___fldiv+3,w
  1332  0D1C  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0D1D  00EF               	movwf	(_temp+3)^(0+128)
  1334  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0D1F  0840               	movf	?___fldiv+2,w
  1336  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  1337  0D21  00EE               	movwf	(_temp+2)^(0+128)
  1338  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0D23  083F               	movf	?___fldiv+1,w
  1340  0D24  1683               	bsf	3,5	;RP0=1, select bank1
  1341  0D25  00ED               	movwf	(_temp+1)^(0+128)
  1342  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0D27  083E               	movf	?___fldiv,w
  1344  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  1345  0D29  00EC               	movwf	_temp^(0+128)
  1346                           
  1347                           ;converter.c: 82:         aux=temp;
  1348  0D2A  086F               	movf	(_temp+3)^(0+128),w
  1349  0D2B  00EB               	movwf	(_aux+3)^(0+128)
  1350  0D2C  086E               	movf	(_temp+2)^(0+128),w
  1351  0D2D  00EA               	movwf	(_aux+2)^(0+128)
  1352  0D2E  086D               	movf	(_temp+1)^(0+128),w
  1353  0D2F  00E9               	movwf	(_aux+1)^(0+128)
  1354  0D30  086C               	movf	_temp^(0+128),w
  1355  0D31  00E8               	movwf	_aux^(0+128)
  1356                           
  1357                           ;converter.c: 83:         aux=-35.7*(aux*aux*aux)+440.7*aux*aux-1850*aux+2686;
  1358  0D32  3043               	movlw	67
  1359  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0D34  00A7               	movwf	___flmul@b+3
  1361  0D35  30DC               	movlw	220
  1362  0D36  00A6               	movwf	___flmul@b+2
  1363  0D37  3059               	movlw	89
  1364  0D38  00A5               	movwf	___flmul@b+1
  1365  0D39  309A               	movlw	154
  1366  0D3A  00A4               	movwf	___flmul@b
  1367  0D3B  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0D3C  086B               	movf	(_aux+3)^(0+128),w
  1369  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0D3E  00AB               	movwf	___flmul@a+3
  1371  0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  1372  0D40  086A               	movf	(_aux+2)^(0+128),w
  1373  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0D42  00AA               	movwf	___flmul@a+2
  1375  0D43  1683               	bsf	3,5	;RP0=1, select bank1
  1376  0D44  0869               	movf	(_aux+1)^(0+128),w
  1377  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0D46  00A9               	movwf	___flmul@a+1
  1379  0D47  1683               	bsf	3,5	;RP0=1, select bank1
  1380  0D48  0868               	movf	_aux^(0+128),w
  1381  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0D4A  00A8               	movwf	___flmul@a
  1383  0D4B  160A  118A  250B  120A  158A  	fcall	___flmul
  1384  0D50  0827               	movf	?___flmul+3,w
  1385  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  1386  0D52  00D1               	movwf	(_main$829+3)^(0+128)
  1387  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0D54  0826               	movf	?___flmul+2,w
  1389  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  1390  0D56  00D0               	movwf	(_main$829+2)^(0+128)
  1391  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0D58  0825               	movf	?___flmul+1,w
  1393  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  1394  0D5A  00CF               	movwf	(_main$829+1)^(0+128)
  1395  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0D5C  0824               	movf	?___flmul,w
  1397  0D5D  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0D5E  00CE               	movwf	_main$829^(0+128)
  1399                           
  1400                           ;converter.c: 83:         aux=-35.7*(aux*aux*aux)+440.7*aux*aux-1850*aux+2686;
  1401  0D5F  086B               	movf	(_aux+3)^(0+128),w
  1402  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0D61  00A7               	movwf	___flmul@b+3
  1404  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0D63  086A               	movf	(_aux+2)^(0+128),w
  1406  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0D65  00A6               	movwf	___flmul@b+2
  1408  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0D67  0869               	movf	(_aux+1)^(0+128),w
  1410  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0D69  00A5               	movwf	___flmul@b+1
  1412  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  1413  0D6B  0868               	movf	_aux^(0+128),w
  1414  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0D6D  00A4               	movwf	___flmul@b
  1416  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0D6F  086B               	movf	(_aux+3)^(0+128),w
  1418  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0D71  00AB               	movwf	___flmul@a+3
  1420  0D72  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0D73  086A               	movf	(_aux+2)^(0+128),w
  1422  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0D75  00AA               	movwf	___flmul@a+2
  1424  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  1425  0D77  0869               	movf	(_aux+1)^(0+128),w
  1426  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0D79  00A9               	movwf	___flmul@a+1
  1428  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  1429  0D7B  0868               	movf	_aux^(0+128),w
  1430  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0D7D  00A8               	movwf	___flmul@a
  1432  0D7E  160A  118A  250B  120A  158A  	fcall	___flmul
  1433  0D83  0827               	movf	?___flmul+3,w
  1434  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  1435  0D85  00D5               	movwf	(_main$830+3)^(0+128)
  1436  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0D87  0826               	movf	?___flmul+2,w
  1438  0D88  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0D89  00D4               	movwf	(_main$830+2)^(0+128)
  1440  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0D8B  0825               	movf	?___flmul+1,w
  1442  0D8C  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0D8D  00D3               	movwf	(_main$830+1)^(0+128)
  1444  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0D8F  0824               	movf	?___flmul,w
  1446  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0D91  00D2               	movwf	_main$830^(0+128)
  1448                           
  1449                           ;converter.c: 83:         aux=-35.7*(aux*aux*aux)+440.7*aux*aux-1850*aux+2686;
  1450  0D92  086B               	movf	(_aux+3)^(0+128),w
  1451  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0D94  00A7               	movwf	___flmul@b+3
  1453  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  1454  0D96  086A               	movf	(_aux+2)^(0+128),w
  1455  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0D98  00A6               	movwf	___flmul@b+2
  1457  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  1458  0D9A  0869               	movf	(_aux+1)^(0+128),w
  1459  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0D9C  00A5               	movwf	___flmul@b+1
  1461  0D9D  1683               	bsf	3,5	;RP0=1, select bank1
  1462  0D9E  0868               	movf	_aux^(0+128),w
  1463  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0DA0  00A4               	movwf	___flmul@b
  1465  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  1466  0DA2  0855               	movf	(_main$830+3)^(0+128),w
  1467  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0DA4  00AB               	movwf	___flmul@a+3
  1469  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0DA6  0854               	movf	(_main$830+2)^(0+128),w
  1471  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0DA8  00AA               	movwf	___flmul@a+2
  1473  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  1474  0DAA  0853               	movf	(_main$830+1)^(0+128),w
  1475  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0DAC  00A9               	movwf	___flmul@a+1
  1477  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0DAE  0852               	movf	_main$830^(0+128),w
  1479  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0DB0  00A8               	movwf	___flmul@a
  1481  0DB1  160A  118A  250B  120A  158A  	fcall	___flmul
  1482  0DB6  0827               	movf	?___flmul+3,w
  1483  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  1484  0DB8  00D9               	movwf	(_main$831+3)^(0+128)
  1485  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0DBA  0826               	movf	?___flmul+2,w
  1487  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  1488  0DBC  00D8               	movwf	(_main$831+2)^(0+128)
  1489  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0DBE  0825               	movf	?___flmul+1,w
  1491  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  1492  0DC0  00D7               	movwf	(_main$831+1)^(0+128)
  1493  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0DC2  0824               	movf	?___flmul,w
  1495  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0DC4  00D6               	movwf	_main$831^(0+128)
  1497                           
  1498                           ;converter.c: 83:         aux=-35.7*(aux*aux*aux)+440.7*aux*aux-1850*aux+2686;
  1499  0DC5  086B               	movf	(_aux+3)^(0+128),w
  1500  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0DC7  00A7               	movwf	___flmul@b+3
  1502  0DC8  1683               	bsf	3,5	;RP0=1, select bank1
  1503  0DC9  086A               	movf	(_aux+2)^(0+128),w
  1504  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0DCB  00A6               	movwf	___flmul@b+2
  1506  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0DCD  0869               	movf	(_aux+1)^(0+128),w
  1508  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0DCF  00A5               	movwf	___flmul@b+1
  1510  0DD0  1683               	bsf	3,5	;RP0=1, select bank1
  1511  0DD1  0868               	movf	_aux^(0+128),w
  1512  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0DD3  00A4               	movwf	___flmul@b
  1514  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0DD5  0851               	movf	(_main$829+3)^(0+128),w
  1516  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0DD7  00AB               	movwf	___flmul@a+3
  1518  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0DD9  0850               	movf	(_main$829+2)^(0+128),w
  1520  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0DDB  00AA               	movwf	___flmul@a+2
  1522  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0DDD  084F               	movf	(_main$829+1)^(0+128),w
  1524  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0DDF  00A9               	movwf	___flmul@a+1
  1526  0DE0  1683               	bsf	3,5	;RP0=1, select bank1
  1527  0DE1  084E               	movf	_main$829^(0+128),w
  1528  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0DE3  00A8               	movwf	___flmul@a
  1530  0DE4  160A  118A  250B  120A  158A  	fcall	___flmul
  1531  0DE9  0827               	movf	?___flmul+3,w
  1532  0DEA  00D5               	movwf	___fladd@b+3
  1533  0DEB  0826               	movf	?___flmul+2,w
  1534  0DEC  00D4               	movwf	___fladd@b+2
  1535  0DED  0825               	movf	?___flmul+1,w
  1536  0DEE  00D3               	movwf	___fladd@b+1
  1537  0DEF  0824               	movf	?___flmul,w
  1538  0DF0  00D2               	movwf	___fladd@b
  1539  0DF1  30C2               	movlw	194
  1540  0DF2  00A7               	movwf	___flmul@b+3
  1541  0DF3  300E               	movlw	14
  1542  0DF4  00A6               	movwf	___flmul@b+2
  1543  0DF5  30CC               	movlw	204
  1544  0DF6  00A5               	movwf	___flmul@b+1
  1545  0DF7  30CD               	movlw	205
  1546  0DF8  00A4               	movwf	___flmul@b
  1547  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  1548  0DFA  0859               	movf	(_main$831+3)^(0+128),w
  1549  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0DFC  00AB               	movwf	___flmul@a+3
  1551  0DFD  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0DFE  0858               	movf	(_main$831+2)^(0+128),w
  1553  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0E00  00AA               	movwf	___flmul@a+2
  1555  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0E02  0857               	movf	(_main$831+1)^(0+128),w
  1557  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  1558  0E04  00A9               	movwf	___flmul@a+1
  1559  0E05  1683               	bsf	3,5	;RP0=1, select bank1
  1560  0E06  0856               	movf	_main$831^(0+128),w
  1561  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0E08  00A8               	movwf	___flmul@a
  1563  0E09  160A  118A  250B  120A  158A  	fcall	___flmul
  1564  0E0E  0827               	movf	?___flmul+3,w
  1565  0E0F  00D9               	movwf	___fladd@a+3
  1566  0E10  0826               	movf	?___flmul+2,w
  1567  0E11  00D8               	movwf	___fladd@a+2
  1568  0E12  0825               	movf	?___flmul+1,w
  1569  0E13  00D7               	movwf	___fladd@a+1
  1570  0E14  0824               	movf	?___flmul,w
  1571  0E15  00D6               	movwf	___fladd@a
  1572  0E16  120A  118A  2089  120A  158A  	fcall	___fladd
  1573  0E1B  0855               	movf	?___fladd+3,w
  1574  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  1575  0E1D  00DD               	movwf	(_main$832+3)^(0+128)
  1576  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0E1F  0854               	movf	?___fladd+2,w
  1578  0E20  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0E21  00DC               	movwf	(_main$832+2)^(0+128)
  1580  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0E23  0853               	movf	?___fladd+1,w
  1582  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0E25  00DB               	movwf	(_main$832+1)^(0+128)
  1584  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0E27  0852               	movf	?___fladd,w
  1586  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  1587  0E29  00DA               	movwf	_main$832^(0+128)
  1588                           
  1589                           ;converter.c: 83:         aux=-35.7*(aux*aux*aux)+440.7*aux*aux-1850*aux+2686;
  1590  0E2A  3044               	movlw	68
  1591  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0E2C  00A7               	movwf	___flmul@b+3
  1593  0E2D  30E7               	movlw	231
  1594  0E2E  00A6               	movwf	___flmul@b+2
  1595  0E2F  3040               	movlw	64
  1596  0E30  00A5               	movwf	___flmul@b+1
  1597  0E31  3000               	movlw	0
  1598  0E32  00A4               	movwf	___flmul@b
  1599  0E33  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0E34  086B               	movf	(_aux+3)^(0+128),w
  1601  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0E36  00AB               	movwf	___flmul@a+3
  1603  0E37  1683               	bsf	3,5	;RP0=1, select bank1
  1604  0E38  086A               	movf	(_aux+2)^(0+128),w
  1605  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0E3A  00AA               	movwf	___flmul@a+2
  1607  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0E3C  0869               	movf	(_aux+1)^(0+128),w
  1609  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0E3E  00A9               	movwf	___flmul@a+1
  1611  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0E40  0868               	movf	_aux^(0+128),w
  1613  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0E42  00A8               	movwf	___flmul@a
  1615  0E43  160A  118A  250B  120A  158A  	fcall	___flmul
  1616  0E48  0827               	movf	?___flmul+3,w
  1617  0E49  00E9               	movwf	___flsub@a+3
  1618  0E4A  0826               	movf	?___flmul+2,w
  1619  0E4B  00E8               	movwf	___flsub@a+2
  1620  0E4C  0825               	movf	?___flmul+1,w
  1621  0E4D  00E7               	movwf	___flsub@a+1
  1622  0E4E  0824               	movf	?___flmul,w
  1623  0E4F  00E6               	movwf	___flsub@a
  1624  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  1625  0E51  085D               	movf	(_main$832+3)^(0+128),w
  1626  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0E53  00ED               	movwf	___flsub@b+3
  1628  0E54  1683               	bsf	3,5	;RP0=1, select bank1
  1629  0E55  085C               	movf	(_main$832+2)^(0+128),w
  1630  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0E57  00EC               	movwf	___flsub@b+2
  1632  0E58  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0E59  085B               	movf	(_main$832+1)^(0+128),w
  1634  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  1635  0E5B  00EB               	movwf	___flsub@b+1
  1636  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  1637  0E5D  085A               	movf	_main$832^(0+128),w
  1638  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0E5F  00EA               	movwf	___flsub@b
  1640  0E60  160A  158A  2387  120A  158A  	fcall	___flsub
  1641  0E65  0869               	movf	?___flsub+3,w
  1642  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0E67  00E1               	movwf	(_main$833+3)^(0+128)
  1644  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0E69  0868               	movf	?___flsub+2,w
  1646  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0E6B  00E0               	movwf	(_main$833+2)^(0+128)
  1648  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0E6D  0867               	movf	?___flsub+1,w
  1650  0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  1651  0E6F  00DF               	movwf	(_main$833+1)^(0+128)
  1652  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0E71  0866               	movf	?___flsub,w
  1654  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  1655  0E73  00DE               	movwf	_main$833^(0+128)
  1656                           
  1657                           ;converter.c: 83:         aux=-35.7*(aux*aux*aux)+440.7*aux*aux-1850*aux+2686;
  1658  0E74  3045               	movlw	69
  1659  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0E76  00D5               	movwf	___fladd@b+3
  1661  0E77  3027               	movlw	39
  1662  0E78  00D4               	movwf	___fladd@b+2
  1663  0E79  30E0               	movlw	224
  1664  0E7A  00D3               	movwf	___fladd@b+1
  1665  0E7B  3000               	movlw	0
  1666  0E7C  00D2               	movwf	___fladd@b
  1667  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0E7E  0861               	movf	(_main$833+3)^(0+128),w
  1669  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0E80  00D9               	movwf	___fladd@a+3
  1671  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  1672  0E82  0860               	movf	(_main$833+2)^(0+128),w
  1673  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0E84  00D8               	movwf	___fladd@a+2
  1675  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  1676  0E86  085F               	movf	(_main$833+1)^(0+128),w
  1677  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0E88  00D7               	movwf	___fladd@a+1
  1679  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0E8A  085E               	movf	_main$833^(0+128),w
  1681  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0E8C  00D6               	movwf	___fladd@a
  1683  0E8D  120A  118A  2089  120A  158A  	fcall	___fladd
  1684  0E92  0855               	movf	?___fladd+3,w
  1685  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  1686  0E94  00EB               	movwf	(_aux+3)^(0+128)
  1687  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0E96  0854               	movf	?___fladd+2,w
  1689  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  1690  0E98  00EA               	movwf	(_aux+2)^(0+128)
  1691  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0E9A  0853               	movf	?___fladd+1,w
  1693  0E9B  1683               	bsf	3,5	;RP0=1, select bank1
  1694  0E9C  00E9               	movwf	(_aux+1)^(0+128)
  1695  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0E9E  0852               	movf	?___fladd,w
  1697  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  1698  0EA0  00E8               	movwf	_aux^(0+128)
  1699                           
  1700                           ;converter.c: 85:         Lcd_Set_Cursor(1,1);
  1701  0EA1  01F4               	clrf	Lcd_Set_Cursor@b
  1702  0EA2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1703  0EA3  3001               	movlw	1
  1704  0EA4  160A  158A  2570  120A  158A  	fcall	_Lcd_Set_Cursor
  1705                           
  1706                           ;converter.c: 86:         Lcd_Write_String("NTC:");
  1707  0EA9  3097               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1708  0EAA  00F5               	movwf	Lcd_Write_String@a
  1709  0EAB  3080               	movlw	128
  1710  0EAC  00F6               	movwf	Lcd_Write_String@a+1
  1711  0EAD  160A  158A  24EB  120A  158A  	fcall	_Lcd_Write_String
  1712                           
  1713                           ;converter.c: 87:         Lcd_flotante(aux);
  1714  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  1715  0EB3  086B               	movf	(_aux+3)^(0+128),w
  1716  0EB4  00C6               	movwf	(Lcd_flotante@f+3)^(0+128)
  1717  0EB5  086A               	movf	(_aux+2)^(0+128),w
  1718  0EB6  00C5               	movwf	(Lcd_flotante@f+2)^(0+128)
  1719  0EB7  0869               	movf	(_aux+1)^(0+128),w
  1720  0EB8  00C4               	movwf	(Lcd_flotante@f+1)^(0+128)
  1721  0EB9  0868               	movf	_aux^(0+128),w
  1722  0EBA  00C3               	movwf	Lcd_flotante@f^(0+128)
  1723  0EBB  160A  158A  236B  120A  158A  	fcall	_Lcd_flotante
  1724                           
  1725                           ;converter.c: 89:         sensor2=conversion(1);
  1726  0EC0  3001               	movlw	1
  1727  0EC1  160A  158A  247E  120A  158A  	fcall	_conversion
  1728  0EC6  0871               	movf	?_conversion+1,w
  1729  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  1730  0EC8  00E5               	movwf	(_sensor2+1)^(0+128)
  1731  0EC9  0870               	movf	?_conversion,w
  1732  0ECA  00E4               	movwf	_sensor2^(0+128)
  1733                           
  1734                           ;converter.c: 90:         temp=(sensor2*5.0)/1023;
  1735  0ECB  3044               	movlw	68
  1736  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0ECD  00C1               	movwf	___fldiv@a+3
  1738  0ECE  307F               	movlw	127
  1739  0ECF  00C0               	movwf	___fldiv@a+2
  1740  0ED0  30C0               	movlw	192
  1741  0ED1  00BF               	movwf	___fldiv@a+1
  1742  0ED2  3000               	movlw	0
  1743  0ED3  00BE               	movwf	___fldiv@a
  1744  0ED4  3040               	movlw	64
  1745  0ED5  00A7               	movwf	___flmul@b+3
  1746  0ED6  30A0               	movlw	160
  1747  0ED7  00A6               	movwf	___flmul@b+2
  1748  0ED8  3000               	movlw	0
  1749  0ED9  00A5               	movwf	___flmul@b+1
  1750  0EDA  3000               	movlw	0
  1751  0EDB  00A4               	movwf	___flmul@b
  1752  0EDC  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0EDD  0864               	movf	_sensor2^(0+128),w
  1754  0EDE  00F0               	movwf	___xxtofl@val
  1755  0EDF  0865               	movf	(_sensor2+1)^(0+128),w
  1756  0EE0  00F1               	movwf	___xxtofl@val+1
  1757  0EE1  3000               	movlw	0
  1758  0EE2  1BF1               	btfsc	___xxtofl@val+1,7
  1759  0EE3  30FF               	movlw	255
  1760  0EE4  00F2               	movwf	___xxtofl@val+2
  1761  0EE5  00F3               	movwf	___xxtofl@val+3
  1762  0EE6  3001               	movlw	1
  1763  0EE7  160A  118A  205B  120A  158A  	fcall	___xxtofl
  1764  0EEC  0873               	movf	?___xxtofl+3,w
  1765  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0EEE  00AB               	movwf	___flmul@a+3
  1767  0EEF  0872               	movf	?___xxtofl+2,w
  1768  0EF0  00AA               	movwf	___flmul@a+2
  1769  0EF1  0871               	movf	?___xxtofl+1,w
  1770  0EF2  00A9               	movwf	___flmul@a+1
  1771  0EF3  0870               	movf	?___xxtofl,w
  1772  0EF4  00A8               	movwf	___flmul@a
  1773  0EF5  160A  118A  250B  120A  158A  	fcall	___flmul
  1774  0EFA  0827               	movf	?___flmul+3,w
  1775  0EFB  00C5               	movwf	___fldiv@b+3
  1776  0EFC  0826               	movf	?___flmul+2,w
  1777  0EFD  00C4               	movwf	___fldiv@b+2
  1778  0EFE  0825               	movf	?___flmul+1,w
  1779  0EFF  00C3               	movwf	___fldiv@b+1
  1780  0F00  0824               	movf	?___flmul,w
  1781  0F01  00C2               	movwf	___fldiv@b
  1782  0F02  160A  118A  21A7  120A  158A  	fcall	___fldiv
  1783  0F07  0841               	movf	?___fldiv+3,w
  1784  0F08  1683               	bsf	3,5	;RP0=1, select bank1
  1785  0F09  00EF               	movwf	(_temp+3)^(0+128)
  1786  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0F0B  0840               	movf	?___fldiv+2,w
  1788  0F0C  1683               	bsf	3,5	;RP0=1, select bank1
  1789  0F0D  00EE               	movwf	(_temp+2)^(0+128)
  1790  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0F0F  083F               	movf	?___fldiv+1,w
  1792  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0F11  00ED               	movwf	(_temp+1)^(0+128)
  1794  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0F13  083E               	movf	?___fldiv,w
  1796  0F14  1683               	bsf	3,5	;RP0=1, select bank1
  1797  0F15  00EC               	movwf	_temp^(0+128)
  1798                           
  1799                           ;converter.c: 91:         temp=(6*temp)+20;
  1800  0F16  3041               	movlw	65
  1801  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0F18  00D5               	movwf	___fladd@b+3
  1803  0F19  30A0               	movlw	160
  1804  0F1A  00D4               	movwf	___fladd@b+2
  1805  0F1B  3000               	movlw	0
  1806  0F1C  00D3               	movwf	___fladd@b+1
  1807  0F1D  3000               	movlw	0
  1808  0F1E  00D2               	movwf	___fladd@b
  1809  0F1F  3040               	movlw	64
  1810  0F20  00A7               	movwf	___flmul@b+3
  1811  0F21  30C0               	movlw	192
  1812  0F22  00A6               	movwf	___flmul@b+2
  1813  0F23  3000               	movlw	0
  1814  0F24  00A5               	movwf	___flmul@b+1
  1815  0F25  3000               	movlw	0
  1816  0F26  00A4               	movwf	___flmul@b
  1817  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  1818  0F28  086F               	movf	(_temp+3)^(0+128),w
  1819  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0F2A  00AB               	movwf	___flmul@a+3
  1821  0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0F2C  086E               	movf	(_temp+2)^(0+128),w
  1823  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0F2E  00AA               	movwf	___flmul@a+2
  1825  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  1826  0F30  086D               	movf	(_temp+1)^(0+128),w
  1827  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0F32  00A9               	movwf	___flmul@a+1
  1829  0F33  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0F34  086C               	movf	_temp^(0+128),w
  1831  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0F36  00A8               	movwf	___flmul@a
  1833  0F37  160A  118A  250B  120A  158A  	fcall	___flmul
  1834  0F3C  0827               	movf	?___flmul+3,w
  1835  0F3D  00D9               	movwf	___fladd@a+3
  1836  0F3E  0826               	movf	?___flmul+2,w
  1837  0F3F  00D8               	movwf	___fladd@a+2
  1838  0F40  0825               	movf	?___flmul+1,w
  1839  0F41  00D7               	movwf	___fladd@a+1
  1840  0F42  0824               	movf	?___flmul,w
  1841  0F43  00D6               	movwf	___fladd@a
  1842  0F44  120A  118A  2089  120A  158A  	fcall	___fladd
  1843  0F49  0855               	movf	?___fladd+3,w
  1844  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  1845  0F4B  00EF               	movwf	(_temp+3)^(0+128)
  1846  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0F4D  0854               	movf	?___fladd+2,w
  1848  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0F4F  00EE               	movwf	(_temp+2)^(0+128)
  1850  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0F51  0853               	movf	?___fladd+1,w
  1852  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  1853  0F53  00ED               	movwf	(_temp+1)^(0+128)
  1854  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0F55  0852               	movf	?___fladd,w
  1856  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  1857  0F57  00EC               	movwf	_temp^(0+128)
  1858                           
  1859                           ;converter.c: 92:         Lcd_Set_Cursor(1,10);
  1860  0F58  300A               	movlw	10
  1861  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0F5A  00EF               	movwf	??_main
  1863  0F5B  086F               	movf	??_main,w
  1864  0F5C  00F4               	movwf	Lcd_Set_Cursor@b
  1865  0F5D  3001               	movlw	1
  1866  0F5E  160A  158A  2570  120A  158A  	fcall	_Lcd_Set_Cursor
  1867                           
  1868                           ;converter.c: 93:         Lcd_Write_String("LM35:");
  1869  0F63  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1870  0F64  00F5               	movwf	Lcd_Write_String@a
  1871  0F65  3080               	movlw	128
  1872  0F66  00F6               	movwf	Lcd_Write_String@a+1
  1873  0F67  160A  158A  24EB  120A  158A  	fcall	_Lcd_Write_String
  1874                           
  1875                           ;converter.c: 94:         Lcd_Write_Int((int)temp);
  1876  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0F6D  086F               	movf	(_temp+3)^(0+128),w
  1878  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0F6F  00D4               	movwf	___fltol@f1+3
  1880  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0F71  086E               	movf	(_temp+2)^(0+128),w
  1882  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0F73  00D3               	movwf	___fltol@f1+2
  1884  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  1885  0F75  086D               	movf	(_temp+1)^(0+128),w
  1886  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0F77  00D2               	movwf	___fltol@f1+1
  1888  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0F79  086C               	movf	_temp^(0+128),w
  1890  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0F7B  00D1               	movwf	___fltol@f1
  1892  0F7C  120A  118A  201E  120A  158A  	fcall	___fltol
  1893  0F81  0852               	movf	?___fltol+1,w
  1894  0F82  00DD               	movwf	Lcd_Write_Int@num+1
  1895  0F83  0851               	movf	?___fltol,w
  1896  0F84  00DC               	movwf	Lcd_Write_Int@num
  1897  0F85  160A  158A  2355  120A  158A  	fcall	_Lcd_Write_Int
  1898                           
  1899                           ;converter.c: 96:         sensor3=conversion(2);
  1900  0F8A  3002               	movlw	2
  1901  0F8B  160A  158A  247E  120A  158A  	fcall	_conversion
  1902  0F90  0871               	movf	?_conversion+1,w
  1903  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  1904  0F92  00E3               	movwf	(_sensor3+1)^(0+128)
  1905  0F93  0870               	movf	?_conversion,w
  1906  0F94  00E2               	movwf	_sensor3^(0+128)
  1907                           
  1908                           ;converter.c: 97:         temp=(sensor3*5.0)/1023;
  1909  0F95  3044               	movlw	68
  1910  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0F97  00C1               	movwf	___fldiv@a+3
  1912  0F98  307F               	movlw	127
  1913  0F99  00C0               	movwf	___fldiv@a+2
  1914  0F9A  30C0               	movlw	192
  1915  0F9B  00BF               	movwf	___fldiv@a+1
  1916  0F9C  3000               	movlw	0
  1917  0F9D  00BE               	movwf	___fldiv@a
  1918  0F9E  3040               	movlw	64
  1919  0F9F  00A7               	movwf	___flmul@b+3
  1920  0FA0  30A0               	movlw	160
  1921  0FA1  00A6               	movwf	___flmul@b+2
  1922  0FA2  3000               	movlw	0
  1923  0FA3  00A5               	movwf	___flmul@b+1
  1924  0FA4  3000               	movlw	0
  1925  0FA5  00A4               	movwf	___flmul@b
  1926  0FA6  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0FA7  0862               	movf	_sensor3^(0+128),w
  1928  0FA8  00F0               	movwf	___xxtofl@val
  1929  0FA9  0863               	movf	(_sensor3+1)^(0+128),w
  1930  0FAA  00F1               	movwf	___xxtofl@val+1
  1931  0FAB  3000               	movlw	0
  1932  0FAC  1BF1               	btfsc	___xxtofl@val+1,7
  1933  0FAD  30FF               	movlw	255
  1934  0FAE  00F2               	movwf	___xxtofl@val+2
  1935  0FAF  00F3               	movwf	___xxtofl@val+3
  1936  0FB0  3001               	movlw	1
  1937  0FB1  160A  118A  205B  120A  158A  	fcall	___xxtofl
  1938  0FB6  0873               	movf	?___xxtofl+3,w
  1939  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0FB8  00AB               	movwf	___flmul@a+3
  1941  0FB9  0872               	movf	?___xxtofl+2,w
  1942  0FBA  00AA               	movwf	___flmul@a+2
  1943  0FBB  0871               	movf	?___xxtofl+1,w
  1944  0FBC  00A9               	movwf	___flmul@a+1
  1945  0FBD  0870               	movf	?___xxtofl,w
  1946  0FBE  00A8               	movwf	___flmul@a
  1947  0FBF  160A  118A  250B  120A  158A  	fcall	___flmul
  1948  0FC4  0827               	movf	?___flmul+3,w
  1949  0FC5  00C5               	movwf	___fldiv@b+3
  1950  0FC6  0826               	movf	?___flmul+2,w
  1951  0FC7  00C4               	movwf	___fldiv@b+2
  1952  0FC8  0825               	movf	?___flmul+1,w
  1953  0FC9  00C3               	movwf	___fldiv@b+1
  1954  0FCA  0824               	movf	?___flmul,w
  1955  0FCB  00C2               	movwf	___fldiv@b
  1956  0FCC  160A  118A  21A7  120A  158A  	fcall	___fldiv
  1957  0FD1  0841               	movf	?___fldiv+3,w
  1958  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  1959  0FD3  00EF               	movwf	(_temp+3)^(0+128)
  1960  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0FD5  0840               	movf	?___fldiv+2,w
  1962  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0FD7  00EE               	movwf	(_temp+2)^(0+128)
  1964  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0FD9  083F               	movf	?___fldiv+1,w
  1966  0FDA  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0FDB  00ED               	movwf	(_temp+1)^(0+128)
  1968  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0FDD  083E               	movf	?___fldiv,w
  1970  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0FDF  00EC               	movwf	_temp^(0+128)
  1972                           
  1973                           ;converter.c: 98:         Lcd_Set_Cursor(2,1);
  1974  0FE0  01F4               	clrf	Lcd_Set_Cursor@b
  1975  0FE1  0AF4               	incf	Lcd_Set_Cursor@b,f
  1976  0FE2  3002               	movlw	2
  1977  0FE3  160A  158A  2570  120A  158A  	fcall	_Lcd_Set_Cursor
  1978                           
  1979                           ;converter.c: 99:         Lcd_Write_String("POT:");
  1980  0FE8  309C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1981  0FE9  00F5               	movwf	Lcd_Write_String@a
  1982  0FEA  3080               	movlw	128
  1983  0FEB  00F6               	movwf	Lcd_Write_String@a+1
  1984  0FEC  160A  158A  24EB  120A  158A  	fcall	_Lcd_Write_String
  1985                           
  1986                           ;converter.c: 100:         Lcd_flotante(temp);
  1987  0FF1  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0FF2  086F               	movf	(_temp+3)^(0+128),w
  1989  0FF3  00C6               	movwf	(Lcd_flotante@f+3)^(0+128)
  1990  0FF4  086E               	movf	(_temp+2)^(0+128),w
  1991  0FF5  00C5               	movwf	(Lcd_flotante@f+2)^(0+128)
  1992  0FF6  086D               	movf	(_temp+1)^(0+128),w
  1993  0FF7  00C4               	movwf	(Lcd_flotante@f+1)^(0+128)
  1994  0FF8  086C               	movf	_temp^(0+128),w
  1995  0FF9  00C3               	movwf	Lcd_flotante@f^(0+128)
  1996  0FFA  160A  158A  236B  120A  158A  	fcall	_Lcd_flotante
  1997  0FFF  2CD4               	goto	l3735
  1998  1000                     __end_of_main:	
  1999                           
  2000                           	psect	text1
  2001  1B17                     __ptext1:	
  2002 ;; *************** function _init *****************
  2003 ;; Defined at:
  2004 ;;		line 37 in file "converter.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg
  2013 ;; Tracked objects:
  2014 ;;		On entry : B00/0
  2015 ;;		On exit  : B00/100
  2016 ;;		Unchanged: 800/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0
  2021 ;;      Totals:         0       0       0       0       0
  2022 ;;Total ram usage:        0 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _init
  2033  1B17                     _init:	
  2034                           
  2035                           ;converter.c: 38:      ADCON0 = 0b10000001;
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _init: [wreg]
  2039  1B17  3081               	movlw	129
  2040  1B18  009F               	movwf	31	;volatile
  2041                           
  2042                           ;converter.c: 39:      ADCON1 = 0b10000000;
  2043  1B19  3080               	movlw	128
  2044  1B1A  1683               	bsf	3,5	;RP0=1, select bank1
  2045  1B1B  009F               	movwf	31	;volatile
  2046  1B1C  0008               	return
  2047  1B1D                     __end_of_init:	
  2048                           
  2049                           	psect	text2
  2050  1C7E                     __ptext2:	
  2051 ;; *************** function _conversion *****************
  2052 ;; Defined at:
  2053 ;;		line 42 in file "converter.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  canal           1    wreg     unsigned char 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  canal           1    6[COMMON] unsigned char 
  2058 ;;  resultado       2    4[COMMON] int 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2    0[COMMON] int 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 300/0
  2065 ;;		On exit  : 200/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         2       0       0       0       0
  2069 ;;      Locals:         3       0       0       0       0
  2070 ;;      Temps:          2       0       0       0       0
  2071 ;;      Totals:         7       0       0       0       0
  2072 ;;Total ram usage:        7 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _conversion
  2083  1C7E                     _conversion:	
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _conversion: [wreg+status,2+status,0]
  2087                           ;conversion@canal stored from wreg
  2088  1C7E  00F6               	movwf	conversion@canal
  2089                           
  2090                           ;converter.c: 44:     if(canal>3){
  2091  1C7F  3004               	movlw	4
  2092  1C80  0276               	subwf	conversion@canal,w
  2093  1C81  1C03               	skipc
  2094  1C82  2C86               	goto	l3561
  2095                           
  2096                           ;converter.c: 45:         return 0;
  2097  1C83  01F0               	clrf	?_conversion
  2098  1C84  01F1               	clrf	?_conversion+1
  2099  1C85  0008               	return
  2100  1C86                     l3561:	
  2101                           
  2102                           ;converter.c: 47:     ADCON0 &=0b11000101;
  2103  1C86  30C5               	movlw	197
  2104  1C87  00F2               	movwf	??_conversion
  2105  1C88  0872               	movf	??_conversion,w
  2106  1C89  059F               	andwf	31,f	;volatile
  2107                           
  2108                           ;converter.c: 48:     ADCON0 |= canal<<3;
  2109  1C8A  0876               	movf	conversion@canal,w	;volatile
  2110  1C8B  00F2               	movwf	??_conversion
  2111  1C8C  3002               	movlw	2
  2112  1C8D                     u5945:	
  2113  1C8D  1003               	clrc
  2114  1C8E  0DF2               	rlf	??_conversion,f
  2115  1C8F  3EFF               	addlw	-1
  2116  1C90  1D03               	skipz
  2117  1C91  2C8D               	goto	u5945
  2118  1C92  1003               	clrc
  2119  1C93  0D72               	rlf	??_conversion,w
  2120  1C94  00F3               	movwf	??_conversion+1
  2121  1C95  0873               	movf	??_conversion+1,w
  2122  1C96  049F               	iorwf	31,f	;volatile
  2123                           
  2124                           ;converter.c: 49:     _delay((unsigned long)((3)*(4000000/4000.0)));
  2125  1C97  3004               	movlw	4
  2126  1C98  00F3               	movwf	??_conversion+1
  2127  1C99  30E4               	movlw	228
  2128  1C9A  00F2               	movwf	??_conversion
  2129  1C9B                     u6257:	
  2130  1C9B  0BF2               	decfsz	??_conversion,f
  2131  1C9C  2C9B               	goto	u6257
  2132  1C9D  0BF3               	decfsz	??_conversion+1,f
  2133  1C9E  2C9B               	goto	u6257
  2134  1C9F  0000               	nop
  2135                           
  2136                           ;converter.c: 50:     GO_nDONE=1;
  2137  1CA0  1283               	bcf	3,5	;RP0=0, select bank0
  2138  1CA1  1303               	bcf	3,6	;RP1=0, select bank0
  2139  1CA2  151F               	bsf	31,2	;volatile
  2140  1CA3                     l98:	
  2141                           ;converter.c: 51:     while(GO_nDONE);
  2142                           
  2143  1CA3  191F               	btfsc	31,2	;volatile
  2144  1CA4  2CA3               	goto	l98
  2145                           
  2146                           ;converter.c: 52:     resultado= ((ADRESH<<8)+ADRESL);
  2147  1CA5  081E               	movf	30,w	;volatile
  2148  1CA6  00F5               	movwf	conversion@resultado+1
  2149  1CA7  1683               	bsf	3,5	;RP0=1, select bank1
  2150  1CA8  081E               	movf	30,w	;volatile
  2151  1CA9  00F4               	movwf	conversion@resultado
  2152                           
  2153                           ;converter.c: 53:     return resultado;
  2154  1CAA  0875               	movf	conversion@resultado+1,w
  2155  1CAB  00F1               	movwf	?_conversion+1
  2156  1CAC  0874               	movf	conversion@resultado,w
  2157  1CAD  00F0               	movwf	?_conversion
  2158  1CAE  0008               	return
  2159  1CAF                     __end_of_conversion:	
  2160                           
  2161                           	psect	text3
  2162  11A7                     __ptext3:	
  2163 ;; *************** function ___fldiv *****************
  2164 ;; Defined at:
  2165 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  a               4   30[BANK0 ] int 
  2168 ;;  b               4   34[BANK0 ] int 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  grs             4   50[BANK0 ] unsigned long 
  2171 ;;  rem             4   43[BANK0 ] unsigned long 
  2172 ;;  new_exp         2   48[BANK0 ] int 
  2173 ;;  aexp            1   55[BANK0 ] unsigned char 
  2174 ;;  bexp            1   54[BANK0 ] unsigned char 
  2175 ;;  sign            1   47[BANK0 ] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  4   30[BANK0 ] unsigned char 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0, btemp+1
  2180 ;; Tracked objects:
  2181 ;;		On entry : 300/0
  2182 ;;		On exit  : 300/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2185 ;;      Params:         0       8       0       0       0
  2186 ;;      Locals:         0      13       0       0       0
  2187 ;;      Temps:          0       5       0       0       0
  2188 ;;      Totals:         0      26       0       0       0
  2189 ;;Total ram usage:       26 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function ___fldiv
  2200  11A7                     ___fldiv:	
  2201                           
  2202                           ;incstack = 0
  2203                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  2204  11A7  0845               	movf	___fldiv@b+3,w
  2205  11A8  3980               	andlw	128
  2206  11A9  00C6               	movwf	??___fldiv
  2207  11AA  0846               	movf	??___fldiv,w
  2208  11AB  00CF               	movwf	___fldiv@sign
  2209  11AC  0845               	movf	___fldiv@b+3,w
  2210  11AD  00C6               	movwf	??___fldiv
  2211  11AE  0746               	addwf	??___fldiv,w
  2212  11AF  00C7               	movwf	??___fldiv+1
  2213  11B0  0847               	movf	??___fldiv+1,w
  2214  11B1  00D6               	movwf	___fldiv@bexp
  2215  11B2  1BC4               	btfsc	___fldiv@b+2,7
  2216  11B3  1456               	bsf	___fldiv@bexp,0
  2217  11B4  0856               	movf	___fldiv@bexp,w
  2218  11B5  1903               	btfsc	3,2
  2219  11B6  29C5               	goto	l3591
  2220  11B7  0A56               	incf	___fldiv@bexp,w
  2221  11B8  1D03               	btfss	3,2
  2222  11B9  29C2               	goto	l3587
  2223  11BA  3000               	movlw	0
  2224  11BB  00C5               	movwf	___fldiv@b+3
  2225  11BC  3000               	movlw	0
  2226  11BD  00C4               	movwf	___fldiv@b+2
  2227  11BE  3000               	movlw	0
  2228  11BF  00C3               	movwf	___fldiv@b+1
  2229  11C0  3000               	movlw	0
  2230  11C1  00C2               	movwf	___fldiv@b
  2231  11C2                     l3587:	
  2232  11C2  17C4               	bsf	___fldiv@b+2,7
  2233  11C3  01C5               	clrf	___fldiv@b+3
  2234  11C4  29CD               	goto	l3593
  2235  11C5                     l3591:	
  2236  11C5  3000               	movlw	0
  2237  11C6  00C5               	movwf	___fldiv@b+3
  2238  11C7  3000               	movlw	0
  2239  11C8  00C4               	movwf	___fldiv@b+2
  2240  11C9  3000               	movlw	0
  2241  11CA  00C3               	movwf	___fldiv@b+1
  2242  11CB  3000               	movlw	0
  2243  11CC  00C2               	movwf	___fldiv@b
  2244  11CD                     l3593:	
  2245  11CD  0841               	movf	___fldiv@a+3,w
  2246  11CE  3980               	andlw	128
  2247  11CF  00C6               	movwf	??___fldiv
  2248  11D0  0846               	movf	??___fldiv,w
  2249  11D1  06CF               	xorwf	___fldiv@sign,f
  2250  11D2  0841               	movf	___fldiv@a+3,w
  2251  11D3  00C6               	movwf	??___fldiv
  2252  11D4  0746               	addwf	??___fldiv,w
  2253  11D5  00C7               	movwf	??___fldiv+1
  2254  11D6  0847               	movf	??___fldiv+1,w
  2255  11D7  00D7               	movwf	___fldiv@aexp
  2256  11D8  1BC0               	btfsc	___fldiv@a+2,7
  2257  11D9  1457               	bsf	___fldiv@aexp,0
  2258  11DA  0857               	movf	___fldiv@aexp,w
  2259  11DB  1903               	btfsc	3,2
  2260  11DC  29EB               	goto	l3611
  2261  11DD  0A57               	incf	___fldiv@aexp,w
  2262  11DE  1D03               	btfss	3,2
  2263  11DF  29E8               	goto	l3607
  2264  11E0  3000               	movlw	0
  2265  11E1  00C1               	movwf	___fldiv@a+3
  2266  11E2  3000               	movlw	0
  2267  11E3  00C0               	movwf	___fldiv@a+2
  2268  11E4  3000               	movlw	0
  2269  11E5  00BF               	movwf	___fldiv@a+1
  2270  11E6  3000               	movlw	0
  2271  11E7  00BE               	movwf	___fldiv@a
  2272  11E8                     l3607:	
  2273  11E8  17C0               	bsf	___fldiv@a+2,7
  2274  11E9  01C1               	clrf	___fldiv@a+3
  2275  11EA  29F3               	goto	l673
  2276  11EB                     l3611:	
  2277  11EB  3000               	movlw	0
  2278  11EC  00C1               	movwf	___fldiv@a+3
  2279  11ED  3000               	movlw	0
  2280  11EE  00C0               	movwf	___fldiv@a+2
  2281  11EF  3000               	movlw	0
  2282  11F0  00BF               	movwf	___fldiv@a+1
  2283  11F1  3000               	movlw	0
  2284  11F2  00BE               	movwf	___fldiv@a
  2285  11F3                     l673:	
  2286  11F3  0841               	movf	___fldiv@a+3,w
  2287  11F4  0440               	iorwf	___fldiv@a+2,w
  2288  11F5  043F               	iorwf	___fldiv@a+1,w
  2289  11F6  043E               	iorwf	___fldiv@a,w
  2290  11F7  1D03               	skipz
  2291  11F8  2A12               	goto	l3621
  2292  11F9  3000               	movlw	0
  2293  11FA  00C5               	movwf	___fldiv@b+3
  2294  11FB  3000               	movlw	0
  2295  11FC  00C4               	movwf	___fldiv@b+2
  2296  11FD  3000               	movlw	0
  2297  11FE  00C3               	movwf	___fldiv@b+1
  2298  11FF  3000               	movlw	0
  2299  1200  00C2               	movwf	___fldiv@b
  2300  1201  3080               	movlw	128
  2301  1202  04C4               	iorwf	___fldiv@b+2,f
  2302  1203  307F               	movlw	127
  2303  1204  04C5               	iorwf	___fldiv@b+3,f
  2304  1205                     L1:	
  2305  1205  084F               	movf	___fldiv@sign,w
  2306  1206  00C6               	movwf	??___fldiv
  2307  1207  0846               	movf	??___fldiv,w
  2308  1208  04C5               	iorwf	___fldiv@b+3,f
  2309  1209  0845               	movf	___fldiv@b+3,w
  2310  120A  00C1               	movwf	?___fldiv+3
  2311  120B  0844               	movf	___fldiv@b+2,w
  2312  120C  00C0               	movwf	?___fldiv+2
  2313  120D  0843               	movf	___fldiv@b+1,w
  2314  120E  00BF               	movwf	?___fldiv+1
  2315  120F  0842               	movf	___fldiv@b,w
  2316  1210  00BE               	movwf	?___fldiv
  2317  1211  0008               	return
  2318  1212                     l3621:	
  2319  1212  0856               	movf	___fldiv@bexp,w
  2320  1213  1D03               	btfss	3,2
  2321  1214  2A1E               	goto	l3627
  2322  1215  3000               	movlw	0
  2323  1216  00C1               	movwf	?___fldiv+3
  2324  1217  3000               	movlw	0
  2325  1218  00C0               	movwf	?___fldiv+2
  2326  1219  3000               	movlw	0
  2327  121A  00BF               	movwf	?___fldiv+1
  2328  121B  3000               	movlw	0
  2329  121C  00BE               	movwf	?___fldiv
  2330  121D  0008               	return
  2331  121E                     l3627:	
  2332  121E  0856               	movf	___fldiv@bexp,w
  2333  121F  00C6               	movwf	??___fldiv
  2334  1220  01C7               	clrf	??___fldiv+1
  2335  1221  0847               	movf	??___fldiv+1,w
  2336  1222  00C9               	movwf	??___fldiv+3
  2337  1223  0857               	movf	___fldiv@aexp,w
  2338  1224  0246               	subwf	??___fldiv,w
  2339  1225  00C8               	movwf	??___fldiv+2
  2340  1226  1C03               	skipc
  2341  1227  03C9               	decf	??___fldiv+3,f
  2342  1228  0848               	movf	??___fldiv+2,w
  2343  1229  3E7F               	addlw	127
  2344  122A  00D0               	movwf	___fldiv@new_exp
  2345  122B  0849               	movf	??___fldiv+3,w
  2346  122C  1803               	skipnc
  2347  122D  3E01               	addlw	1
  2348  122E  3E00               	addlw	0
  2349  122F  00D1               	movwf	___fldiv@new_exp+1
  2350  1230  0845               	movf	___fldiv@b+3,w
  2351  1231  00CE               	movwf	___fldiv@rem+3
  2352  1232  0844               	movf	___fldiv@b+2,w
  2353  1233  00CD               	movwf	___fldiv@rem+2
  2354  1234  0843               	movf	___fldiv@b+1,w
  2355  1235  00CC               	movwf	___fldiv@rem+1
  2356  1236  0842               	movf	___fldiv@b,w
  2357  1237  00CB               	movwf	___fldiv@rem
  2358  1238  3000               	movlw	0
  2359  1239  00C5               	movwf	___fldiv@b+3
  2360  123A  3000               	movlw	0
  2361  123B  00C4               	movwf	___fldiv@b+2
  2362  123C  3000               	movlw	0
  2363  123D  00C3               	movwf	___fldiv@b+1
  2364  123E  3000               	movlw	0
  2365  123F  00C2               	movwf	___fldiv@b
  2366  1240  3000               	movlw	0
  2367  1241  00D5               	movwf	___fldiv@grs+3
  2368  1242  3000               	movlw	0
  2369  1243  00D4               	movwf	___fldiv@grs+2
  2370  1244  3000               	movlw	0
  2371  1245  00D3               	movwf	___fldiv@grs+1
  2372  1246  3000               	movlw	0
  2373  1247  00D2               	movwf	___fldiv@grs
  2374  1248  01D7               	clrf	___fldiv@aexp
  2375  1249                     l3655:	
  2376  1249  301A               	movlw	26
  2377  124A  0257               	subwf	___fldiv@aexp,w
  2378  124B  1803               	btfsc	3,0
  2379  124C  2A91               	goto	l3657
  2380  124D  0857               	movf	___fldiv@aexp,w
  2381  124E  1903               	btfsc	3,2
  2382  124F  2A6D               	goto	l3647
  2383  1250  3001               	movlw	1
  2384  1251  00C6               	movwf	??___fldiv
  2385  1252                     u6055:	
  2386  1252  1003               	clrc
  2387  1253  0DCB               	rlf	___fldiv@rem,f
  2388  1254  0DCC               	rlf	___fldiv@rem+1,f
  2389  1255  0DCD               	rlf	___fldiv@rem+2,f
  2390  1256  0DCE               	rlf	___fldiv@rem+3,f
  2391  1257  0BC6               	decfsz	??___fldiv,f
  2392  1258  2A52               	goto	u6055
  2393  1259  3001               	movlw	1
  2394  125A  00C6               	movwf	??___fldiv
  2395  125B                     u6065:	
  2396  125B  1003               	clrc
  2397  125C  0DC2               	rlf	___fldiv@b,f
  2398  125D  0DC3               	rlf	___fldiv@b+1,f
  2399  125E  0DC4               	rlf	___fldiv@b+2,f
  2400  125F  0DC5               	rlf	___fldiv@b+3,f
  2401  1260  0BC6               	decfsz	??___fldiv,f
  2402  1261  2A5B               	goto	u6065
  2403  1262  1BD5               	btfsc	___fldiv@grs+3,7
  2404  1263  1442               	bsf	___fldiv@b,0
  2405  1264  3001               	movlw	1
  2406  1265  00C6               	movwf	??___fldiv
  2407  1266                     u6085:	
  2408  1266  1003               	clrc
  2409  1267  0DD2               	rlf	___fldiv@grs,f
  2410  1268  0DD3               	rlf	___fldiv@grs+1,f
  2411  1269  0DD4               	rlf	___fldiv@grs+2,f
  2412  126A  0DD5               	rlf	___fldiv@grs+3,f
  2413  126B  0BC6               	decfsz	??___fldiv,f
  2414  126C  2A66               	goto	u6085
  2415  126D                     l3647:	
  2416  126D  0841               	movf	___fldiv@a+3,w
  2417  126E  024E               	subwf	___fldiv@rem+3,w
  2418  126F  1D03               	skipz
  2419  1270  2A7B               	goto	u6095
  2420  1271  0840               	movf	___fldiv@a+2,w
  2421  1272  024D               	subwf	___fldiv@rem+2,w
  2422  1273  1D03               	skipz
  2423  1274  2A7B               	goto	u6095
  2424  1275  083F               	movf	___fldiv@a+1,w
  2425  1276  024C               	subwf	___fldiv@rem+1,w
  2426  1277  1D03               	skipz
  2427  1278  2A7B               	goto	u6095
  2428  1279  083E               	movf	___fldiv@a,w
  2429  127A  024B               	subwf	___fldiv@rem,w
  2430  127B                     u6095:	
  2431  127B  1C03               	skipc
  2432  127C  2A8C               	goto	l3653
  2433  127D  1755               	bsf	___fldiv@grs+3,6
  2434  127E  083E               	movf	___fldiv@a,w
  2435  127F  02CB               	subwf	___fldiv@rem,f
  2436  1280  083F               	movf	___fldiv@a+1,w
  2437  1281  1C03               	skipc
  2438  1282  0F3F               	incfsz	___fldiv@a+1,w
  2439  1283  02CC               	subwf	___fldiv@rem+1,f
  2440  1284  0840               	movf	___fldiv@a+2,w
  2441  1285  1C03               	skipc
  2442  1286  0F40               	incfsz	___fldiv@a+2,w
  2443  1287  02CD               	subwf	___fldiv@rem+2,f
  2444  1288  0841               	movf	___fldiv@a+3,w
  2445  1289  1C03               	skipc
  2446  128A  0F41               	incfsz	___fldiv@a+3,w
  2447  128B  02CE               	subwf	___fldiv@rem+3,f
  2448  128C                     l3653:	
  2449  128C  3001               	movlw	1
  2450  128D  00C6               	movwf	??___fldiv
  2451  128E  0846               	movf	??___fldiv,w
  2452  128F  07D7               	addwf	___fldiv@aexp,f
  2453  1290  2A49               	goto	l3655
  2454  1291                     l3657:	
  2455  1291  084E               	movf	___fldiv@rem+3,w
  2456  1292  044D               	iorwf	___fldiv@rem+2,w
  2457  1293  044C               	iorwf	___fldiv@rem+1,w
  2458  1294  044B               	iorwf	___fldiv@rem,w
  2459  1295  1D03               	btfss	3,2
  2460  1296  1452               	bsf	___fldiv@grs,0
  2461  1297                     l3671:	
  2462  1297  1BC4               	btfsc	___fldiv@b+2,7
  2463  1298  2AB4               	goto	l3673
  2464  1299  3001               	movlw	1
  2465  129A  00C6               	movwf	??___fldiv
  2466  129B                     u6125:	
  2467  129B  1003               	clrc
  2468  129C  0DC2               	rlf	___fldiv@b,f
  2469  129D  0DC3               	rlf	___fldiv@b+1,f
  2470  129E  0DC4               	rlf	___fldiv@b+2,f
  2471  129F  0DC5               	rlf	___fldiv@b+3,f
  2472  12A0  0BC6               	decfsz	??___fldiv,f
  2473  12A1  2A9B               	goto	u6125
  2474  12A2  1BD5               	btfsc	___fldiv@grs+3,7
  2475  12A3  1442               	bsf	___fldiv@b,0
  2476  12A4  3001               	movlw	1
  2477  12A5  00C6               	movwf	??___fldiv
  2478  12A6                     u6145:	
  2479  12A6  1003               	clrc
  2480  12A7  0DD2               	rlf	___fldiv@grs,f
  2481  12A8  0DD3               	rlf	___fldiv@grs+1,f
  2482  12A9  0DD4               	rlf	___fldiv@grs+2,f
  2483  12AA  0DD5               	rlf	___fldiv@grs+3,f
  2484  12AB  0BC6               	decfsz	??___fldiv,f
  2485  12AC  2AA6               	goto	u6145
  2486  12AD  30FF               	movlw	255
  2487  12AE  07D0               	addwf	___fldiv@new_exp,f
  2488  12AF  1803               	skipnc
  2489  12B0  0AD1               	incf	___fldiv@new_exp+1,f
  2490  12B1  30FF               	movlw	255
  2491  12B2  07D1               	addwf	___fldiv@new_exp+1,f
  2492  12B3  2A97               	goto	l3671
  2493  12B4                     l3673:	
  2494  12B4  01D7               	clrf	___fldiv@aexp
  2495  12B5  1FD5               	btfss	___fldiv@grs+3,7
  2496  12B6  2ACD               	goto	l3683
  2497  12B7  30FF               	movlw	255
  2498  12B8  0552               	andwf	___fldiv@grs,w
  2499  12B9  00C6               	movwf	??___fldiv
  2500  12BA  30FF               	movlw	255
  2501  12BB  0553               	andwf	___fldiv@grs+1,w
  2502  12BC  00C7               	movwf	??___fldiv+1
  2503  12BD  30FF               	movlw	255
  2504  12BE  0554               	andwf	___fldiv@grs+2,w
  2505  12BF  00C8               	movwf	??___fldiv+2
  2506  12C0  307F               	movlw	127
  2507  12C1  0555               	andwf	___fldiv@grs+3,w
  2508  12C2  00C9               	movwf	??___fldiv+3
  2509  12C3  0849               	movf	??___fldiv+3,w
  2510  12C4  0448               	iorwf	??___fldiv+2,w
  2511  12C5  0447               	iorwf	??___fldiv+1,w
  2512  12C6  0446               	iorwf	??___fldiv,w
  2513  12C7  1903               	skipnz
  2514  12C8  1842               	btfsc	___fldiv@b,0
  2515  12C9  2ACB               	goto	l3679
  2516  12CA  2ACD               	goto	l3683
  2517  12CB                     l3679:	
  2518  12CB  01D7               	clrf	___fldiv@aexp
  2519  12CC  0AD7               	incf	___fldiv@aexp,f
  2520  12CD                     l3683:	
  2521  12CD  0857               	movf	___fldiv@aexp,w
  2522  12CE  1903               	btfsc	3,2
  2523  12CF  2AFF               	goto	l3693
  2524  12D0  3001               	movlw	1
  2525  12D1  07C2               	addwf	___fldiv@b,f
  2526  12D2  3000               	movlw	0
  2527  12D3  1803               	skipnc
  2528  12D4  3001               	movlw	1
  2529  12D5  07C3               	addwf	___fldiv@b+1,f
  2530  12D6  3000               	movlw	0
  2531  12D7  1803               	skipnc
  2532  12D8  3001               	movlw	1
  2533  12D9  07C4               	addwf	___fldiv@b+2,f
  2534  12DA  3000               	movlw	0
  2535  12DB  1803               	skipnc
  2536  12DC  3001               	movlw	1
  2537  12DD  07C5               	addwf	___fldiv@b+3,f
  2538  12DE  1C45               	btfss	___fldiv@b+3,0
  2539  12DF  2AFF               	goto	l3693
  2540  12E0  0842               	movf	___fldiv@b,w
  2541  12E1  00C6               	movwf	??___fldiv
  2542  12E2  0843               	movf	___fldiv@b+1,w
  2543  12E3  00C7               	movwf	??___fldiv+1
  2544  12E4  0844               	movf	___fldiv@b+2,w
  2545  12E5  00C8               	movwf	??___fldiv+2
  2546  12E6  0845               	movf	___fldiv@b+3,w
  2547  12E7  00C9               	movwf	??___fldiv+3
  2548  12E8  3001               	movlw	1
  2549  12E9  00CA               	movwf	??___fldiv+4
  2550  12EA                     u6215:	
  2551  12EA  0D49               	rlf	??___fldiv+3,w
  2552  12EB  0CC9               	rrf	??___fldiv+3,f
  2553  12EC  0CC8               	rrf	??___fldiv+2,f
  2554  12ED  0CC7               	rrf	??___fldiv+1,f
  2555  12EE  0CC6               	rrf	??___fldiv,f
  2556  12EF  0BCA               	decfsz	??___fldiv+4,f
  2557  12F0  2AEA               	goto	u6215
  2558  12F1  0849               	movf	??___fldiv+3,w
  2559  12F2  00C5               	movwf	___fldiv@b+3
  2560  12F3  0848               	movf	??___fldiv+2,w
  2561  12F4  00C4               	movwf	___fldiv@b+2
  2562  12F5  0847               	movf	??___fldiv+1,w
  2563  12F6  00C3               	movwf	___fldiv@b+1
  2564  12F7  0846               	movf	??___fldiv,w
  2565  12F8  00C2               	movwf	___fldiv@b
  2566  12F9  3001               	movlw	1
  2567  12FA  07D0               	addwf	___fldiv@new_exp,f
  2568  12FB  1803               	skipnc
  2569  12FC  0AD1               	incf	___fldiv@new_exp+1,f
  2570  12FD  3000               	movlw	0
  2571  12FE  07D1               	addwf	___fldiv@new_exp+1,f
  2572  12FF                     l3693:	
  2573  12FF  0851               	movf	___fldiv@new_exp+1,w
  2574  1300  3A80               	xorlw	128
  2575  1301  00FF               	movwf	127
  2576  1302  3080               	movlw	128
  2577  1303  027F               	subwf	127,w
  2578  1304  1D03               	skipz
  2579  1305  2B08               	goto	u6225
  2580  1306  30FF               	movlw	255
  2581  1307  0250               	subwf	___fldiv@new_exp,w
  2582  1308                     u6225:	
  2583  1308  1C03               	skipc
  2584  1309  2B18               	goto	l3697
  2585  130A  30FF               	movlw	255
  2586  130B  1283               	bcf	3,5	;RP0=0, select bank0
  2587  130C  1303               	bcf	3,6	;RP1=0, select bank0
  2588  130D  00D0               	movwf	___fldiv@new_exp
  2589  130E  3000               	movlw	0
  2590  130F  00D1               	movwf	___fldiv@new_exp+1
  2591  1310  3000               	movlw	0
  2592  1311  00C5               	movwf	___fldiv@b+3
  2593  1312  3000               	movlw	0
  2594  1313  00C4               	movwf	___fldiv@b+2
  2595  1314  3000               	movlw	0
  2596  1315  00C3               	movwf	___fldiv@b+1
  2597  1316  3000               	movlw	0
  2598  1317  00C2               	movwf	___fldiv@b
  2599  1318                     l3697:	
  2600  1318  1283               	bcf	3,5	;RP0=0, select bank0
  2601  1319  1303               	bcf	3,6	;RP1=0, select bank0
  2602  131A  0851               	movf	___fldiv@new_exp+1,w
  2603  131B  3A80               	xorlw	128
  2604  131C  00FF               	movwf	127
  2605  131D  3080               	movlw	128
  2606  131E  027F               	subwf	127,w
  2607  131F  1D03               	skipz
  2608  1320  2B23               	goto	u6235
  2609  1321  3001               	movlw	1
  2610  1322  0250               	subwf	___fldiv@new_exp,w
  2611  1323                     u6235:	
  2612  1323  1803               	skipnc
  2613  1324  2B32               	goto	l695
  2614  1325  1283               	bcf	3,5	;RP0=0, select bank0
  2615  1326  1303               	bcf	3,6	;RP1=0, select bank0
  2616  1327  01D0               	clrf	___fldiv@new_exp
  2617  1328  01D1               	clrf	___fldiv@new_exp+1
  2618  1329  3000               	movlw	0
  2619  132A  00C5               	movwf	___fldiv@b+3
  2620  132B  3000               	movlw	0
  2621  132C  00C4               	movwf	___fldiv@b+2
  2622  132D  3000               	movlw	0
  2623  132E  00C3               	movwf	___fldiv@b+1
  2624  132F  3000               	movlw	0
  2625  1330  00C2               	movwf	___fldiv@b
  2626  1331  01CF               	clrf	___fldiv@sign
  2627  1332                     l695:	
  2628  1332  1283               	bcf	3,5	;RP0=0, select bank0
  2629  1333  1303               	bcf	3,6	;RP1=0, select bank0
  2630  1334  0850               	movf	___fldiv@new_exp,w
  2631  1335  00C6               	movwf	??___fldiv
  2632  1336  0846               	movf	??___fldiv,w
  2633  1337  00D6               	movwf	___fldiv@bexp
  2634  1338  1C56               	btfss	___fldiv@bexp,0
  2635  1339  2B3C               	goto	l3709
  2636  133A  17C4               	bsf	___fldiv@b+2,7
  2637  133B  2B40               	goto	l697
  2638  133C                     l3709:	
  2639  133C  307F               	movlw	127
  2640  133D  00C6               	movwf	??___fldiv
  2641  133E  0846               	movf	??___fldiv,w
  2642  133F  05C4               	andwf	___fldiv@b+2,f
  2643  1340                     l697:	
  2644  1340  0856               	movf	___fldiv@bexp,w
  2645  1341  00C6               	movwf	??___fldiv
  2646  1342  1003               	clrc
  2647  1343  0C46               	rrf	??___fldiv,w
  2648  1344  00C7               	movwf	??___fldiv+1
  2649  1345  0847               	movf	??___fldiv+1,w
  2650  1346  00C5               	movwf	___fldiv@b+3
  2651  1347  2A05               	goto	L1
  2652  1348                     __end_of___fldiv:	
  2653                           
  2654                           	psect	text4
  2655  1B6B                     __ptext4:	
  2656 ;; *************** function _Lcd_flotante *****************
  2657 ;; Defined at:
  2658 ;;		line 57 in file "converter.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  f               4   35[BANK1 ] float 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  s               7   39[BANK1 ] unsigned char [7]
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 300/100
  2669 ;;		On exit  : 300/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       0       4       0       0
  2673 ;;      Locals:         0       0       7       0       0
  2674 ;;      Temps:          0       1       0       0       0
  2675 ;;      Totals:         0       1      11       0       0
  2676 ;;Total ram usage:       12 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    4
  2679 ;; This function calls:
  2680 ;;		_Lcd_Write_String
  2681 ;;		_sprintf
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           
  2688                           ;psect for function _Lcd_flotante
  2689  1B6B                     _Lcd_flotante:	
  2690                           
  2691                           ;converter.c: 58:       char s[7];;converter.c: 59:      sprintf(s, "%.1f", f);
  2692                           
  2693                           ;incstack = 0
  2694                           ; Regs used in _Lcd_flotante: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2695  1B6B  30A1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2696  1B6C  1283               	bcf	3,5	;RP0=0, select bank0
  2697  1B6D  00EE               	movwf	??_Lcd_flotante
  2698  1B6E  086E               	movf	??_Lcd_flotante,w
  2699  1B6F  1683               	bsf	3,5	;RP0=1, select bank1
  2700  1B70  00A0               	movwf	sprintf@f^(0+128)
  2701  1B71  0846               	movf	(Lcd_flotante@f+3)^(0+128),w
  2702  1B72  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2703  1B73  0845               	movf	(Lcd_flotante@f+2)^(0+128),w
  2704  1B74  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2705  1B75  0844               	movf	(Lcd_flotante@f+1)^(0+128),w
  2706  1B76  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2707  1B77  0843               	movf	Lcd_flotante@f^(0+128),w
  2708  1B78  00A1               	movwf	(?_sprintf^(0+128)+1)
  2709  1B79  30C7               	movlw	(low (Lcd_flotante@s| 0))& (0+255)
  2710  1B7A  120A  118A  22B6  160A  158A  	fcall	_sprintf
  2711                           
  2712                           ;converter.c: 60:      Lcd_Write_String(s);
  2713  1B7F  30C7               	movlw	(low (Lcd_flotante@s| 0))& (0+255)
  2714  1B80  00F5               	movwf	Lcd_Write_String@a
  2715  1B81  3000               	movlw	0
  2716  1B82  00F6               	movwf	Lcd_Write_String@a+1
  2717  1B83  160A  158A  24EB   	fcall	_Lcd_Write_String
  2718  1B86  0008               	return
  2719  1B87                     __end_of_Lcd_flotante:	
  2720                           
  2721                           	psect	text5
  2722  02B6                     __ptext5:	
  2723 ;; *************** function _sprintf *****************
  2724 ;; Defined at:
  2725 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  sp              1    wreg     PTR unsigned char 
  2728 ;;		 -> Lcd_flotante@s(7), 
  2729 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2730 ;;		 -> STR_1(5), 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  2733 ;;		 -> Lcd_flotante@s(7), 
  2734 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2735 ;;  tmpval          4   23[BANK1 ] struct .
  2736 ;;  val             4   17[BANK1 ] unsigned long 
  2737 ;;  prec            2   28[BANK1 ] int 
  2738 ;;  eexp            2   21[BANK1 ] int 
  2739 ;;  flag            2   15[BANK1 ] unsigned short 
  2740 ;;  cp              2    0        PTR const unsigned char 
  2741 ;;  len             2    0        unsigned int 
  2742 ;;  width           2    0        int 
  2743 ;;  c               1   34[BANK1 ] unsigned char 
  2744 ;;  ap              1   14[BANK1 ] PTR void [1]
  2745 ;;		 -> ?_sprintf(2), 
  2746 ;;  d               1    0        unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  2    0[BANK1 ] int 
  2749 ;; Registers used:
  2750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 300/100
  2753 ;;		On exit  : B00/100
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         0       0       5       0       0
  2757 ;;      Locals:         0       0      25       0       0
  2758 ;;      Temps:          0       0       5       0       0
  2759 ;;      Totals:         0       0      35       0       0
  2760 ;;Total ram usage:       35 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    3
  2763 ;; This function calls:
  2764 ;;		___awdiv
  2765 ;;		___fladd
  2766 ;;		___fleq
  2767 ;;		___flge
  2768 ;;		___flmul
  2769 ;;		___flneg
  2770 ;;		___flsub
  2771 ;;		___fltol
  2772 ;;		___lldiv
  2773 ;;		___llmod
  2774 ;;		___wmul
  2775 ;;		___xxtofl
  2776 ;;		__div_to_l_
  2777 ;;		__tdiv_to_l_
  2778 ;;		_fround
  2779 ;;		_isdigit
  2780 ;;		_scale
  2781 ;; This function is called by:
  2782 ;;		_Lcd_flotante
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _sprintf
  2788  02B6                     _sprintf:	
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2792                           ;sprintf@sp stored from wreg
  2793  02B6  00BB               	movwf	sprintf@sp^(0+128)
  2794                           
  2795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  2796  02B7  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2797  02B8  00A5               	movwf	??_sprintf^(0+128)
  2798  02B9  0825               	movf	??_sprintf^(0+128),w
  2799  02BA  00AE               	movwf	sprintf@ap^(0+128)
  2800  02BB                     l3503:	
  2801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2802                           
  2803                           
  2804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2805  02BB  3001               	movlw	1
  2806  02BC  07A0               	addwf	sprintf@f^(0+128),f
  2807  02BD  30FF               	movlw	-1
  2808  02BE  0720               	addwf	sprintf@f^(0+128),w
  2809  02BF  0084               	movwf	4
  2810  02C0  120A  158A  200A  120A  118A  	fcall	stringdir
  2811  02C5  00A5               	movwf	??_sprintf^(0+128)
  2812  02C6  0825               	movf	??_sprintf^(0+128),w
  2813  02C7  00C2               	movwf	sprintf@c^(0+128)
  2814  02C8  0842               	movf	sprintf@c^(0+128),w
  2815  02C9  1903               	btfsc	3,2
  2816  02CA  2FE7               	goto	l3505
  2817                           
  2818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  2819  02CB  3025               	movlw	37
  2820  02CC  0642               	xorwf	sprintf@c^(0+128),w
  2821  02CD  1903               	btfsc	3,2
  2822  02CE  2AD1               	goto	l3317
  2823                           
  2824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  2825  02CF  0842               	movf	sprintf@c^(0+128),w
  2826  02D0  2FDC               	goto	L7
  2827  02D1                     l3317:	
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  2829                           
  2830                           
  2831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  2832  02D1  01AF               	clrf	sprintf@flag^(0+128)
  2833  02D2  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2834                           
  2835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  2836  02D3  0820               	movf	sprintf@f^(0+128),w
  2837  02D4  0084               	movwf	4
  2838  02D5  120A  158A  200A  120A  118A  	fcall	stringdir
  2839  02DA  3A2E               	xorlw	46
  2840  02DB  1D03               	skipz
  2841  02DC  2B1B               	goto	l3335
  2842                           
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  2844  02DD  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2845                           
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  2847  02DE  3001               	movlw	1
  2848  02DF  00A5               	movwf	??_sprintf^(0+128)
  2849  02E0  0825               	movf	??_sprintf^(0+128),w
  2850  02E1  07A0               	addwf	sprintf@f^(0+128),f
  2851                           
  2852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  2853  02E2  01BC               	clrf	sprintf@prec^(0+128)
  2854  02E3  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2855  02E4                     l3333:	
  2856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2857                           
  2858                           
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2860  02E4  0820               	movf	sprintf@f^(0+128),w
  2861  02E5  0084               	movwf	4
  2862  02E6  120A  158A  200A  120A  118A  	fcall	stringdir
  2863  02EB  160A  158A  2331  120A  118A  	fcall	_isdigit
  2864  02F0  1C03               	btfss	3,0
  2865  02F1  2B21               	goto	l3341
  2866                           
  2867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  2868  02F2  300A               	movlw	10
  2869  02F3  00F0               	movwf	___wmul@multiplier
  2870  02F4  3000               	movlw	0
  2871  02F5  00F1               	movwf	___wmul@multiplier+1
  2872  02F6  083D               	movf	(sprintf@prec+1)^(0+128),w
  2873  02F7  00F3               	movwf	___wmul@multiplicand+1
  2874  02F8  083C               	movf	sprintf@prec^(0+128),w
  2875  02F9  00F2               	movwf	___wmul@multiplicand
  2876  02FA  160A  158A  23C5  120A  118A  	fcall	___wmul
  2877  02FF  0871               	movf	?___wmul+1,w
  2878  0300  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2879  0301  0870               	movf	?___wmul,w
  2880  0302  00BC               	movwf	sprintf@prec^(0+128)
  2881                           
  2882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  2883  0303  0820               	movf	sprintf@f^(0+128),w
  2884  0304  0084               	movwf	4
  2885  0305  120A  158A  200A  120A  118A  	fcall	stringdir
  2886  030A  3ED0               	addlw	208
  2887  030B  00A5               	movwf	??_sprintf^(0+128)
  2888  030C  30FF               	movlw	255
  2889  030D  1803               	skipnc
  2890  030E  3000               	movlw	0
  2891  030F  00A6               	movwf	(??_sprintf^(0+128)+1)
  2892  0310  0825               	movf	??_sprintf^(0+128),w
  2893  0311  07BC               	addwf	sprintf@prec^(0+128),f
  2894  0312  1803               	skipnc
  2895  0313  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2896  0314  0826               	movf	(??_sprintf+1)^(0+128),w
  2897  0315  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2898  0316  3001               	movlw	1
  2899  0317  00A5               	movwf	??_sprintf^(0+128)
  2900  0318  0825               	movf	??_sprintf^(0+128),w
  2901  0319  07A0               	addwf	sprintf@f^(0+128),f
  2902  031A  2AE4               	goto	l3333
  2903  031B                     l3335:	
  2904                           
  2905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  2906  031B  01BC               	clrf	sprintf@prec^(0+128)
  2907  031C  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2908                           
  2909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  2910  031D  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2911  031E  2B21               	goto	l3341
  2912  031F                     l239:	
  2913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  2914                           
  2915                           
  2916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  2917  031F  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2918                           
  2919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  2920  0320  2B3B               	goto	l3343
  2921  0321                     l3341:	
  2922  0321  3001               	movlw	1
  2923  0322  07A0               	addwf	sprintf@f^(0+128),f
  2924  0323  30FF               	movlw	-1
  2925  0324  0720               	addwf	sprintf@f^(0+128),w
  2926  0325  0084               	movwf	4
  2927  0326  120A  158A  200A  120A  118A  	fcall	stringdir
  2928  032B  00C2               	movwf	sprintf@c^(0+128)
  2929  032C  00A5               	movwf	??_sprintf^(0+128)
  2930  032D  01A6               	clrf	(??_sprintf^(0+128)+1)
  2931                           
  2932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2933                           ; Switch size 1, requested type "simple"
  2934                           ; Number of cases is 1, Range of values is 0 to 0
  2935                           ; switch strategies available:
  2936                           ; Name         Instructions Cycles
  2937                           ; simple_byte            4     3 (average)
  2938                           ; direct_byte           11     8 (fixed)
  2939                           ; jumptable            260     6 (fixed)
  2940                           ;	Chosen strategy is simple_byte
  2941  032E  0826               	movf	(??_sprintf+1)^(0+128),w
  2942  032F  3A00               	xorlw	0	; case 0
  2943  0330  1903               	skipnz
  2944  0331  2B33               	goto	l3793
  2945  0332  2ABB               	goto	l3503
  2946  0333                     l3793:	
  2947                           
  2948                           ; Switch size 1, requested type "simple"
  2949                           ; Number of cases is 2, Range of values is 0 to 102
  2950                           ; switch strategies available:
  2951                           ; Name         Instructions Cycles
  2952                           ; simple_byte            7     4 (average)
  2953                           ; jumptable            260     6 (fixed)
  2954                           ;	Chosen strategy is simple_byte
  2955  0333  0825               	movf	??_sprintf^(0+128),w
  2956  0334  3A00               	xorlw	0	; case 0
  2957  0335  1903               	skipnz
  2958  0336  2FE7               	goto	l3505
  2959  0337  3A66               	xorlw	102	; case 102
  2960  0338  1903               	skipnz
  2961  0339  2B1F               	goto	l239
  2962  033A  2ABB               	goto	l3503
  2963  033B                     l3343:	
  2964                           
  2965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2966  033B  3000               	movlw	0
  2967  033C  052F               	andwf	sprintf@flag^(0+128),w
  2968  033D  00A5               	movwf	??_sprintf^(0+128)
  2969  033E  3007               	movlw	7
  2970  033F  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2971  0340  00A6               	movwf	(??_sprintf+1)^(0+128)
  2972  0341  0825               	movf	??_sprintf^(0+128),w
  2973  0342  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2974  0343  1903               	btfsc	3,2
  2975  0344  2FAF               	goto	l3485
  2976                           
  2977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2978  0345  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2979  0346  2B4B               	goto	l3349
  2980                           
  2981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2982  0347  3006               	movlw	6
  2983  0348  00BC               	movwf	sprintf@prec^(0+128)
  2984  0349  3000               	movlw	0
  2985  034A  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2986  034B                     l3349:	
  2987                           
  2988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2989  034B  082E               	movf	sprintf@ap^(0+128),w
  2990  034C  0084               	movwf	4
  2991  034D  1383               	bcf	3,7	;select IRP bank0
  2992  034E  0800               	movf	0,w
  2993  034F  00BE               	movwf	sprintf@fval^(0+128)
  2994  0350  0A84               	incf	4,f
  2995  0351  0800               	movf	0,w
  2996  0352  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2997  0353  0A84               	incf	4,f
  2998  0354  0800               	movf	0,w
  2999  0355  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3000  0356  0A84               	incf	4,f
  3001  0357  0800               	movf	0,w
  3002  0358  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3003  0359  3004               	movlw	4
  3004  035A  00A5               	movwf	??_sprintf^(0+128)
  3005  035B  0825               	movf	??_sprintf^(0+128),w
  3006  035C  07AE               	addwf	sprintf@ap^(0+128),f
  3007                           
  3008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  3009  035D  0841               	movf	(sprintf@fval+3)^(0+128),w
  3010  035E  00F3               	movwf	___flge@ff1+3
  3011  035F  0840               	movf	(sprintf@fval+2)^(0+128),w
  3012  0360  00F2               	movwf	___flge@ff1+2
  3013  0361  083F               	movf	(sprintf@fval+1)^(0+128),w
  3014  0362  00F1               	movwf	___flge@ff1+1
  3015  0363  083E               	movf	sprintf@fval^(0+128),w
  3016  0364  00F0               	movwf	___flge@ff1
  3017  0365  3000               	movlw	0
  3018  0366  00F7               	movwf	___flge@ff2+3
  3019  0367  3000               	movlw	0
  3020  0368  00F6               	movwf	___flge@ff2+2
  3021  0369  3000               	movlw	0
  3022  036A  00F5               	movwf	___flge@ff2+1
  3023  036B  3000               	movlw	0
  3024  036C  00F4               	movwf	___flge@ff2
  3025  036D  160A  158A  276D  120A  118A  	fcall	___flge
  3026  0372  1803               	btfsc	3,0
  3027  0373  2B8D               	goto	l3359
  3028                           
  3029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  3030  0374  0841               	movf	(sprintf@fval+3)^(0+128),w
  3031  0375  00F3               	movwf	___flneg@f1+3
  3032  0376  0840               	movf	(sprintf@fval+2)^(0+128),w
  3033  0377  00F2               	movwf	___flneg@f1+2
  3034  0378  083F               	movf	(sprintf@fval+1)^(0+128),w
  3035  0379  00F1               	movwf	___flneg@f1+1
  3036  037A  083E               	movf	sprintf@fval^(0+128),w
  3037  037B  00F0               	movwf	___flneg@f1
  3038  037C  160A  158A  231D  120A  118A  	fcall	___flneg
  3039  0381  0873               	movf	?___flneg+3,w
  3040  0382  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3041  0383  0872               	movf	?___flneg+2,w
  3042  0384  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3043  0385  0871               	movf	?___flneg+1,w
  3044  0386  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3045  0387  0870               	movf	?___flneg,w
  3046  0388  00BE               	movwf	sprintf@fval^(0+128)
  3047                           
  3048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  3049  0389  3003               	movlw	3
  3050  038A  04AF               	iorwf	sprintf@flag^(0+128),f
  3051  038B  3000               	movlw	0
  3052  038C  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  3053  038D                     l3359:	
  3054                           
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  3056  038D  01B5               	clrf	sprintf@eexp^(0+128)
  3057  038E  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3058                           
  3059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  3060  038F  0841               	movf	(sprintf@fval+3)^(0+128),w
  3061  0390  00F3               	movwf	___fleq@ff1+3
  3062  0391  0840               	movf	(sprintf@fval+2)^(0+128),w
  3063  0392  00F2               	movwf	___fleq@ff1+2
  3064  0393  083F               	movf	(sprintf@fval+1)^(0+128),w
  3065  0394  00F1               	movwf	___fleq@ff1+1
  3066  0395  083E               	movf	sprintf@fval^(0+128),w
  3067  0396  00F0               	movwf	___fleq@ff1
  3068  0397  3000               	movlw	0
  3069  0398  00F7               	movwf	___fleq@ff2+3
  3070  0399  3000               	movlw	0
  3071  039A  00F6               	movwf	___fleq@ff2+2
  3072  039B  3000               	movlw	0
  3073  039C  00F5               	movwf	___fleq@ff2+1
  3074  039D  3000               	movlw	0
  3075  039E  00F4               	movwf	___fleq@ff2
  3076  039F  160A  158A  2528  120A  118A  	fcall	___fleq
  3077  03A4  1803               	btfsc	3,0
  3078  03A5  2C63               	goto	l3387
  3079                           
  3080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  3081  03A6  1003               	clrc
  3082  03A7  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  3083  03A8  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  3084  03A9  3E82               	addlw	130
  3085  03AA  00B5               	movwf	sprintf@eexp^(0+128)
  3086  03AB  30FF               	movlw	255
  3087  03AC  1803               	skipnc
  3088  03AD  3000               	movlw	0
  3089  03AE  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  3090                           
  3091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  3092  03AF  30FF               	movlw	255
  3093  03B0  07B5               	addwf	sprintf@eexp^(0+128),f
  3094  03B1  1803               	skipnc
  3095  03B2  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3096  03B3  30FF               	movlw	255
  3097  03B4  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3098                           
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  3100  03B5  3003               	movlw	3
  3101  03B6  00F0               	movwf	___wmul@multiplier
  3102  03B7  3000               	movlw	0
  3103  03B8  00F1               	movwf	___wmul@multiplier+1
  3104  03B9  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3105  03BA  00F3               	movwf	___wmul@multiplicand+1
  3106  03BB  0835               	movf	sprintf@eexp^(0+128),w
  3107  03BC  00F2               	movwf	___wmul@multiplicand
  3108  03BD  160A  158A  23C5  120A  118A  	fcall	___wmul
  3109  03C2  0871               	movf	?___wmul+1,w
  3110  03C3  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  3111  03C4  0870               	movf	?___wmul,w
  3112  03C5  00B5               	movwf	sprintf@eexp^(0+128)
  3113                           
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  3115  03C6  300A               	movlw	10
  3116  03C7  00F7               	movwf	___awdiv@divisor
  3117  03C8  3000               	movlw	0
  3118  03C9  00F8               	movwf	___awdiv@divisor+1
  3119  03CA  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3120  03CB  00FA               	movwf	___awdiv@dividend+1
  3121  03CC  0835               	movf	sprintf@eexp^(0+128),w
  3122  03CD  00F9               	movwf	___awdiv@dividend
  3123  03CE  160A  158A  2651  120A  118A  	fcall	___awdiv
  3124  03D3  0878               	movf	?___awdiv+1,w
  3125  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3126  03D5  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  3127  03D6  0877               	movf	?___awdiv,w
  3128  03D7  00B5               	movwf	sprintf@eexp^(0+128)
  3129                           
  3130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  3131  03D8  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  3132  03D9  2BE0               	goto	l3375
  3133                           
  3134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  3135  03DA  30FF               	movlw	255
  3136  03DB  07B5               	addwf	sprintf@eexp^(0+128),f
  3137  03DC  1803               	skipnc
  3138  03DD  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3139  03DE  30FF               	movlw	255
  3140  03DF  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3141  03E0                     l3375:	
  3142                           
  3143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  3144  03E0  0335               	decf	sprintf@eexp^(0+128),w
  3145  03E1  3AFF               	xorlw	255
  3146  03E2  120A  158A  2194  120A  118A  	fcall	_scale
  3147  03E7  0841               	movf	?_scale+3,w
  3148  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  3149  03E9  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3150  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3151  03EB  0840               	movf	?_scale+2,w
  3152  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  3153  03ED  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3154  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3155  03EF  083F               	movf	?_scale+1,w
  3156  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  3157  03F1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3158  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3159  03F3  083E               	movf	?_scale,w
  3160  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  3161  03F5  00B7               	movwf	sprintf@tmpval^(0+128)
  3162                           
  3163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  3164  03F6  0841               	movf	(sprintf@fval+3)^(0+128),w
  3165  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  3166  03F8  00A7               	movwf	___flmul@b+3
  3167  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3168  03FA  0840               	movf	(sprintf@fval+2)^(0+128),w
  3169  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3170  03FC  00A6               	movwf	___flmul@b+2
  3171  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  3172  03FE  083F               	movf	(sprintf@fval+1)^(0+128),w
  3173  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0400  00A5               	movwf	___flmul@b+1
  3175  0401  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0402  083E               	movf	sprintf@fval^(0+128),w
  3177  0403  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0404  00A4               	movwf	___flmul@b
  3179  0405  1683               	bsf	3,5	;RP0=1, select bank1
  3180  0406  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3181  0407  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0408  00AB               	movwf	___flmul@a+3
  3183  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3184  040A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3185  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3186  040C  00AA               	movwf	___flmul@a+2
  3187  040D  1683               	bsf	3,5	;RP0=1, select bank1
  3188  040E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3189  040F  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0410  00A9               	movwf	___flmul@a+1
  3191  0411  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0412  0837               	movf	sprintf@tmpval^(0+128),w
  3193  0413  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0414  00A8               	movwf	___flmul@a
  3195  0415  160A  118A  250B  120A  118A  	fcall	___flmul
  3196  041A  0827               	movf	?___flmul+3,w
  3197  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3198  041C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3199  041D  1283               	bcf	3,5	;RP0=0, select bank0
  3200  041E  0826               	movf	?___flmul+2,w
  3201  041F  1683               	bsf	3,5	;RP0=1, select bank1
  3202  0420  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3203  0421  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0422  0825               	movf	?___flmul+1,w
  3205  0423  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0424  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3207  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0426  0824               	movf	?___flmul,w
  3209  0427  1683               	bsf	3,5	;RP0=1, select bank1
  3210  0428  00B7               	movwf	sprintf@tmpval^(0+128)
  3211                           
  3212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  3213  0429  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3214  042A  00F3               	movwf	___flge@ff1+3
  3215  042B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3216  042C  00F2               	movwf	___flge@ff1+2
  3217  042D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3218  042E  00F1               	movwf	___flge@ff1+1
  3219  042F  0837               	movf	sprintf@tmpval^(0+128),w
  3220  0430  00F0               	movwf	___flge@ff1
  3221  0431  303F               	movlw	63
  3222  0432  00F7               	movwf	___flge@ff2+3
  3223  0433  3080               	movlw	128
  3224  0434  00F6               	movwf	___flge@ff2+2
  3225  0435  3000               	movlw	0
  3226  0436  00F5               	movwf	___flge@ff2+1
  3227  0437  3000               	movlw	0
  3228  0438  00F4               	movwf	___flge@ff2
  3229  0439  160A  158A  276D  120A  118A  	fcall	___flge
  3230  043E  1803               	btfsc	3,0
  3231  043F  2C46               	goto	l3383
  3232                           
  3233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  3234  0440  30FF               	movlw	255
  3235  0441  07B5               	addwf	sprintf@eexp^(0+128),f
  3236  0442  1803               	skipnc
  3237  0443  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3238  0444  30FF               	movlw	255
  3239  0445  2C62               	goto	L2
  3240  0446                     l3383:	
  3241  0446  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3242  0447  00F3               	movwf	___flge@ff1+3
  3243  0448  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3244  0449  00F2               	movwf	___flge@ff1+2
  3245  044A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3246  044B  00F1               	movwf	___flge@ff1+1
  3247  044C  0837               	movf	sprintf@tmpval^(0+128),w
  3248  044D  00F0               	movwf	___flge@ff1
  3249  044E  3041               	movlw	65
  3250  044F  00F7               	movwf	___flge@ff2+3
  3251  0450  3020               	movlw	32
  3252  0451  00F6               	movwf	___flge@ff2+2
  3253  0452  3000               	movlw	0
  3254  0453  00F5               	movwf	___flge@ff2+1
  3255  0454  3000               	movlw	0
  3256  0455  00F4               	movwf	___flge@ff2
  3257  0456  160A  158A  276D  120A  118A  	fcall	___flge
  3258  045B  1C03               	btfss	3,0
  3259  045C  2C63               	goto	l3387
  3260                           
  3261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  3262  045D  3001               	movlw	1
  3263  045E  07B5               	addwf	sprintf@eexp^(0+128),f
  3264  045F  1803               	skipnc
  3265  0460  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3266  0461  3000               	movlw	0
  3267  0462                     L2:	
  3268  0462  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3269  0463                     l3387:	
  3270                           
  3271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  3272  0463  083D               	movf	(sprintf@prec+1)^(0+128),w
  3273  0464  3A80               	xorlw	128
  3274  0465  00FF               	movwf	127
  3275  0466  3080               	movlw	128
  3276  0467  027F               	subwf	127,w
  3277  0468  1D03               	skipz
  3278  0469  2C6C               	goto	u5645
  3279  046A  300D               	movlw	13
  3280  046B  023C               	subwf	sprintf@prec^(0+128),w
  3281  046C                     u5645:	
  3282  046C  1803               	skipnc
  3283  046D  2CA2               	goto	l3391
  3284                           
  3285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  3286  046E  1683               	bsf	3,5	;RP0=1, select bank1
  3287  046F  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0470  083C               	movf	sprintf@prec^(0+128),w
  3289  0471  160A  118A  2348  120A  118A  	fcall	_fround
  3290  0476  0841               	movf	?_fround+3,w
  3291  0477  00D5               	movwf	___fladd@b+3
  3292  0478  0840               	movf	?_fround+2,w
  3293  0479  00D4               	movwf	___fladd@b+2
  3294  047A  083F               	movf	?_fround+1,w
  3295  047B  00D3               	movwf	___fladd@b+1
  3296  047C  083E               	movf	?_fround,w
  3297  047D  00D2               	movwf	___fladd@b
  3298  047E  1683               	bsf	3,5	;RP0=1, select bank1
  3299  047F  0841               	movf	(sprintf@fval+3)^(0+128),w
  3300  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0481  00D9               	movwf	___fladd@a+3
  3302  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0483  0840               	movf	(sprintf@fval+2)^(0+128),w
  3304  0484  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0485  00D8               	movwf	___fladd@a+2
  3306  0486  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0487  083F               	movf	(sprintf@fval+1)^(0+128),w
  3308  0488  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0489  00D7               	movwf	___fladd@a+1
  3310  048A  1683               	bsf	3,5	;RP0=1, select bank1
  3311  048B  083E               	movf	sprintf@fval^(0+128),w
  3312  048C  1283               	bcf	3,5	;RP0=0, select bank0
  3313  048D  00D6               	movwf	___fladd@a
  3314  048E  120A  118A  2089  120A  118A  	fcall	___fladd
  3315  0493  0855               	movf	?___fladd+3,w
  3316  0494  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0495  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3318  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0497  0854               	movf	?___fladd+2,w
  3320  0498  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0499  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3322  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3323  049B  0853               	movf	?___fladd+1,w
  3324  049C  1683               	bsf	3,5	;RP0=1, select bank1
  3325  049D  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3326  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3327  049F  0852               	movf	?___fladd,w
  3328  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  3329  04A1  00BE               	movwf	sprintf@fval^(0+128)
  3330  04A2                     l3391:	
  3331                           
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3333  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  3334  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  3335  04A4  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3336  04A5  3A80               	xorlw	128
  3337  04A6  00FF               	movwf	127
  3338  04A7  3080               	movlw	128
  3339  04A8  027F               	subwf	127,w
  3340  04A9  1D03               	skipz
  3341  04AA  2CAD               	goto	u5655
  3342  04AB  300A               	movlw	10
  3343  04AC  0235               	subwf	sprintf@eexp^(0+128),w
  3344  04AD                     u5655:	
  3345  04AD  1803               	skipnc
  3346  04AE  2CEE               	goto	l3399
  3347  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  3348  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  3349  04B1  0841               	movf	(sprintf@fval+3)^(0+128),w
  3350  04B2  00F3               	movwf	___fleq@ff1+3
  3351  04B3  0840               	movf	(sprintf@fval+2)^(0+128),w
  3352  04B4  00F2               	movwf	___fleq@ff1+2
  3353  04B5  083F               	movf	(sprintf@fval+1)^(0+128),w
  3354  04B6  00F1               	movwf	___fleq@ff1+1
  3355  04B7  083E               	movf	sprintf@fval^(0+128),w
  3356  04B8  00F0               	movwf	___fleq@ff1
  3357  04B9  3000               	movlw	0
  3358  04BA  00F7               	movwf	___fleq@ff2+3
  3359  04BB  3000               	movlw	0
  3360  04BC  00F6               	movwf	___fleq@ff2+2
  3361  04BD  3000               	movlw	0
  3362  04BE  00F5               	movwf	___fleq@ff2+1
  3363  04BF  3000               	movlw	0
  3364  04C0  00F4               	movwf	___fleq@ff2
  3365  04C1  160A  158A  2528  120A  118A  	fcall	___fleq
  3366  04C6  1803               	btfsc	3,0
  3367  04C7  2D4B               	goto	l3413
  3368  04C8  0841               	movf	(sprintf@fval+3)^(0+128),w
  3369  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3370  04CA  00D4               	movwf	___fltol@f1+3
  3371  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  3372  04CC  0840               	movf	(sprintf@fval+2)^(0+128),w
  3373  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  3374  04CE  00D3               	movwf	___fltol@f1+2
  3375  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3376  04D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  3377  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3378  04D2  00D2               	movwf	___fltol@f1+1
  3379  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  3380  04D4  083E               	movf	sprintf@fval^(0+128),w
  3381  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  3382  04D6  00D1               	movwf	___fltol@f1
  3383  04D7  120A  118A  201E  120A  118A  	fcall	___fltol
  3384  04DC  0854               	movf	?___fltol+3,w
  3385  04DD  0453               	iorwf	?___fltol+2,w
  3386  04DE  0452               	iorwf	?___fltol+1,w
  3387  04DF  0451               	iorwf	?___fltol,w
  3388  04E0  1D03               	skipz
  3389  04E1  2D4B               	goto	l3413
  3390  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  3391  04E3  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3392  04E4  3A80               	xorlw	128
  3393  04E5  00FF               	movwf	127
  3394  04E6  3080               	movlw	128
  3395  04E7  027F               	subwf	127,w
  3396  04E8  1D03               	skipz
  3397  04E9  2CEC               	goto	u5685
  3398  04EA  3002               	movlw	2
  3399  04EB  0235               	subwf	sprintf@eexp^(0+128),w
  3400  04EC                     u5685:	
  3401  04EC  1C03               	skipc
  3402  04ED  2D4B               	goto	l3413
  3403  04EE                     l3399:	
  3404                           
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  3406  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3407  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  3408  04F0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3409  04F1  00F3               	movwf	___flge@ff1+3
  3410  04F2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3411  04F3  00F2               	movwf	___flge@ff1+2
  3412  04F4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3413  04F5  00F1               	movwf	___flge@ff1+1
  3414  04F6  0837               	movf	sprintf@tmpval^(0+128),w
  3415  04F7  00F0               	movwf	___flge@ff1
  3416  04F8  3040               	movlw	64
  3417  04F9  00F7               	movwf	___flge@ff2+3
  3418  04FA  3089               	movlw	137
  3419  04FB  00F6               	movwf	___flge@ff2+2
  3420  04FC  3070               	movlw	112
  3421  04FD  00F5               	movwf	___flge@ff2+1
  3422  04FE  305F               	movlw	95
  3423  04FF  00F4               	movwf	___flge@ff2
  3424  0500  160A  158A  276D  120A  118A  	fcall	___flge
  3425  0505  1803               	btfsc	3,0
  3426  0506  2D09               	goto	l3403
  3427                           
  3428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3429  0507  30F7               	movlw	247
  3430  0508  2D0A               	goto	L3
  3431  0509                     l3403:	
  3432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  3433                           
  3434                           
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3436  0509  30F8               	movlw	248
  3437  050A                     L3:	
  3438  050A  07B5               	addwf	sprintf@eexp^(0+128),f
  3439  050B  1803               	skipnc
  3440  050C  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3441  050D  30FF               	movlw	255
  3442  050E  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3443                           
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  3445  050F  0835               	movf	sprintf@eexp^(0+128),w
  3446  0510  120A  158A  2194  120A  118A  	fcall	_scale
  3447  0515  0841               	movf	?_scale+3,w
  3448  0516  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0517  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3450  0518  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0519  0840               	movf	?_scale+2,w
  3452  051A  1683               	bsf	3,5	;RP0=1, select bank1
  3453  051B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3454  051C  1283               	bcf	3,5	;RP0=0, select bank0
  3455  051D  083F               	movf	?_scale+1,w
  3456  051E  1683               	bsf	3,5	;RP0=1, select bank1
  3457  051F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3458  0520  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0521  083E               	movf	?_scale,w
  3460  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3461  0523  00B7               	movwf	sprintf@tmpval^(0+128)
  3462  0524  0841               	movf	(sprintf@fval+3)^(0+128),w
  3463  0525  00F3               	movwf	__div_to_l_@f1+3
  3464  0526  0840               	movf	(sprintf@fval+2)^(0+128),w
  3465  0527  00F2               	movwf	__div_to_l_@f1+2
  3466  0528  083F               	movf	(sprintf@fval+1)^(0+128),w
  3467  0529  00F1               	movwf	__div_to_l_@f1+1
  3468  052A  083E               	movf	sprintf@fval^(0+128),w
  3469  052B  00F0               	movwf	__div_to_l_@f1
  3470  052C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3471  052D  00F7               	movwf	__div_to_l_@f2+3
  3472  052E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3473  052F  00F6               	movwf	__div_to_l_@f2+2
  3474  0530  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3475  0531  00F5               	movwf	__div_to_l_@f2+1
  3476  0532  0837               	movf	sprintf@tmpval^(0+128),w
  3477  0533  00F4               	movwf	__div_to_l_@f2
  3478  0534  160A  118A  20FE  120A  118A  	fcall	__div_to_l_
  3479  0539  0873               	movf	?__div_to_l_+3,w
  3480  053A  1683               	bsf	3,5	;RP0=1, select bank1
  3481  053B  00B4               	movwf	(sprintf@val+3)^(0+128)
  3482  053C  0872               	movf	?__div_to_l_+2,w
  3483  053D  00B3               	movwf	(sprintf@val+2)^(0+128)
  3484  053E  0871               	movf	?__div_to_l_+1,w
  3485  053F  00B2               	movwf	(sprintf@val+1)^(0+128)
  3486  0540  0870               	movf	?__div_to_l_,w
  3487  0541  00B1               	movwf	sprintf@val^(0+128)
  3488                           
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  3490  0542  3000               	movlw	0
  3491  0543  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3492  0544  3000               	movlw	0
  3493  0545  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3494  0546  3000               	movlw	0
  3495  0547  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3496  0548  3000               	movlw	0
  3497  0549  00BE               	movwf	sprintf@fval^(0+128)
  3498                           
  3499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  3500  054A  2DAD               	goto	l3419
  3501  054B                     l3413:	
  3502                           
  3503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  3504  054B  1683               	bsf	3,5	;RP0=1, select bank1
  3505  054C  1303               	bcf	3,6	;RP1=0, select bank1
  3506  054D  0841               	movf	(sprintf@fval+3)^(0+128),w
  3507  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3508  054F  00D4               	movwf	___fltol@f1+3
  3509  0550  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0551  0840               	movf	(sprintf@fval+2)^(0+128),w
  3511  0552  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0553  00D3               	movwf	___fltol@f1+2
  3513  0554  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0555  083F               	movf	(sprintf@fval+1)^(0+128),w
  3515  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3516  0557  00D2               	movwf	___fltol@f1+1
  3517  0558  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0559  083E               	movf	sprintf@fval^(0+128),w
  3519  055A  1283               	bcf	3,5	;RP0=0, select bank0
  3520  055B  00D1               	movwf	___fltol@f1
  3521  055C  120A  118A  201E  120A  118A  	fcall	___fltol
  3522  0561  0854               	movf	?___fltol+3,w
  3523  0562  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0563  00B4               	movwf	(sprintf@val+3)^(0+128)
  3525  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0565  0853               	movf	?___fltol+2,w
  3527  0566  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0567  00B3               	movwf	(sprintf@val+2)^(0+128)
  3529  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0569  0852               	movf	?___fltol+1,w
  3531  056A  1683               	bsf	3,5	;RP0=1, select bank1
  3532  056B  00B2               	movwf	(sprintf@val+1)^(0+128)
  3533  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3534  056D  0851               	movf	?___fltol,w
  3535  056E  1683               	bsf	3,5	;RP0=1, select bank1
  3536  056F  00B1               	movwf	sprintf@val^(0+128)
  3537                           
  3538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  3539  0570  0834               	movf	(sprintf@val+3)^(0+128),w
  3540  0571  00F3               	movwf	___xxtofl@val+3
  3541  0572  0833               	movf	(sprintf@val+2)^(0+128),w
  3542  0573  00F2               	movwf	___xxtofl@val+2
  3543  0574  0832               	movf	(sprintf@val+1)^(0+128),w
  3544  0575  00F1               	movwf	___xxtofl@val+1
  3545  0576  0831               	movf	sprintf@val^(0+128),w
  3546  0577  00F0               	movwf	___xxtofl@val
  3547  0578  3000               	movlw	0
  3548  0579  160A  118A  205B  120A  118A  	fcall	___xxtofl
  3549  057E  0873               	movf	?___xxtofl+3,w
  3550  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0580  00E9               	movwf	___flsub@a+3
  3552  0581  0872               	movf	?___xxtofl+2,w
  3553  0582  00E8               	movwf	___flsub@a+2
  3554  0583  0871               	movf	?___xxtofl+1,w
  3555  0584  00E7               	movwf	___flsub@a+1
  3556  0585  0870               	movf	?___xxtofl,w
  3557  0586  00E6               	movwf	___flsub@a
  3558  0587  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0588  0841               	movf	(sprintf@fval+3)^(0+128),w
  3560  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3561  058A  00ED               	movwf	___flsub@b+3
  3562  058B  1683               	bsf	3,5	;RP0=1, select bank1
  3563  058C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3564  058D  1283               	bcf	3,5	;RP0=0, select bank0
  3565  058E  00EC               	movwf	___flsub@b+2
  3566  058F  1683               	bsf	3,5	;RP0=1, select bank1
  3567  0590  083F               	movf	(sprintf@fval+1)^(0+128),w
  3568  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0592  00EB               	movwf	___flsub@b+1
  3570  0593  1683               	bsf	3,5	;RP0=1, select bank1
  3571  0594  083E               	movf	sprintf@fval^(0+128),w
  3572  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3573  0596  00EA               	movwf	___flsub@b
  3574  0597  160A  158A  2387  120A  118A  	fcall	___flsub
  3575  059C  0869               	movf	?___flsub+3,w
  3576  059D  1683               	bsf	3,5	;RP0=1, select bank1
  3577  059E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3578  059F  1283               	bcf	3,5	;RP0=0, select bank0
  3579  05A0  0868               	movf	?___flsub+2,w
  3580  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  3581  05A2  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3582  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3583  05A4  0867               	movf	?___flsub+1,w
  3584  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  3585  05A6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3586  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  3587  05A8  0866               	movf	?___flsub,w
  3588  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  3589  05AA  00BE               	movwf	sprintf@fval^(0+128)
  3590                           
  3591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  3592  05AB  01B5               	clrf	sprintf@eexp^(0+128)
  3593  05AC  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3594  05AD                     l3419:	
  3595                           
  3596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3597  05AD  01C2               	clrf	sprintf@c^(0+128)
  3598  05AE  0AC2               	incf	sprintf@c^(0+128),f
  3599  05AF                     l3425:	
  3600                           
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  3602  05AF  0842               	movf	sprintf@c^(0+128),w
  3603  05B0  00A5               	movwf	??_sprintf^(0+128)
  3604  05B1  3001               	movlw	1
  3605  05B2                     u5705:	
  3606  05B2  1003               	clrc
  3607  05B3  0DA5               	rlf	??_sprintf^(0+128),f
  3608  05B4  3EFF               	addlw	-1
  3609  05B5  1D03               	skipz
  3610  05B6  2DB2               	goto	u5705
  3611  05B7  1003               	clrc
  3612  05B8  0D25               	rlf	??_sprintf^(0+128),w
  3613  05B9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3614  05BA  0084               	movwf	4
  3615  05BB  120A  158A  200A  120A  118A  	fcall	stringdir
  3616  05C0  00A6               	movwf	(??_sprintf+1)^(0+128)
  3617  05C1  120A  158A  200A  120A  118A  	fcall	stringdir
  3618  05C6  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3619  05C7  120A  158A  200A  120A  118A  	fcall	stringdir
  3620  05CC  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3621  05CD  120A  158A  200A  120A  118A  	fcall	stringdir
  3622  05D2  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3623  05D3  0829               	movf	(??_sprintf+4)^(0+128),w
  3624  05D4  0234               	subwf	(sprintf@val+3)^(0+128),w
  3625  05D5  1D03               	skipz
  3626  05D6  2DE1               	goto	u5715
  3627  05D7  0828               	movf	(??_sprintf+3)^(0+128),w
  3628  05D8  0233               	subwf	(sprintf@val+2)^(0+128),w
  3629  05D9  1D03               	skipz
  3630  05DA  2DE1               	goto	u5715
  3631  05DB  0827               	movf	(??_sprintf+2)^(0+128),w
  3632  05DC  0232               	subwf	(sprintf@val+1)^(0+128),w
  3633  05DD  1D03               	skipz
  3634  05DE  2DE1               	goto	u5715
  3635  05DF  0826               	movf	(??_sprintf+1)^(0+128),w
  3636  05E0  0231               	subwf	sprintf@val^(0+128),w
  3637  05E1                     u5715:	
  3638  05E1  1C03               	btfss	3,0
  3639  05E2  2DEB               	goto	l3431
  3640  05E3  3001               	movlw	1
  3641  05E4  00A5               	movwf	??_sprintf^(0+128)
  3642  05E5  0825               	movf	??_sprintf^(0+128),w
  3643  05E6  07C2               	addwf	sprintf@c^(0+128),f
  3644  05E7  300A               	movlw	10
  3645  05E8  0642               	xorwf	sprintf@c^(0+128),w
  3646  05E9  1D03               	btfss	3,2
  3647  05EA  2DAF               	goto	l3425
  3648  05EB                     l3431:	
  3649                           
  3650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1201:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  3651  05EB  082F               	movf	sprintf@flag^(0+128),w
  3652  05EC  3903               	andlw	3
  3653  05ED  1903               	btfsc	3,2
  3654  05EE  2DFA               	goto	l265
  3655                           
  3656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  3657  05EF  302D               	movlw	45
  3658  05F0                     L4:	
  3659  05F0  00A5               	movwf	??_sprintf^(0+128)
  3660  05F1  083B               	movf	sprintf@sp^(0+128),w
  3661  05F2  0084               	movwf	4
  3662  05F3  0825               	movf	??_sprintf^(0+128),w
  3663  05F4  1383               	bcf	3,7	;select IRP bank0
  3664  05F5  0080               	movwf	0
  3665  05F6  3001               	movlw	1
  3666  05F7  00A5               	movwf	??_sprintf^(0+128)
  3667  05F8  0825               	movf	??_sprintf^(0+128),w
  3668  05F9  07BB               	addwf	sprintf@sp^(0+128),f
  3669  05FA                     l265:	
  3670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  3671                           
  3672                           
  3673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  3674  05FA  3001               	movlw	1
  3675  05FB  02C2               	subwf	sprintf@c^(0+128),f
  3676  05FC  0A42               	incf	sprintf@c^(0+128),w
  3677  05FD  1903               	btfsc	3,2
  3678  05FE  2E6B               	goto	l3449
  3679                           
  3680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  3681  05FF  0842               	movf	sprintf@c^(0+128),w
  3682  0600  00A5               	movwf	??_sprintf^(0+128)
  3683  0601  3001               	movlw	1
  3684  0602                     u5745:	
  3685  0602  1003               	clrc
  3686  0603  0DA5               	rlf	??_sprintf^(0+128),f
  3687  0604  3EFF               	addlw	-1
  3688  0605  1D03               	skipz
  3689  0606  2E02               	goto	u5745
  3690  0607  1003               	clrc
  3691  0608  0D25               	rlf	??_sprintf^(0+128),w
  3692  0609  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3693  060A  0084               	movwf	4
  3694  060B  120A  158A  200A  120A  118A  	fcall	stringdir
  3695  0610  00F0               	movwf	___lldiv@divisor
  3696  0611  120A  158A  200A  120A  118A  	fcall	stringdir
  3697  0616  00F1               	movwf	___lldiv@divisor+1
  3698  0617  120A  158A  200A  120A  118A  	fcall	stringdir
  3699  061C  00F2               	movwf	___lldiv@divisor+2
  3700  061D  120A  158A  200A  120A  118A  	fcall	stringdir
  3701  0622  00F3               	movwf	___lldiv@divisor+3
  3702  0623  0834               	movf	(sprintf@val+3)^(0+128),w
  3703  0624  00F7               	movwf	___lldiv@dividend+3
  3704  0625  0833               	movf	(sprintf@val+2)^(0+128),w
  3705  0626  00F6               	movwf	___lldiv@dividend+2
  3706  0627  0832               	movf	(sprintf@val+1)^(0+128),w
  3707  0628  00F5               	movwf	___lldiv@dividend+1
  3708  0629  0831               	movf	sprintf@val^(0+128),w
  3709  062A  00F4               	movwf	___lldiv@dividend
  3710  062B  160A  158A  26AB  120A  118A  	fcall	___lldiv
  3711  0630  0873               	movf	?___lldiv+3,w
  3712  0631  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3713  0632  0872               	movf	?___lldiv+2,w
  3714  0633  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3715  0634  0871               	movf	?___lldiv+1,w
  3716  0635  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3717  0636  0870               	movf	?___lldiv,w
  3718  0637  00B7               	movwf	sprintf@tmpval^(0+128)
  3719                           
  3720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  3721  0638  3000               	movlw	0
  3722  0639  00F3               	movwf	___llmod@divisor+3
  3723  063A  3000               	movlw	0
  3724  063B  00F2               	movwf	___llmod@divisor+2
  3725  063C  3000               	movlw	0
  3726  063D  00F1               	movwf	___llmod@divisor+1
  3727  063E  300A               	movlw	10
  3728  063F  00F0               	movwf	___llmod@divisor
  3729  0640  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3730  0641  00F7               	movwf	___llmod@dividend+3
  3731  0642  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3732  0643  00F6               	movwf	___llmod@dividend+2
  3733  0644  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3734  0645  00F5               	movwf	___llmod@dividend+1
  3735  0646  0837               	movf	sprintf@tmpval^(0+128),w
  3736  0647  00F4               	movwf	___llmod@dividend
  3737  0648  160A  158A  2605  120A  118A  	fcall	___llmod
  3738  064D  0873               	movf	?___llmod+3,w
  3739  064E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3740  064F  0872               	movf	?___llmod+2,w
  3741  0650  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3742  0651  0871               	movf	?___llmod+1,w
  3743  0652  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3744  0653  0870               	movf	?___llmod,w
  3745  0654  00B7               	movwf	sprintf@tmpval^(0+128)
  3746                           
  3747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3748  0655  0837               	movf	sprintf@tmpval^(0+128),w
  3749  0656  3E30               	addlw	48
  3750  0657  2DF0               	goto	L4
  3751  0658                     l3443:	
  3752                           
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  3754  0658  3030               	movlw	48
  3755  0659  1683               	bsf	3,5	;RP0=1, select bank1
  3756  065A  1303               	bcf	3,6	;RP1=0, select bank1
  3757  065B  00A5               	movwf	??_sprintf^(0+128)
  3758  065C  083B               	movf	sprintf@sp^(0+128),w
  3759  065D  0084               	movwf	4
  3760  065E  0825               	movf	??_sprintf^(0+128),w
  3761  065F  1383               	bcf	3,7	;select IRP bank0
  3762  0660  0080               	movwf	0
  3763  0661  3001               	movlw	1
  3764  0662  00A5               	movwf	??_sprintf^(0+128)
  3765  0663  0825               	movf	??_sprintf^(0+128),w
  3766  0664  07BB               	addwf	sprintf@sp^(0+128),f
  3767                           
  3768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  3769  0665  30FF               	movlw	255
  3770  0666  07B5               	addwf	sprintf@eexp^(0+128),f
  3771  0667  1803               	skipnc
  3772  0668  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3773  0669  30FF               	movlw	255
  3774  066A  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3775  066B                     l3449:	
  3776                           
  3777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  3778  066B  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3779  066C  3A80               	xorlw	128
  3780  066D  00FF               	movwf	127
  3781  066E  3080               	movlw	128
  3782  066F  027F               	subwf	127,w
  3783  0670  1D03               	skipz
  3784  0671  2E74               	goto	u5765
  3785  0672  3001               	movlw	1
  3786  0673  0235               	subwf	sprintf@eexp^(0+128),w
  3787  0674                     u5765:	
  3788  0674  1803               	skipnc
  3789  0675  2E58               	goto	l3443
  3790                           
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3792  0676  1683               	bsf	3,5	;RP0=1, select bank1
  3793  0677  1303               	bcf	3,6	;RP1=0, select bank1
  3794  0678  083D               	movf	(sprintf@prec+1)^(0+128),w
  3795  0679  3A80               	xorlw	128
  3796  067A  00FF               	movwf	127
  3797  067B  3080               	movlw	128
  3798  067C  027F               	subwf	127,w
  3799  067D  1D03               	skipz
  3800  067E  2E81               	goto	u5775
  3801  067F  3009               	movlw	9
  3802  0680  023C               	subwf	sprintf@prec^(0+128),w
  3803  0681                     u5775:	
  3804  0681  1C03               	skipc
  3805  0682  2E87               	goto	l3455
  3806                           
  3807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3808  0683  3008               	movlw	8
  3809  0684  1683               	bsf	3,5	;RP0=1, select bank1
  3810  0685  1303               	bcf	3,6	;RP1=0, select bank1
  3811  0686  2E8A               	goto	L5
  3812  0687                     l3455:	
  3813                           
  3814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  3815  0687  1683               	bsf	3,5	;RP0=1, select bank1
  3816  0688  1303               	bcf	3,6	;RP1=0, select bank1
  3817  0689  083C               	movf	sprintf@prec^(0+128),w
  3818  068A                     L5:	
  3819  068A  00A5               	movwf	??_sprintf^(0+128)
  3820  068B  0825               	movf	??_sprintf^(0+128),w
  3821  068C  00C2               	movwf	sprintf@c^(0+128)
  3822                           
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  3824  068D  0842               	movf	sprintf@c^(0+128),w
  3825  068E  00A5               	movwf	??_sprintf^(0+128)
  3826  068F  01A6               	clrf	(??_sprintf^(0+128)+1)
  3827  0690  0825               	movf	??_sprintf^(0+128),w
  3828  0691  02BC               	subwf	sprintf@prec^(0+128),f
  3829  0692  0826               	movf	(??_sprintf+1)^(0+128),w
  3830  0693  1C03               	skipc
  3831  0694  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3832  0695  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3833                           
  3834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  3835  0696  0842               	movf	sprintf@c^(0+128),w
  3836  0697  1903               	btfsc	3,2
  3837  0698  2EA4               	goto	l3463
  3838                           
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  3840  0699  302E               	movlw	46
  3841  069A  00A5               	movwf	??_sprintf^(0+128)
  3842  069B  083B               	movf	sprintf@sp^(0+128),w
  3843  069C  0084               	movwf	4
  3844  069D  0825               	movf	??_sprintf^(0+128),w
  3845  069E  1383               	bcf	3,7	;select IRP bank0
  3846  069F  0080               	movwf	0
  3847  06A0  3001               	movlw	1
  3848  06A1  00A5               	movwf	??_sprintf^(0+128)
  3849  06A2  0825               	movf	??_sprintf^(0+128),w
  3850  06A3  07BB               	addwf	sprintf@sp^(0+128),f
  3851  06A4                     l3463:	
  3852                           
  3853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3854  06A4  0842               	movf	sprintf@c^(0+128),w
  3855  06A5  120A  158A  2194  120A  118A  	fcall	_scale
  3856  06AA  0841               	movf	?_scale+3,w
  3857  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  3858  06AC  00AD               	movwf	(_sprintf$837+3)^(0+128)
  3859  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3860  06AE  0840               	movf	?_scale+2,w
  3861  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  3862  06B0  00AC               	movwf	(_sprintf$837+2)^(0+128)
  3863  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  3864  06B2  083F               	movf	?_scale+1,w
  3865  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  3866  06B4  00AB               	movwf	(_sprintf$837+1)^(0+128)
  3867  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3868  06B6  083E               	movf	?_scale,w
  3869  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  3870  06B8  00AA               	movwf	_sprintf$837^(0+128)
  3871                           
  3872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3873  06B9  082D               	movf	(_sprintf$837+3)^(0+128),w
  3874  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3875  06BB  00AB               	movwf	___flmul@a+3
  3876  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3877  06BD  082C               	movf	(_sprintf$837+2)^(0+128),w
  3878  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3879  06BF  00AA               	movwf	___flmul@a+2
  3880  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  3881  06C1  082B               	movf	(_sprintf$837+1)^(0+128),w
  3882  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3883  06C3  00A9               	movwf	___flmul@a+1
  3884  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  3885  06C5  082A               	movf	_sprintf$837^(0+128),w
  3886  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  3887  06C7  00A8               	movwf	___flmul@a
  3888  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  3889  06C9  0841               	movf	(sprintf@fval+3)^(0+128),w
  3890  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3891  06CB  00A7               	movwf	___flmul@b+3
  3892  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  3893  06CD  0840               	movf	(sprintf@fval+2)^(0+128),w
  3894  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3895  06CF  00A6               	movwf	___flmul@b+2
  3896  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3897  06D1  083F               	movf	(sprintf@fval+1)^(0+128),w
  3898  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3899  06D3  00A5               	movwf	___flmul@b+1
  3900  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  3901  06D5  083E               	movf	sprintf@fval^(0+128),w
  3902  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3903  06D7  00A4               	movwf	___flmul@b
  3904  06D8  160A  118A  250B  120A  118A  	fcall	___flmul
  3905  06DD  0827               	movf	?___flmul+3,w
  3906  06DE  00D4               	movwf	___fltol@f1+3
  3907  06DF  0826               	movf	?___flmul+2,w
  3908  06E0  00D3               	movwf	___fltol@f1+2
  3909  06E1  0825               	movf	?___flmul+1,w
  3910  06E2  00D2               	movwf	___fltol@f1+1
  3911  06E3  0824               	movf	?___flmul,w
  3912  06E4  00D1               	movwf	___fltol@f1
  3913  06E5  120A  118A  201E  120A  118A  	fcall	___fltol
  3914  06EA  0854               	movf	?___fltol+3,w
  3915  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  3916  06EC  00B4               	movwf	(sprintf@val+3)^(0+128)
  3917  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3918  06EE  0853               	movf	?___fltol+2,w
  3919  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  3920  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  3921  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3922  06F2  0852               	movf	?___fltol+1,w
  3923  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  3924  06F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  3925  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  3926  06F6  0851               	movf	?___fltol,w
  3927  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3928  06F8                     L6:	
  3929  06F8  00B1               	movwf	sprintf@val^(0+128)
  3930                           
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3932  06F9  3001               	movlw	1
  3933  06FA  02C2               	subwf	sprintf@c^(0+128),f
  3934  06FB  0A42               	incf	sprintf@c^(0+128),w
  3935  06FC  1903               	btfsc	3,2
  3936  06FD  2FAA               	goto	l3483
  3937                           
  3938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3939                           
  3940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3941  06FE  0842               	movf	sprintf@c^(0+128),w
  3942  06FF  00A5               	movwf	??_sprintf^(0+128)
  3943  0700  3001               	movlw	1
  3944  0701                     u5795:	
  3945  0701  1003               	clrc
  3946  0702  0DA5               	rlf	??_sprintf^(0+128),f
  3947  0703  3EFF               	addlw	-1
  3948  0704  1D03               	skipz
  3949  0705  2F01               	goto	u5795
  3950  0706  1003               	clrc
  3951  0707  0D25               	rlf	??_sprintf^(0+128),w
  3952  0708  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3953  0709  0084               	movwf	4
  3954  070A  120A  158A  200A  120A  118A  	fcall	stringdir
  3955  070F  00F0               	movwf	___lldiv@divisor
  3956  0710  120A  158A  200A  120A  118A  	fcall	stringdir
  3957  0715  00F1               	movwf	___lldiv@divisor+1
  3958  0716  120A  158A  200A  120A  118A  	fcall	stringdir
  3959  071B  00F2               	movwf	___lldiv@divisor+2
  3960  071C  120A  158A  200A  120A  118A  	fcall	stringdir
  3961  0721  00F3               	movwf	___lldiv@divisor+3
  3962  0722  0834               	movf	(sprintf@val+3)^(0+128),w
  3963  0723  00F7               	movwf	___lldiv@dividend+3
  3964  0724  0833               	movf	(sprintf@val+2)^(0+128),w
  3965  0725  00F6               	movwf	___lldiv@dividend+2
  3966  0726  0832               	movf	(sprintf@val+1)^(0+128),w
  3967  0727  00F5               	movwf	___lldiv@dividend+1
  3968  0728  0831               	movf	sprintf@val^(0+128),w
  3969  0729  00F4               	movwf	___lldiv@dividend
  3970  072A  160A  158A  26AB  120A  118A  	fcall	___lldiv
  3971  072F  0873               	movf	?___lldiv+3,w
  3972  0730  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3973  0731  0872               	movf	?___lldiv+2,w
  3974  0732  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3975  0733  0871               	movf	?___lldiv+1,w
  3976  0734  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3977  0735  0870               	movf	?___lldiv,w
  3978  0736  00B7               	movwf	sprintf@tmpval^(0+128)
  3979                           
  3980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3981  0737  3000               	movlw	0
  3982  0738  00F3               	movwf	___llmod@divisor+3
  3983  0739  3000               	movlw	0
  3984  073A  00F2               	movwf	___llmod@divisor+2
  3985  073B  3000               	movlw	0
  3986  073C  00F1               	movwf	___llmod@divisor+1
  3987  073D  300A               	movlw	10
  3988  073E  00F0               	movwf	___llmod@divisor
  3989  073F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3990  0740  00F7               	movwf	___llmod@dividend+3
  3991  0741  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3992  0742  00F6               	movwf	___llmod@dividend+2
  3993  0743  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3994  0744  00F5               	movwf	___llmod@dividend+1
  3995  0745  0837               	movf	sprintf@tmpval^(0+128),w
  3996  0746  00F4               	movwf	___llmod@dividend
  3997  0747  160A  158A  2605  120A  118A  	fcall	___llmod
  3998  074C  0873               	movf	?___llmod+3,w
  3999  074D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4000  074E  0872               	movf	?___llmod+2,w
  4001  074F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4002  0750  0871               	movf	?___llmod+1,w
  4003  0751  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4004  0752  0870               	movf	?___llmod,w
  4005  0753  00B7               	movwf	sprintf@tmpval^(0+128)
  4006                           
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  4008  0754  0837               	movf	sprintf@tmpval^(0+128),w
  4009  0755  3E30               	addlw	48
  4010  0756  00A5               	movwf	??_sprintf^(0+128)
  4011  0757  083B               	movf	sprintf@sp^(0+128),w
  4012  0758  0084               	movwf	4
  4013  0759  0825               	movf	??_sprintf^(0+128),w
  4014  075A  1383               	bcf	3,7	;select IRP bank0
  4015  075B  0080               	movwf	0
  4016  075C  3001               	movlw	1
  4017  075D  00A5               	movwf	??_sprintf^(0+128)
  4018  075E  0825               	movf	??_sprintf^(0+128),w
  4019  075F  07BB               	addwf	sprintf@sp^(0+128),f
  4020                           
  4021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  4022  0760  0842               	movf	sprintf@c^(0+128),w
  4023  0761  00A5               	movwf	??_sprintf^(0+128)
  4024  0762  3001               	movlw	1
  4025  0763                     u5805:	
  4026  0763  1003               	clrc
  4027  0764  0DA5               	rlf	??_sprintf^(0+128),f
  4028  0765  3EFF               	addlw	-1
  4029  0766  1D03               	skipz
  4030  0767  2F63               	goto	u5805
  4031  0768  1003               	clrc
  4032  0769  0D25               	rlf	??_sprintf^(0+128),w
  4033  076A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4034  076B  0084               	movwf	4
  4035  076C  120A  158A  200A  120A  118A  	fcall	stringdir
  4036  0771  00F0               	movwf	___llmod@divisor
  4037  0772  120A  158A  200A  120A  118A  	fcall	stringdir
  4038  0777  00F1               	movwf	___llmod@divisor+1
  4039  0778  120A  158A  200A  120A  118A  	fcall	stringdir
  4040  077D  00F2               	movwf	___llmod@divisor+2
  4041  077E  120A  158A  200A  120A  118A  	fcall	stringdir
  4042  0783  00F3               	movwf	___llmod@divisor+3
  4043  0784  0834               	movf	(sprintf@val+3)^(0+128),w
  4044  0785  00F7               	movwf	___llmod@dividend+3
  4045  0786  0833               	movf	(sprintf@val+2)^(0+128),w
  4046  0787  00F6               	movwf	___llmod@dividend+2
  4047  0788  0832               	movf	(sprintf@val+1)^(0+128),w
  4048  0789  00F5               	movwf	___llmod@dividend+1
  4049  078A  0831               	movf	sprintf@val^(0+128),w
  4050  078B  00F4               	movwf	___llmod@dividend
  4051  078C  160A  158A  2605  120A  118A  	fcall	___llmod
  4052  0791  0873               	movf	?___llmod+3,w
  4053  0792  00B4               	movwf	(sprintf@val+3)^(0+128)
  4054  0793  0872               	movf	?___llmod+2,w
  4055  0794  00B3               	movwf	(sprintf@val+2)^(0+128)
  4056  0795  0871               	movf	?___llmod+1,w
  4057  0796  00B2               	movwf	(sprintf@val+1)^(0+128)
  4058  0797  0870               	movf	?___llmod,w
  4059  0798  2EF8               	goto	L6
  4060  0799                     l3477:	
  4061                           
  4062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  4063  0799  3030               	movlw	48
  4064  079A  00A5               	movwf	??_sprintf^(0+128)
  4065  079B  083B               	movf	sprintf@sp^(0+128),w
  4066  079C  0084               	movwf	4
  4067  079D  0825               	movf	??_sprintf^(0+128),w
  4068  079E  1383               	bcf	3,7	;select IRP bank0
  4069  079F  0080               	movwf	0
  4070  07A0  3001               	movlw	1
  4071  07A1  00A5               	movwf	??_sprintf^(0+128)
  4072  07A2  0825               	movf	??_sprintf^(0+128),w
  4073  07A3  07BB               	addwf	sprintf@sp^(0+128),f
  4074                           
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  4076  07A4  30FF               	movlw	255
  4077  07A5  07BC               	addwf	sprintf@prec^(0+128),f
  4078  07A6  1803               	skipnc
  4079  07A7  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  4080  07A8  30FF               	movlw	255
  4081  07A9  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  4082  07AA                     l3483:	
  4083                           
  4084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  4085  07AA  083C               	movf	sprintf@prec^(0+128),w
  4086  07AB  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  4087  07AC  1903               	btfsc	3,2
  4088  07AD  2ABB               	goto	l3503
  4089  07AE  2F99               	goto	l3477
  4090  07AF                     l3485:	
  4091                           
  4092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
  4093  07AF  083C               	movf	sprintf@prec^(0+128),w
  4094  07B0  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  4095  07B1  1D03               	btfss	3,2
  4096  07B2  2FBF               	goto	l280
  4097  07B3  0834               	movf	(sprintf@val+3)^(0+128),w
  4098  07B4  0433               	iorwf	(sprintf@val+2)^(0+128),w
  4099  07B5  0432               	iorwf	(sprintf@val+1)^(0+128),w
  4100  07B6  0431               	iorwf	sprintf@val^(0+128),w
  4101  07B7  1D03               	skipz
  4102  07B8  2FBF               	goto	l280
  4103                           
  4104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  4105  07B9  3001               	movlw	1
  4106  07BA  07BC               	addwf	sprintf@prec^(0+128),f
  4107  07BB  1803               	skipnc
  4108  07BC  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  4109  07BD  3000               	movlw	0
  4110  07BE  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  4111  07BF                     l280:	
  4112                           
  4113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  4114  07BF  083D               	movf	(sprintf@prec+1)^(0+128),w
  4115  07C0  3A80               	xorlw	128
  4116  07C1  3C80               	sublw	128
  4117  07C2  1D03               	skipz
  4118  07C3  2FC6               	goto	u5855
  4119  07C4  083C               	movf	sprintf@prec^(0+128),w
  4120  07C5  0242               	subwf	sprintf@c^(0+128),w
  4121  07C6                     u5855:	
  4122  07C6  1C03               	btfss	3,0
  4123  07C7  2FD5               	goto	l3497
  4124  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  4125  07C9  1303               	bcf	3,6	;RP1=0, select bank1
  4126  07CA  083D               	movf	(sprintf@prec+1)^(0+128),w
  4127  07CB  3A80               	xorlw	128
  4128  07CC  00A5               	movwf	??_sprintf^(0+128)
  4129  07CD  3080               	movlw	128
  4130  07CE  0225               	subwf	??_sprintf^(0+128),w
  4131  07CF  1D03               	skipz
  4132  07D0  2FD3               	goto	u5865
  4133  07D1  0842               	movf	sprintf@c^(0+128),w
  4134  07D2  023C               	subwf	sprintf@prec^(0+128),w
  4135  07D3                     u5865:	
  4136  07D3  1C03               	btfss	3,0
  4137  07D4  2FD5               	goto	l3497
  4138  07D5                     l3497:	
  4139                           
  4140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  4141  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  4142  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  4143  07D7  082F               	movf	sprintf@flag^(0+128),w
  4144  07D8  3903               	andlw	3
  4145  07D9  1903               	btfsc	3,2
  4146  07DA  2ABB               	goto	l3503
  4147                           
  4148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  4149  07DB  302D               	movlw	45
  4150  07DC                     L7:	
  4151  07DC  00A5               	movwf	??_sprintf^(0+128)
  4152  07DD  083B               	movf	sprintf@sp^(0+128),w
  4153  07DE  0084               	movwf	4
  4154  07DF  0825               	movf	??_sprintf^(0+128),w
  4155  07E0  1383               	bcf	3,7	;select IRP bank0
  4156  07E1  0080               	movwf	0
  4157  07E2  3001               	movlw	1
  4158  07E3  00A5               	movwf	??_sprintf^(0+128)
  4159  07E4  0825               	movf	??_sprintf^(0+128),w
  4160  07E5  07BB               	addwf	sprintf@sp^(0+128),f
  4161  07E6  2ABB               	goto	l3503
  4162  07E7                     l3505:	
  4163                           
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  4165  07E7  083B               	movf	sprintf@sp^(0+128),w
  4166  07E8  0084               	movwf	4
  4167  07E9  1383               	bcf	3,7	;select IRP bank0
  4168  07EA  0180               	clrf	0
  4169  07EB  0008               	return
  4170  07EC                     __end_of_sprintf:	
  4171                           
  4172                           	psect	text6
  4173  0994                     __ptext6:	
  4174 ;; *************** function _scale *****************
  4175 ;; Defined at:
  4176 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  scl             1    wreg     char 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  scl             1   48[BANK0 ] char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  4   30[BANK0 ] char 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 300/100
  4187 ;;		On exit  : 300/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4190 ;;      Params:         0       4       0       0       0
  4191 ;;      Locals:         0       5       0       0       0
  4192 ;;      Temps:          0      10       0       0       0
  4193 ;;      Totals:         0      19       0       0       0
  4194 ;;Total ram usage:       19 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    2
  4197 ;; This function calls:
  4198 ;;		___awdiv
  4199 ;;		___awmod
  4200 ;;		___flmul
  4201 ;; This function is called by:
  4202 ;;		_sprintf
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _scale
  4208  0994                     _scale:	
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4212                           ;scale@scl stored from wreg
  4213  0994  1283               	bcf	3,5	;RP0=0, select bank0
  4214  0995  00D0               	movwf	scale@scl
  4215                           
  4216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  4217  0996  1FD0               	btfss	scale@scl,7
  4218  0997  2B2B               	goto	l2929
  4219                           
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  4221  0998  09D0               	comf	scale@scl,f
  4222  0999  0AD0               	incf	scale@scl,f
  4223                           
  4224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  4225  099A  0850               	movf	scale@scl,w
  4226  099B  3A80               	xorlw	128
  4227  099C  3E12               	addlw	-238
  4228  099D  1C03               	skipc
  4229  099E  2A7B               	goto	l2919
  4230                           
  4231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4232  099F  300A               	movlw	10
  4233  09A0  00F7               	movwf	___awdiv@divisor
  4234  09A1  3000               	movlw	0
  4235  09A2  00F8               	movwf	___awdiv@divisor+1
  4236  09A3  0850               	movf	scale@scl,w
  4237  09A4  00F2               	movwf	___awmod@dividend
  4238  09A5  01F3               	clrf	___awmod@dividend+1
  4239  09A6  1BF2               	btfsc	___awmod@dividend,7
  4240  09A7  03F3               	decf	___awmod@dividend+1,f
  4241  09A8  3064               	movlw	100
  4242  09A9  00F0               	movwf	___awmod@divisor
  4243  09AA  3000               	movlw	0
  4244  09AB  00F1               	movwf	___awmod@divisor+1
  4245  09AC  160A  158A  25BA  120A  158A  	fcall	___awmod
  4246  09B1  0871               	movf	?___awmod+1,w
  4247  09B2  00FA               	movwf	___awdiv@dividend+1
  4248  09B3  0870               	movf	?___awmod,w
  4249  09B4  00F9               	movwf	___awdiv@dividend
  4250  09B5  160A  158A  2651  120A  158A  	fcall	___awdiv
  4251  09BA  0877               	movf	?___awdiv,w
  4252  09BB  00C2               	movwf	??_scale
  4253  09BC  3001               	movlw	1
  4254  09BD                     u4525:	
  4255  09BD  1003               	clrc
  4256  09BE  0DC2               	rlf	??_scale,f
  4257  09BF  3EFF               	addlw	-1
  4258  09C0  1D03               	skipz
  4259  09C1  29BD               	goto	u4525
  4260  09C2  1003               	clrc
  4261  09C3  0D42               	rlf	??_scale,w
  4262  09C4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4263  09C5  0084               	movwf	4
  4264  09C6  120A  158A  200A  120A  158A  	fcall	stringdir
  4265  09CB  00C3               	movwf	??_scale+1
  4266  09CC  120A  158A  200A  120A  158A  	fcall	stringdir
  4267  09D1  00C4               	movwf	??_scale+2
  4268  09D2  120A  158A  200A  120A  158A  	fcall	stringdir
  4269  09D7  00C5               	movwf	??_scale+3
  4270  09D8  120A  158A  200A  120A  158A  	fcall	stringdir
  4271  09DD  00C6               	movwf	??_scale+4
  4272  09DE  0846               	movf	??_scale+4,w
  4273  09DF  00A7               	movwf	___flmul@b+3
  4274  09E0  0845               	movf	??_scale+3,w
  4275  09E1  00A6               	movwf	___flmul@b+2
  4276  09E2  0844               	movf	??_scale+2,w
  4277  09E3  00A5               	movwf	___flmul@b+1
  4278  09E4  0843               	movf	??_scale+1,w
  4279  09E5  00A4               	movwf	___flmul@b
  4280  09E6  3064               	movlw	100
  4281  09E7  00F7               	movwf	___awdiv@divisor
  4282  09E8  3000               	movlw	0
  4283  09E9  00F8               	movwf	___awdiv@divisor+1
  4284  09EA  0850               	movf	scale@scl,w
  4285  09EB  00F9               	movwf	___awdiv@dividend
  4286  09EC  01FA               	clrf	___awdiv@dividend+1
  4287  09ED  1BF9               	btfsc	___awdiv@dividend,7
  4288  09EE  03FA               	decf	___awdiv@dividend+1,f
  4289  09EF  160A  158A  2651  120A  158A  	fcall	___awdiv
  4290  09F4  0877               	movf	?___awdiv,w
  4291  09F5  00C7               	movwf	??_scale+5
  4292  09F6  3001               	movlw	1
  4293  09F7                     u4535:	
  4294  09F7  1003               	clrc
  4295  09F8  0DC7               	rlf	??_scale+5,f
  4296  09F9  3EFF               	addlw	-1
  4297  09FA  1D03               	skipz
  4298  09FB  29F7               	goto	u4535
  4299  09FC  1003               	clrc
  4300  09FD  0D47               	rlf	??_scale+5,w
  4301  09FE  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4302  09FF  0084               	movwf	4
  4303  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4304  0A05  00C8               	movwf	??_scale+6
  4305  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4306  0A0B  00C9               	movwf	??_scale+7
  4307  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4308  0A11  00CA               	movwf	??_scale+8
  4309  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4310  0A17  00CB               	movwf	??_scale+9
  4311  0A18  084B               	movf	??_scale+9,w
  4312  0A19  00AB               	movwf	___flmul@a+3
  4313  0A1A  084A               	movf	??_scale+8,w
  4314  0A1B  00AA               	movwf	___flmul@a+2
  4315  0A1C  0849               	movf	??_scale+7,w
  4316  0A1D  00A9               	movwf	___flmul@a+1
  4317  0A1E  0848               	movf	??_scale+6,w
  4318  0A1F  00A8               	movwf	___flmul@a
  4319  0A20  160A  118A  250B  120A  158A  	fcall	___flmul
  4320  0A25  0827               	movf	?___flmul+3,w
  4321  0A26  00CF               	movwf	_scale$836+3
  4322  0A27  0826               	movf	?___flmul+2,w
  4323  0A28  00CE               	movwf	_scale$836+2
  4324  0A29  0825               	movf	?___flmul+1,w
  4325  0A2A  00CD               	movwf	_scale$836+1
  4326  0A2B  0824               	movf	?___flmul,w
  4327  0A2C  00CC               	movwf	_scale$836
  4328                           
  4329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4330  0A2D  300A               	movlw	10
  4331  0A2E  00F0               	movwf	___awmod@divisor
  4332  0A2F  3000               	movlw	0
  4333  0A30  00F1               	movwf	___awmod@divisor+1
  4334  0A31  0850               	movf	scale@scl,w
  4335  0A32  00F2               	movwf	___awmod@dividend
  4336  0A33  01F3               	clrf	___awmod@dividend+1
  4337  0A34  1BF2               	btfsc	___awmod@dividend,7
  4338  0A35  03F3               	decf	___awmod@dividend+1,f
  4339  0A36  160A  158A  25BA  120A  158A  	fcall	___awmod
  4340  0A3B  0870               	movf	?___awmod,w
  4341  0A3C  00C2               	movwf	??_scale
  4342  0A3D  3001               	movlw	1
  4343  0A3E                     u4545:	
  4344  0A3E  1003               	clrc
  4345  0A3F  0DC2               	rlf	??_scale,f
  4346  0A40  3EFF               	addlw	-1
  4347  0A41  1D03               	skipz
  4348  0A42  2A3E               	goto	u4545
  4349  0A43  1003               	clrc
  4350  0A44  0D42               	rlf	??_scale,w
  4351  0A45  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4352  0A46  0084               	movwf	4
  4353  0A47  120A  158A  200A  120A  158A  	fcall	stringdir
  4354  0A4C  00C3               	movwf	??_scale+1
  4355  0A4D  120A  158A  200A  120A  158A  	fcall	stringdir
  4356  0A52  00C4               	movwf	??_scale+2
  4357  0A53  120A  158A  200A  120A  158A  	fcall	stringdir
  4358  0A58  00C5               	movwf	??_scale+3
  4359  0A59  120A  158A  200A  120A  158A  	fcall	stringdir
  4360  0A5E  00C6               	movwf	??_scale+4
  4361  0A5F  0846               	movf	??_scale+4,w
  4362  0A60  00A7               	movwf	___flmul@b+3
  4363  0A61  0845               	movf	??_scale+3,w
  4364  0A62  00A6               	movwf	___flmul@b+2
  4365  0A63  0844               	movf	??_scale+2,w
  4366  0A64  00A5               	movwf	___flmul@b+1
  4367  0A65  0843               	movf	??_scale+1,w
  4368  0A66  00A4               	movwf	___flmul@b
  4369  0A67  084F               	movf	_scale$836+3,w
  4370  0A68  00AB               	movwf	___flmul@a+3
  4371  0A69  084E               	movf	_scale$836+2,w
  4372  0A6A  00AA               	movwf	___flmul@a+2
  4373  0A6B  084D               	movf	_scale$836+1,w
  4374  0A6C  00A9               	movwf	___flmul@a+1
  4375  0A6D  084C               	movf	_scale$836,w
  4376  0A6E  00A8               	movwf	___flmul@a
  4377  0A6F  160A  118A  250B   	fcall	___flmul
  4378  0A72  0827               	movf	?___flmul+3,w
  4379  0A73  00C1               	movwf	?_scale+3
  4380  0A74  0826               	movf	?___flmul+2,w
  4381  0A75  00C0               	movwf	?_scale+2
  4382  0A76  0825               	movf	?___flmul+1,w
  4383  0A77  00BF               	movwf	?_scale+1
  4384  0A78  0824               	movf	?___flmul,w
  4385  0A79  00BE               	movwf	?_scale
  4386  0A7A  0008               	return
  4387  0A7B                     l2919:	
  4388  0A7B  0850               	movf	scale@scl,w
  4389  0A7C  3A80               	xorlw	128
  4390  0A7D  3E75               	addlw	-139
  4391  0A7E  1C03               	skipc
  4392  0A7F  2B00               	goto	l2925
  4393                           
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4395  0A80  300A               	movlw	10
  4396  0A81  00F0               	movwf	___awmod@divisor
  4397  0A82  3000               	movlw	0
  4398  0A83  00F1               	movwf	___awmod@divisor+1
  4399  0A84  0850               	movf	scale@scl,w
  4400  0A85  00F2               	movwf	___awmod@dividend
  4401  0A86  01F3               	clrf	___awmod@dividend+1
  4402  0A87  1BF2               	btfsc	___awmod@dividend,7
  4403  0A88  03F3               	decf	___awmod@dividend+1,f
  4404  0A89  160A  158A  25BA  120A  158A  	fcall	___awmod
  4405  0A8E  0870               	movf	?___awmod,w
  4406  0A8F  00C2               	movwf	??_scale
  4407  0A90  3001               	movlw	1
  4408  0A91                     u4565:	
  4409  0A91  1003               	clrc
  4410  0A92  0DC2               	rlf	??_scale,f
  4411  0A93  3EFF               	addlw	-1
  4412  0A94  1D03               	skipz
  4413  0A95  2A91               	goto	u4565
  4414  0A96  1003               	clrc
  4415  0A97  0D42               	rlf	??_scale,w
  4416  0A98  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4417  0A99  0084               	movwf	4
  4418  0A9A  120A  158A  200A  120A  158A  	fcall	stringdir
  4419  0A9F  00C3               	movwf	??_scale+1
  4420  0AA0  120A  158A  200A  120A  158A  	fcall	stringdir
  4421  0AA5  00C4               	movwf	??_scale+2
  4422  0AA6  120A  158A  200A  120A  158A  	fcall	stringdir
  4423  0AAB  00C5               	movwf	??_scale+3
  4424  0AAC  120A  158A  200A  120A  158A  	fcall	stringdir
  4425  0AB1  00C6               	movwf	??_scale+4
  4426  0AB2  0846               	movf	??_scale+4,w
  4427  0AB3  00A7               	movwf	___flmul@b+3
  4428  0AB4  0845               	movf	??_scale+3,w
  4429  0AB5  00A6               	movwf	___flmul@b+2
  4430  0AB6  0844               	movf	??_scale+2,w
  4431  0AB7  00A5               	movwf	___flmul@b+1
  4432  0AB8  0843               	movf	??_scale+1,w
  4433  0AB9  00A4               	movwf	___flmul@b
  4434  0ABA  300A               	movlw	10
  4435  0ABB  00F7               	movwf	___awdiv@divisor
  4436  0ABC  3000               	movlw	0
  4437  0ABD  00F8               	movwf	___awdiv@divisor+1
  4438  0ABE  0850               	movf	scale@scl,w
  4439  0ABF  00F9               	movwf	___awdiv@dividend
  4440  0AC0  01FA               	clrf	___awdiv@dividend+1
  4441  0AC1  1BF9               	btfsc	___awdiv@dividend,7
  4442  0AC2  03FA               	decf	___awdiv@dividend+1,f
  4443  0AC3  160A  158A  2651  120A  158A  	fcall	___awdiv
  4444  0AC8  0877               	movf	?___awdiv,w
  4445  0AC9  00C7               	movwf	??_scale+5
  4446  0ACA  3001               	movlw	1
  4447  0ACB                     u4575:	
  4448  0ACB  1003               	clrc
  4449  0ACC  0DC7               	rlf	??_scale+5,f
  4450  0ACD  3EFF               	addlw	-1
  4451  0ACE  1D03               	skipz
  4452  0ACF  2ACB               	goto	u4575
  4453  0AD0  1003               	clrc
  4454  0AD1  0D47               	rlf	??_scale+5,w
  4455  0AD2  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4456  0AD3  0084               	movwf	4
  4457  0AD4  120A  158A  200A  120A  158A  	fcall	stringdir
  4458  0AD9  00C8               	movwf	??_scale+6
  4459  0ADA  120A  158A  200A  120A  158A  	fcall	stringdir
  4460  0ADF  00C9               	movwf	??_scale+7
  4461  0AE0  120A  158A  200A  120A  158A  	fcall	stringdir
  4462  0AE5  00CA               	movwf	??_scale+8
  4463  0AE6  120A  158A  200A  120A  158A  	fcall	stringdir
  4464  0AEB  00CB               	movwf	??_scale+9
  4465  0AEC  084B               	movf	??_scale+9,w
  4466  0AED  00AB               	movwf	___flmul@a+3
  4467  0AEE  084A               	movf	??_scale+8,w
  4468  0AEF  00AA               	movwf	___flmul@a+2
  4469  0AF0  0849               	movf	??_scale+7,w
  4470  0AF1  00A9               	movwf	___flmul@a+1
  4471  0AF2  0848               	movf	??_scale+6,w
  4472  0AF3  00A8               	movwf	___flmul@a
  4473  0AF4  160A  118A  250B   	fcall	___flmul
  4474  0AF7  0827               	movf	?___flmul+3,w
  4475  0AF8  00C1               	movwf	?_scale+3
  4476  0AF9  0826               	movf	?___flmul+2,w
  4477  0AFA  00C0               	movwf	?_scale+2
  4478  0AFB  0825               	movf	?___flmul+1,w
  4479  0AFC  00BF               	movwf	?_scale+1
  4480  0AFD  0824               	movf	?___flmul,w
  4481  0AFE  00BE               	movwf	?_scale
  4482  0AFF  0008               	return
  4483  0B00                     l2925:	
  4484                           
  4485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  4486  0B00  0850               	movf	scale@scl,w
  4487  0B01  00C2               	movwf	??_scale
  4488  0B02  3001               	movlw	1
  4489  0B03                     u4585:	
  4490  0B03  1003               	clrc
  4491  0B04  0DC2               	rlf	??_scale,f
  4492  0B05  3EFF               	addlw	-1
  4493  0B06  1D03               	skipz
  4494  0B07  2B03               	goto	u4585
  4495  0B08  1003               	clrc
  4496  0B09  0D42               	rlf	??_scale,w
  4497  0B0A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4498  0B0B  0084               	movwf	4
  4499  0B0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4500  0B11  00C3               	movwf	??_scale+1
  4501  0B12  120A  158A  200A  120A  158A  	fcall	stringdir
  4502  0B17  00C4               	movwf	??_scale+2
  4503  0B18  120A  158A  200A  120A  158A  	fcall	stringdir
  4504  0B1D  00C5               	movwf	??_scale+3
  4505  0B1E  120A  158A  200A   	fcall	stringdir
  4506  0B21  00C6               	movwf	??_scale+4
  4507  0B22  0846               	movf	??_scale+4,w
  4508  0B23  00C1               	movwf	?_scale+3
  4509  0B24  0845               	movf	??_scale+3,w
  4510  0B25  00C0               	movwf	?_scale+2
  4511  0B26  0844               	movf	??_scale+2,w
  4512  0B27  00BF               	movwf	?_scale+1
  4513  0B28  0843               	movf	??_scale+1,w
  4514  0B29  00BE               	movwf	?_scale
  4515  0B2A  0008               	return
  4516  0B2B                     l2929:	
  4517                           
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  4519  0B2B  0850               	movf	scale@scl,w
  4520  0B2C  3A80               	xorlw	128
  4521  0B2D  3E12               	addlw	-238
  4522  0B2E  1C03               	skipc
  4523  0B2F  2C0C               	goto	l2937
  4524                           
  4525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4526  0B30  300A               	movlw	10
  4527  0B31  00F7               	movwf	___awdiv@divisor
  4528  0B32  3000               	movlw	0
  4529  0B33  00F8               	movwf	___awdiv@divisor+1
  4530  0B34  0850               	movf	scale@scl,w
  4531  0B35  00F2               	movwf	___awmod@dividend
  4532  0B36  01F3               	clrf	___awmod@dividend+1
  4533  0B37  1BF2               	btfsc	___awmod@dividend,7
  4534  0B38  03F3               	decf	___awmod@dividend+1,f
  4535  0B39  3064               	movlw	100
  4536  0B3A  00F0               	movwf	___awmod@divisor
  4537  0B3B  3000               	movlw	0
  4538  0B3C  00F1               	movwf	___awmod@divisor+1
  4539  0B3D  160A  158A  25BA  120A  158A  	fcall	___awmod
  4540  0B42  0871               	movf	?___awmod+1,w
  4541  0B43  00FA               	movwf	___awdiv@dividend+1
  4542  0B44  0870               	movf	?___awmod,w
  4543  0B45  00F9               	movwf	___awdiv@dividend
  4544  0B46  160A  158A  2651  120A  158A  	fcall	___awdiv
  4545  0B4B  0877               	movf	?___awdiv,w
  4546  0B4C  00C2               	movwf	??_scale
  4547  0B4D  3001               	movlw	1
  4548  0B4E                     u4605:	
  4549  0B4E  1003               	clrc
  4550  0B4F  0DC2               	rlf	??_scale,f
  4551  0B50  3EFF               	addlw	-1
  4552  0B51  1D03               	skipz
  4553  0B52  2B4E               	goto	u4605
  4554  0B53  1003               	clrc
  4555  0B54  0D42               	rlf	??_scale,w
  4556  0B55  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4557  0B56  0084               	movwf	4
  4558  0B57  120A  158A  200A  120A  158A  	fcall	stringdir
  4559  0B5C  00C3               	movwf	??_scale+1
  4560  0B5D  120A  158A  200A  120A  158A  	fcall	stringdir
  4561  0B62  00C4               	movwf	??_scale+2
  4562  0B63  120A  158A  200A  120A  158A  	fcall	stringdir
  4563  0B68  00C5               	movwf	??_scale+3
  4564  0B69  120A  158A  200A  120A  158A  	fcall	stringdir
  4565  0B6E  00C6               	movwf	??_scale+4
  4566  0B6F  0846               	movf	??_scale+4,w
  4567  0B70  00A7               	movwf	___flmul@b+3
  4568  0B71  0845               	movf	??_scale+3,w
  4569  0B72  00A6               	movwf	___flmul@b+2
  4570  0B73  0844               	movf	??_scale+2,w
  4571  0B74  00A5               	movwf	___flmul@b+1
  4572  0B75  0843               	movf	??_scale+1,w
  4573  0B76  00A4               	movwf	___flmul@b
  4574  0B77  3064               	movlw	100
  4575  0B78  00F7               	movwf	___awdiv@divisor
  4576  0B79  3000               	movlw	0
  4577  0B7A  00F8               	movwf	___awdiv@divisor+1
  4578  0B7B  0850               	movf	scale@scl,w
  4579  0B7C  00F9               	movwf	___awdiv@dividend
  4580  0B7D  01FA               	clrf	___awdiv@dividend+1
  4581  0B7E  1BF9               	btfsc	___awdiv@dividend,7
  4582  0B7F  03FA               	decf	___awdiv@dividend+1,f
  4583  0B80  160A  158A  2651  120A  158A  	fcall	___awdiv
  4584  0B85  0877               	movf	?___awdiv,w
  4585  0B86  00C7               	movwf	??_scale+5
  4586  0B87  3001               	movlw	1
  4587  0B88                     u4615:	
  4588  0B88  1003               	clrc
  4589  0B89  0DC7               	rlf	??_scale+5,f
  4590  0B8A  3EFF               	addlw	-1
  4591  0B8B  1D03               	skipz
  4592  0B8C  2B88               	goto	u4615
  4593  0B8D  1003               	clrc
  4594  0B8E  0D47               	rlf	??_scale+5,w
  4595  0B8F  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4596  0B90  0084               	movwf	4
  4597  0B91  120A  158A  200A  120A  158A  	fcall	stringdir
  4598  0B96  00C8               	movwf	??_scale+6
  4599  0B97  120A  158A  200A  120A  158A  	fcall	stringdir
  4600  0B9C  00C9               	movwf	??_scale+7
  4601  0B9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4602  0BA2  00CA               	movwf	??_scale+8
  4603  0BA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4604  0BA8  00CB               	movwf	??_scale+9
  4605  0BA9  084B               	movf	??_scale+9,w
  4606  0BAA  00AB               	movwf	___flmul@a+3
  4607  0BAB  084A               	movf	??_scale+8,w
  4608  0BAC  00AA               	movwf	___flmul@a+2
  4609  0BAD  0849               	movf	??_scale+7,w
  4610  0BAE  00A9               	movwf	___flmul@a+1
  4611  0BAF  0848               	movf	??_scale+6,w
  4612  0BB0  00A8               	movwf	___flmul@a
  4613  0BB1  160A  118A  250B  120A  158A  	fcall	___flmul
  4614  0BB6  0827               	movf	?___flmul+3,w
  4615  0BB7  00CF               	movwf	_scale$836+3
  4616  0BB8  0826               	movf	?___flmul+2,w
  4617  0BB9  00CE               	movwf	_scale$836+2
  4618  0BBA  0825               	movf	?___flmul+1,w
  4619  0BBB  00CD               	movwf	_scale$836+1
  4620  0BBC  0824               	movf	?___flmul,w
  4621  0BBD  00CC               	movwf	_scale$836
  4622                           
  4623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4624  0BBE  300A               	movlw	10
  4625  0BBF  00F0               	movwf	___awmod@divisor
  4626  0BC0  3000               	movlw	0
  4627  0BC1  00F1               	movwf	___awmod@divisor+1
  4628  0BC2  0850               	movf	scale@scl,w
  4629  0BC3  00F2               	movwf	___awmod@dividend
  4630  0BC4  01F3               	clrf	___awmod@dividend+1
  4631  0BC5  1BF2               	btfsc	___awmod@dividend,7
  4632  0BC6  03F3               	decf	___awmod@dividend+1,f
  4633  0BC7  160A  158A  25BA  120A  158A  	fcall	___awmod
  4634  0BCC  0870               	movf	?___awmod,w
  4635  0BCD  00C2               	movwf	??_scale
  4636  0BCE  3001               	movlw	1
  4637  0BCF                     u4625:	
  4638  0BCF  1003               	clrc
  4639  0BD0  0DC2               	rlf	??_scale,f
  4640  0BD1  3EFF               	addlw	-1
  4641  0BD2  1D03               	skipz
  4642  0BD3  2BCF               	goto	u4625
  4643  0BD4  1003               	clrc
  4644  0BD5  0D42               	rlf	??_scale,w
  4645  0BD6  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4646  0BD7  0084               	movwf	4
  4647  0BD8  120A  158A  200A  120A  158A  	fcall	stringdir
  4648  0BDD  00C3               	movwf	??_scale+1
  4649  0BDE  120A  158A  200A  120A  158A  	fcall	stringdir
  4650  0BE3  00C4               	movwf	??_scale+2
  4651  0BE4  120A  158A  200A  120A  158A  	fcall	stringdir
  4652  0BE9  00C5               	movwf	??_scale+3
  4653  0BEA  120A  158A  200A  120A  158A  	fcall	stringdir
  4654  0BEF  00C6               	movwf	??_scale+4
  4655  0BF0  0846               	movf	??_scale+4,w
  4656  0BF1  00A7               	movwf	___flmul@b+3
  4657  0BF2  0845               	movf	??_scale+3,w
  4658  0BF3  00A6               	movwf	___flmul@b+2
  4659  0BF4  0844               	movf	??_scale+2,w
  4660  0BF5  00A5               	movwf	___flmul@b+1
  4661  0BF6  0843               	movf	??_scale+1,w
  4662  0BF7  00A4               	movwf	___flmul@b
  4663  0BF8  084F               	movf	_scale$836+3,w
  4664  0BF9  00AB               	movwf	___flmul@a+3
  4665  0BFA  084E               	movf	_scale$836+2,w
  4666  0BFB  00AA               	movwf	___flmul@a+2
  4667  0BFC  084D               	movf	_scale$836+1,w
  4668  0BFD  00A9               	movwf	___flmul@a+1
  4669  0BFE  084C               	movf	_scale$836,w
  4670  0BFF  00A8               	movwf	___flmul@a
  4671  0C00  160A  118A  250B   	fcall	___flmul
  4672  0C03  0827               	movf	?___flmul+3,w
  4673  0C04  00C1               	movwf	?_scale+3
  4674  0C05  0826               	movf	?___flmul+2,w
  4675  0C06  00C0               	movwf	?_scale+2
  4676  0C07  0825               	movf	?___flmul+1,w
  4677  0C08  00BF               	movwf	?_scale+1
  4678  0C09  0824               	movf	?___flmul,w
  4679  0C0A  00BE               	movwf	?_scale
  4680  0C0B  0008               	return
  4681  0C0C                     l2937:	
  4682  0C0C  0850               	movf	scale@scl,w
  4683  0C0D  3A80               	xorlw	128
  4684  0C0E  3E75               	addlw	-139
  4685  0C0F  1C03               	skipc
  4686  0C10  2C91               	goto	l2943
  4687                           
  4688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4689  0C11  300A               	movlw	10
  4690  0C12  00F0               	movwf	___awmod@divisor
  4691  0C13  3000               	movlw	0
  4692  0C14  00F1               	movwf	___awmod@divisor+1
  4693  0C15  0850               	movf	scale@scl,w
  4694  0C16  00F2               	movwf	___awmod@dividend
  4695  0C17  01F3               	clrf	___awmod@dividend+1
  4696  0C18  1BF2               	btfsc	___awmod@dividend,7
  4697  0C19  03F3               	decf	___awmod@dividend+1,f
  4698  0C1A  160A  158A  25BA  120A  158A  	fcall	___awmod
  4699  0C1F  0870               	movf	?___awmod,w
  4700  0C20  00C2               	movwf	??_scale
  4701  0C21  3001               	movlw	1
  4702  0C22                     u4645:	
  4703  0C22  1003               	clrc
  4704  0C23  0DC2               	rlf	??_scale,f
  4705  0C24  3EFF               	addlw	-1
  4706  0C25  1D03               	skipz
  4707  0C26  2C22               	goto	u4645
  4708  0C27  1003               	clrc
  4709  0C28  0D42               	rlf	??_scale,w
  4710  0C29  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4711  0C2A  0084               	movwf	4
  4712  0C2B  120A  158A  200A  120A  158A  	fcall	stringdir
  4713  0C30  00C3               	movwf	??_scale+1
  4714  0C31  120A  158A  200A  120A  158A  	fcall	stringdir
  4715  0C36  00C4               	movwf	??_scale+2
  4716  0C37  120A  158A  200A  120A  158A  	fcall	stringdir
  4717  0C3C  00C5               	movwf	??_scale+3
  4718  0C3D  120A  158A  200A  120A  158A  	fcall	stringdir
  4719  0C42  00C6               	movwf	??_scale+4
  4720  0C43  0846               	movf	??_scale+4,w
  4721  0C44  00A7               	movwf	___flmul@b+3
  4722  0C45  0845               	movf	??_scale+3,w
  4723  0C46  00A6               	movwf	___flmul@b+2
  4724  0C47  0844               	movf	??_scale+2,w
  4725  0C48  00A5               	movwf	___flmul@b+1
  4726  0C49  0843               	movf	??_scale+1,w
  4727  0C4A  00A4               	movwf	___flmul@b
  4728  0C4B  300A               	movlw	10
  4729  0C4C  00F7               	movwf	___awdiv@divisor
  4730  0C4D  3000               	movlw	0
  4731  0C4E  00F8               	movwf	___awdiv@divisor+1
  4732  0C4F  0850               	movf	scale@scl,w
  4733  0C50  00F9               	movwf	___awdiv@dividend
  4734  0C51  01FA               	clrf	___awdiv@dividend+1
  4735  0C52  1BF9               	btfsc	___awdiv@dividend,7
  4736  0C53  03FA               	decf	___awdiv@dividend+1,f
  4737  0C54  160A  158A  2651  120A  158A  	fcall	___awdiv
  4738  0C59  0877               	movf	?___awdiv,w
  4739  0C5A  00C7               	movwf	??_scale+5
  4740  0C5B  3001               	movlw	1
  4741  0C5C                     u4655:	
  4742  0C5C  1003               	clrc
  4743  0C5D  0DC7               	rlf	??_scale+5,f
  4744  0C5E  3EFF               	addlw	-1
  4745  0C5F  1D03               	skipz
  4746  0C60  2C5C               	goto	u4655
  4747  0C61  1003               	clrc
  4748  0C62  0D47               	rlf	??_scale+5,w
  4749  0C63  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4750  0C64  0084               	movwf	4
  4751  0C65  120A  158A  200A  120A  158A  	fcall	stringdir
  4752  0C6A  00C8               	movwf	??_scale+6
  4753  0C6B  120A  158A  200A  120A  158A  	fcall	stringdir
  4754  0C70  00C9               	movwf	??_scale+7
  4755  0C71  120A  158A  200A  120A  158A  	fcall	stringdir
  4756  0C76  00CA               	movwf	??_scale+8
  4757  0C77  120A  158A  200A  120A  158A  	fcall	stringdir
  4758  0C7C  00CB               	movwf	??_scale+9
  4759  0C7D  084B               	movf	??_scale+9,w
  4760  0C7E  00AB               	movwf	___flmul@a+3
  4761  0C7F  084A               	movf	??_scale+8,w
  4762  0C80  00AA               	movwf	___flmul@a+2
  4763  0C81  0849               	movf	??_scale+7,w
  4764  0C82  00A9               	movwf	___flmul@a+1
  4765  0C83  0848               	movf	??_scale+6,w
  4766  0C84  00A8               	movwf	___flmul@a
  4767  0C85  160A  118A  250B   	fcall	___flmul
  4768  0C88  0827               	movf	?___flmul+3,w
  4769  0C89  00C1               	movwf	?_scale+3
  4770  0C8A  0826               	movf	?___flmul+2,w
  4771  0C8B  00C0               	movwf	?_scale+2
  4772  0C8C  0825               	movf	?___flmul+1,w
  4773  0C8D  00BF               	movwf	?_scale+1
  4774  0C8E  0824               	movf	?___flmul,w
  4775  0C8F  00BE               	movwf	?_scale
  4776  0C90  0008               	return
  4777  0C91                     l2943:	
  4778                           
  4779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4780  0C91  0850               	movf	scale@scl,w
  4781  0C92  00C2               	movwf	??_scale
  4782  0C93  3001               	movlw	1
  4783  0C94                     u4665:	
  4784  0C94  1003               	clrc
  4785  0C95  0DC2               	rlf	??_scale,f
  4786  0C96  3EFF               	addlw	-1
  4787  0C97  1D03               	skipz
  4788  0C98  2C94               	goto	u4665
  4789  0C99  1003               	clrc
  4790  0C9A  0D42               	rlf	??_scale,w
  4791  0C9B  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4792  0C9C  0084               	movwf	4
  4793  0C9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4794  0CA2  00C3               	movwf	??_scale+1
  4795  0CA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4796  0CA8  00C4               	movwf	??_scale+2
  4797  0CA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4798  0CAE  00C5               	movwf	??_scale+3
  4799  0CAF  120A  158A  200A   	fcall	stringdir
  4800  0CB2  00C6               	movwf	??_scale+4
  4801  0CB3  0846               	movf	??_scale+4,w
  4802  0CB4  00C1               	movwf	?_scale+3
  4803  0CB5  0845               	movf	??_scale+3,w
  4804  0CB6  00C0               	movwf	?_scale+2
  4805  0CB7  0844               	movf	??_scale+2,w
  4806  0CB8  00BF               	movwf	?_scale+1
  4807  0CB9  0843               	movf	??_scale+1,w
  4808  0CBA  00BE               	movwf	?_scale
  4809  0CBB  0008               	return
  4810  0CBC                     __end_of_scale:	
  4811                           
  4812                           	psect	text7
  4813  1DBA                     __ptext7:	
  4814 ;; *************** function ___awmod *****************
  4815 ;; Defined at:
  4816 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  divisor         2    0[COMMON] int 
  4819 ;;  dividend        2    2[COMMON] int 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  sign            1    6[COMMON] unsigned char 
  4822 ;;  counter         1    5[COMMON] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  2    0[COMMON] int 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 300/0
  4829 ;;		On exit  : 300/0
  4830 ;;		Unchanged: 300/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         4       0       0       0       0
  4833 ;;      Locals:         2       0       0       0       0
  4834 ;;      Temps:          1       0       0       0       0
  4835 ;;      Totals:         7       0       0       0       0
  4836 ;;Total ram usage:        7 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_scale
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function ___awmod
  4847  1DBA                     ___awmod:	
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4851  1DBA  01F6               	clrf	___awmod@sign
  4852  1DBB  1FF3               	btfss	___awmod@dividend+1,7
  4853  1DBC  2DC4               	goto	l2415
  4854  1DBD  09F2               	comf	___awmod@dividend,f
  4855  1DBE  09F3               	comf	___awmod@dividend+1,f
  4856  1DBF  0AF2               	incf	___awmod@dividend,f
  4857  1DC0  1903               	skipnz
  4858  1DC1  0AF3               	incf	___awmod@dividend+1,f
  4859  1DC2  01F6               	clrf	___awmod@sign
  4860  1DC3  0AF6               	incf	___awmod@sign,f
  4861  1DC4                     l2415:	
  4862  1DC4  1FF1               	btfss	___awmod@divisor+1,7
  4863  1DC5  2DCB               	goto	l2419
  4864  1DC6  09F0               	comf	___awmod@divisor,f
  4865  1DC7  09F1               	comf	___awmod@divisor+1,f
  4866  1DC8  0AF0               	incf	___awmod@divisor,f
  4867  1DC9  1903               	skipnz
  4868  1DCA  0AF1               	incf	___awmod@divisor+1,f
  4869  1DCB                     l2419:	
  4870  1DCB  0870               	movf	___awmod@divisor,w
  4871  1DCC  0471               	iorwf	___awmod@divisor+1,w
  4872  1DCD  1903               	btfsc	3,2
  4873  1DCE  2DF8               	goto	l2437
  4874  1DCF  01F5               	clrf	___awmod@counter
  4875  1DD0  0AF5               	incf	___awmod@counter,f
  4876  1DD1                     l2427:	
  4877  1DD1  1BF1               	btfsc	___awmod@divisor+1,7
  4878  1DD2  2DDF               	goto	l2429
  4879  1DD3  3001               	movlw	1
  4880  1DD4                     u3335:	
  4881  1DD4  1003               	clrc
  4882  1DD5  0DF0               	rlf	___awmod@divisor,f
  4883  1DD6  0DF1               	rlf	___awmod@divisor+1,f
  4884  1DD7  3EFF               	addlw	-1
  4885  1DD8  1D03               	skipz
  4886  1DD9  2DD4               	goto	u3335
  4887  1DDA  3001               	movlw	1
  4888  1DDB  00F4               	movwf	??___awmod
  4889  1DDC  0874               	movf	??___awmod,w
  4890  1DDD  07F5               	addwf	___awmod@counter,f
  4891  1DDE  2DD1               	goto	l2427
  4892  1DDF                     l2429:	
  4893  1DDF  0871               	movf	___awmod@divisor+1,w
  4894  1DE0  0273               	subwf	___awmod@dividend+1,w
  4895  1DE1  1D03               	skipz
  4896  1DE2  2DE5               	goto	u3355
  4897  1DE3  0870               	movf	___awmod@divisor,w
  4898  1DE4  0272               	subwf	___awmod@dividend,w
  4899  1DE5                     u3355:	
  4900  1DE5  1C03               	skipc
  4901  1DE6  2DED               	goto	l2433
  4902  1DE7  0870               	movf	___awmod@divisor,w
  4903  1DE8  02F2               	subwf	___awmod@dividend,f
  4904  1DE9  0871               	movf	___awmod@divisor+1,w
  4905  1DEA  1C03               	skipc
  4906  1DEB  03F3               	decf	___awmod@dividend+1,f
  4907  1DEC  02F3               	subwf	___awmod@dividend+1,f
  4908  1DED                     l2433:	
  4909  1DED  3001               	movlw	1
  4910  1DEE                     u3365:	
  4911  1DEE  1003               	clrc
  4912  1DEF  0CF1               	rrf	___awmod@divisor+1,f
  4913  1DF0  0CF0               	rrf	___awmod@divisor,f
  4914  1DF1  3EFF               	addlw	-1
  4915  1DF2  1D03               	skipz
  4916  1DF3  2DEE               	goto	u3365
  4917  1DF4  3001               	movlw	1
  4918  1DF5  02F5               	subwf	___awmod@counter,f
  4919  1DF6  1D03               	btfss	3,2
  4920  1DF7  2DDF               	goto	l2429
  4921  1DF8                     l2437:	
  4922  1DF8  0876               	movf	___awmod@sign,w
  4923  1DF9  1903               	btfsc	3,2
  4924  1DFA  2E00               	goto	l2441
  4925  1DFB  09F2               	comf	___awmod@dividend,f
  4926  1DFC  09F3               	comf	___awmod@dividend+1,f
  4927  1DFD  0AF2               	incf	___awmod@dividend,f
  4928  1DFE  1903               	skipnz
  4929  1DFF  0AF3               	incf	___awmod@dividend+1,f
  4930  1E00                     l2441:	
  4931  1E00  0873               	movf	___awmod@dividend+1,w
  4932  1E01  00F1               	movwf	?___awmod+1
  4933  1E02  0872               	movf	___awmod@dividend,w
  4934  1E03  00F0               	movwf	?___awmod
  4935  1E04  0008               	return
  4936  1E05                     __end_of___awmod:	
  4937                           
  4938                           	psect	text8
  4939  1E51                     __ptext8:	
  4940 ;; *************** function ___awdiv *****************
  4941 ;; Defined at:
  4942 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  divisor         2    7[COMMON] int 
  4945 ;;  dividend        2    9[COMMON] int 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  quotient        2    2[BANK0 ] int 
  4948 ;;  sign            1    1[BANK0 ] unsigned char 
  4949 ;;  counter         1    0[BANK0 ] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  2    7[COMMON] int 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 200/100
  4956 ;;		On exit  : 300/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4959 ;;      Params:         4       0       0       0       0
  4960 ;;      Locals:         0       4       0       0       0
  4961 ;;      Temps:          1       0       0       0       0
  4962 ;;      Totals:         5       4       0       0       0
  4963 ;;Total ram usage:        9 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_scale
  4969 ;;		_sprintf
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function ___awdiv
  4975  1E51                     ___awdiv:	
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4979  1E51  1283               	bcf	3,5	;RP0=0, select bank0
  4980  1E52  01A1               	clrf	___awdiv@sign
  4981  1E53  1FF8               	btfss	___awdiv@divisor+1,7
  4982  1E54  2E5C               	goto	l2371
  4983  1E55  09F7               	comf	___awdiv@divisor,f
  4984  1E56  09F8               	comf	___awdiv@divisor+1,f
  4985  1E57  0AF7               	incf	___awdiv@divisor,f
  4986  1E58  1903               	skipnz
  4987  1E59  0AF8               	incf	___awdiv@divisor+1,f
  4988  1E5A  01A1               	clrf	___awdiv@sign
  4989  1E5B  0AA1               	incf	___awdiv@sign,f
  4990  1E5C                     l2371:	
  4991  1E5C  1FFA               	btfss	___awdiv@dividend+1,7
  4992  1E5D  2E67               	goto	l2377
  4993  1E5E  09F9               	comf	___awdiv@dividend,f
  4994  1E5F  09FA               	comf	___awdiv@dividend+1,f
  4995  1E60  0AF9               	incf	___awdiv@dividend,f
  4996  1E61  1903               	skipnz
  4997  1E62  0AFA               	incf	___awdiv@dividend+1,f
  4998  1E63  3001               	movlw	1
  4999  1E64  00FB               	movwf	??___awdiv
  5000  1E65  087B               	movf	??___awdiv,w
  5001  1E66  06A1               	xorwf	___awdiv@sign,f
  5002  1E67                     l2377:	
  5003  1E67  01A2               	clrf	___awdiv@quotient
  5004  1E68  01A3               	clrf	___awdiv@quotient+1
  5005  1E69  0877               	movf	___awdiv@divisor,w
  5006  1E6A  0478               	iorwf	___awdiv@divisor+1,w
  5007  1E6B  1903               	btfsc	3,2
  5008  1E6C  2E9E               	goto	l2399
  5009  1E6D  01A0               	clrf	___awdiv@counter
  5010  1E6E  0AA0               	incf	___awdiv@counter,f
  5011  1E6F                     l2387:	
  5012  1E6F  1BF8               	btfsc	___awdiv@divisor+1,7
  5013  1E70  2E7D               	goto	l2389
  5014  1E71  3001               	movlw	1
  5015  1E72                     u3235:	
  5016  1E72  1003               	clrc
  5017  1E73  0DF7               	rlf	___awdiv@divisor,f
  5018  1E74  0DF8               	rlf	___awdiv@divisor+1,f
  5019  1E75  3EFF               	addlw	-1
  5020  1E76  1D03               	skipz
  5021  1E77  2E72               	goto	u3235
  5022  1E78  3001               	movlw	1
  5023  1E79  00FB               	movwf	??___awdiv
  5024  1E7A  087B               	movf	??___awdiv,w
  5025  1E7B  07A0               	addwf	___awdiv@counter,f
  5026  1E7C  2E6F               	goto	l2387
  5027  1E7D                     l2389:	
  5028  1E7D  3001               	movlw	1
  5029  1E7E                     u3255:	
  5030  1E7E  1003               	clrc
  5031  1E7F  0DA2               	rlf	___awdiv@quotient,f
  5032  1E80  0DA3               	rlf	___awdiv@quotient+1,f
  5033  1E81  3EFF               	addlw	-1
  5034  1E82  1D03               	skipz
  5035  1E83  2E7E               	goto	u3255
  5036  1E84  0878               	movf	___awdiv@divisor+1,w
  5037  1E85  027A               	subwf	___awdiv@dividend+1,w
  5038  1E86  1D03               	skipz
  5039  1E87  2E8A               	goto	u3265
  5040  1E88  0877               	movf	___awdiv@divisor,w
  5041  1E89  0279               	subwf	___awdiv@dividend,w
  5042  1E8A                     u3265:	
  5043  1E8A  1C03               	skipc
  5044  1E8B  2E93               	goto	l2395
  5045  1E8C  0877               	movf	___awdiv@divisor,w
  5046  1E8D  02F9               	subwf	___awdiv@dividend,f
  5047  1E8E  0878               	movf	___awdiv@divisor+1,w
  5048  1E8F  1C03               	skipc
  5049  1E90  03FA               	decf	___awdiv@dividend+1,f
  5050  1E91  02FA               	subwf	___awdiv@dividend+1,f
  5051  1E92  1422               	bsf	___awdiv@quotient,0
  5052  1E93                     l2395:	
  5053  1E93  3001               	movlw	1
  5054  1E94                     u3275:	
  5055  1E94  1003               	clrc
  5056  1E95  0CF8               	rrf	___awdiv@divisor+1,f
  5057  1E96  0CF7               	rrf	___awdiv@divisor,f
  5058  1E97  3EFF               	addlw	-1
  5059  1E98  1D03               	skipz
  5060  1E99  2E94               	goto	u3275
  5061  1E9A  3001               	movlw	1
  5062  1E9B  02A0               	subwf	___awdiv@counter,f
  5063  1E9C  1D03               	btfss	3,2
  5064  1E9D  2E7D               	goto	l2389
  5065  1E9E                     l2399:	
  5066  1E9E  0821               	movf	___awdiv@sign,w
  5067  1E9F  1903               	btfsc	3,2
  5068  1EA0  2EA6               	goto	l2403
  5069  1EA1  09A2               	comf	___awdiv@quotient,f
  5070  1EA2  09A3               	comf	___awdiv@quotient+1,f
  5071  1EA3  0AA2               	incf	___awdiv@quotient,f
  5072  1EA4  1903               	skipnz
  5073  1EA5  0AA3               	incf	___awdiv@quotient+1,f
  5074  1EA6                     l2403:	
  5075  1EA6  0823               	movf	___awdiv@quotient+1,w
  5076  1EA7  00F8               	movwf	?___awdiv+1
  5077  1EA8  0822               	movf	___awdiv@quotient,w
  5078  1EA9  00F7               	movwf	?___awdiv
  5079  1EAA  0008               	return
  5080  1EAB                     __end_of___awdiv:	
  5081                           
  5082                           	psect	text9
  5083  1B31                     __ptext9:	
  5084 ;; *************** function _isdigit *****************
  5085 ;; Defined at:
  5086 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  c               1    wreg     unsigned char 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  c               1    1[COMMON] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;		None               void
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0
  5095 ;; Tracked objects:
  5096 ;;		On entry : 300/100
  5097 ;;		On exit  : 300/100
  5098 ;;		Unchanged: 300/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5100 ;;      Params:         0       0       0       0       0
  5101 ;;      Locals:         2       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0
  5103 ;;      Totals:         2       0       0       0       0
  5104 ;;Total ram usage:        2 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_sprintf
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           
  5114                           ;psect for function _isdigit
  5115  1B31                     _isdigit:	
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5119                           ;isdigit@c stored from wreg
  5120  1B31  00F1               	movwf	isdigit@c
  5121  1B32  01F0               	clrf	_isdigit$618
  5122  1B33  303A               	movlw	58
  5123  1B34  0271               	subwf	isdigit@c,w
  5124  1B35  1803               	skipnc
  5125  1B36  2B3D               	goto	l2955
  5126  1B37  3030               	movlw	48
  5127  1B38  0271               	subwf	isdigit@c,w
  5128  1B39  1C03               	skipc
  5129  1B3A  2B3D               	goto	l2955
  5130  1B3B  01F0               	clrf	_isdigit$618
  5131  1B3C  0AF0               	incf	_isdigit$618,f
  5132  1B3D                     l2955:	
  5133  1B3D  0C70               	rrf	_isdigit$618,w
  5134  1B3E  0008               	return
  5135  1B3F                     __end_of_isdigit:	
  5136                           
  5137                           	psect	text10
  5138  1348                     __ptext10:	
  5139 ;; *************** function _fround *****************
  5140 ;; Defined at:
  5141 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  prec            1    wreg     unsigned char 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  prec            1   49[BANK0 ] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  4   30[BANK0 ] unsigned char 
  5148 ;; Registers used:
  5149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 300/100
  5152 ;;		On exit  : 300/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5155 ;;      Params:         0       4       0       0       0
  5156 ;;      Locals:         0       9       0       0       0
  5157 ;;      Temps:          0       7       0       0       0
  5158 ;;      Totals:         0      20       0       0       0
  5159 ;;Total ram usage:       20 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    2
  5162 ;; This function calls:
  5163 ;;		___flmul
  5164 ;;		___lbdiv
  5165 ;;		___lbmod
  5166 ;; This function is called by:
  5167 ;;		_sprintf
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           
  5172                           ;psect for function _fround
  5173  1348                     _fround:	
  5174                           
  5175                           ;incstack = 0
  5176                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5177                           ;fround@prec stored from wreg
  5178  1348  1283               	bcf	3,5	;RP0=0, select bank0
  5179  1349  00D1               	movwf	fround@prec
  5180                           
  5181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  5182  134A  306E               	movlw	110
  5183  134B  0251               	subwf	fround@prec,w
  5184  134C  1C03               	skipc
  5185  134D  2C34               	goto	l2897
  5186                           
  5187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5188  134E  303F               	movlw	63
  5189  134F  00A7               	movwf	___flmul@b+3
  5190  1350  3000               	movlw	0
  5191  1351  00A6               	movwf	___flmul@b+2
  5192  1352  3000               	movlw	0
  5193  1353  00A5               	movwf	___flmul@b+1
  5194  1354  3000               	movlw	0
  5195  1355  00A4               	movwf	___flmul@b
  5196  1356  3064               	movlw	100
  5197  1357  00C2               	movwf	??_fround
  5198  1358  0842               	movf	??_fround,w
  5199  1359  00F7               	movwf	___lbdiv@divisor
  5200  135A  0851               	movf	fround@prec,w
  5201  135B  160A  158A  23E6  160A  118A  	fcall	___lbdiv
  5202  1360  00C3               	movwf	??_fround+1
  5203  1361  3001               	movlw	1
  5204  1362                     u4435:	
  5205  1362  1003               	clrc
  5206  1363  0DC3               	rlf	??_fround+1,f
  5207  1364  3EFF               	addlw	-1
  5208  1365  1D03               	skipz
  5209  1366  2B62               	goto	u4435
  5210  1367  1003               	clrc
  5211  1368  0D43               	rlf	??_fround+1,w
  5212  1369  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5213  136A  0084               	movwf	4
  5214  136B  120A  158A  200A  160A  118A  	fcall	stringdir
  5215  1370  00C4               	movwf	??_fround+2
  5216  1371  120A  158A  200A  160A  118A  	fcall	stringdir
  5217  1376  00C5               	movwf	??_fround+3
  5218  1377  120A  158A  200A  160A  118A  	fcall	stringdir
  5219  137C  00C6               	movwf	??_fround+4
  5220  137D  120A  158A  200A  160A  118A  	fcall	stringdir
  5221  1382  00C7               	movwf	??_fround+5
  5222  1383  0847               	movf	??_fround+5,w
  5223  1384  00AB               	movwf	___flmul@a+3
  5224  1385  0846               	movf	??_fround+4,w
  5225  1386  00AA               	movwf	___flmul@a+2
  5226  1387  0845               	movf	??_fround+3,w
  5227  1388  00A9               	movwf	___flmul@a+1
  5228  1389  0844               	movf	??_fround+2,w
  5229  138A  00A8               	movwf	___flmul@a
  5230  138B  160A  118A  250B  160A  118A  	fcall	___flmul
  5231  1390  0827               	movf	?___flmul+3,w
  5232  1391  00D0               	movwf	_fround$834+3
  5233  1392  0826               	movf	?___flmul+2,w
  5234  1393  00CF               	movwf	_fround$834+2
  5235  1394  0825               	movf	?___flmul+1,w
  5236  1395  00CE               	movwf	_fround$834+1
  5237  1396  0824               	movf	?___flmul,w
  5238  1397  00CD               	movwf	_fround$834
  5239                           
  5240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5241  1398  300A               	movlw	10
  5242  1399  00C2               	movwf	??_fround
  5243  139A  0842               	movf	??_fround,w
  5244  139B  00F7               	movwf	___lbdiv@divisor
  5245  139C  3064               	movlw	100
  5246  139D  00C3               	movwf	??_fround+1
  5247  139E  0843               	movf	??_fround+1,w
  5248  139F  00F0               	movwf	___lbmod@divisor
  5249  13A0  0851               	movf	fround@prec,w
  5250  13A1  160A  158A  242A  160A  118A  	fcall	___lbmod
  5251  13A6  160A  158A  23E6  160A  118A  	fcall	___lbdiv
  5252  13AB  00C4               	movwf	??_fround+2
  5253  13AC  3001               	movlw	1
  5254  13AD                     u4445:	
  5255  13AD  1003               	clrc
  5256  13AE  0DC4               	rlf	??_fround+2,f
  5257  13AF  3EFF               	addlw	-1
  5258  13B0  1D03               	skipz
  5259  13B1  2BAD               	goto	u4445
  5260  13B2  1003               	clrc
  5261  13B3  0D44               	rlf	??_fround+2,w
  5262  13B4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5263  13B5  0084               	movwf	4
  5264  13B6  120A  158A  200A  160A  118A  	fcall	stringdir
  5265  13BB  00C5               	movwf	??_fround+3
  5266  13BC  120A  158A  200A  160A  118A  	fcall	stringdir
  5267  13C1  00C6               	movwf	??_fround+4
  5268  13C2  120A  158A  200A  160A  118A  	fcall	stringdir
  5269  13C7  00C7               	movwf	??_fround+5
  5270  13C8  120A  158A  200A  160A  118A  	fcall	stringdir
  5271  13CD  00C8               	movwf	??_fround+6
  5272  13CE  0848               	movf	??_fround+6,w
  5273  13CF  00A7               	movwf	___flmul@b+3
  5274  13D0  0847               	movf	??_fround+5,w
  5275  13D1  00A6               	movwf	___flmul@b+2
  5276  13D2  0846               	movf	??_fround+4,w
  5277  13D3  00A5               	movwf	___flmul@b+1
  5278  13D4  0845               	movf	??_fround+3,w
  5279  13D5  00A4               	movwf	___flmul@b
  5280  13D6  0850               	movf	_fround$834+3,w
  5281  13D7  00AB               	movwf	___flmul@a+3
  5282  13D8  084F               	movf	_fround$834+2,w
  5283  13D9  00AA               	movwf	___flmul@a+2
  5284  13DA  084E               	movf	_fround$834+1,w
  5285  13DB  00A9               	movwf	___flmul@a+1
  5286  13DC  084D               	movf	_fround$834,w
  5287  13DD  00A8               	movwf	___flmul@a
  5288  13DE  160A  118A  250B  160A  118A  	fcall	___flmul
  5289  13E3  0827               	movf	?___flmul+3,w
  5290  13E4  00CC               	movwf	_fround$835+3
  5291  13E5  0826               	movf	?___flmul+2,w
  5292  13E6  00CB               	movwf	_fround$835+2
  5293  13E7  0825               	movf	?___flmul+1,w
  5294  13E8  00CA               	movwf	_fround$835+1
  5295  13E9  0824               	movf	?___flmul,w
  5296  13EA  00C9               	movwf	_fround$835
  5297                           
  5298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5299  13EB  300A               	movlw	10
  5300  13EC  00C2               	movwf	??_fround
  5301  13ED  0842               	movf	??_fround,w
  5302  13EE  00F0               	movwf	___lbmod@divisor
  5303  13EF  0851               	movf	fround@prec,w
  5304  13F0  160A  158A  242A  160A  118A  	fcall	___lbmod
  5305  13F5  00C3               	movwf	??_fround+1
  5306  13F6  3001               	movlw	1
  5307  13F7                     u4455:	
  5308  13F7  1003               	clrc
  5309  13F8  0DC3               	rlf	??_fround+1,f
  5310  13F9  3EFF               	addlw	-1
  5311  13FA  1D03               	skipz
  5312  13FB  2BF7               	goto	u4455
  5313  13FC  1003               	clrc
  5314  13FD  0D43               	rlf	??_fround+1,w
  5315  13FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5316  13FF  0084               	movwf	4
  5317  1400  120A  158A  200A  160A  118A  	fcall	stringdir
  5318  1405  00C4               	movwf	??_fround+2
  5319  1406  120A  158A  200A  160A  118A  	fcall	stringdir
  5320  140B  00C5               	movwf	??_fround+3
  5321  140C  120A  158A  200A  160A  118A  	fcall	stringdir
  5322  1411  00C6               	movwf	??_fround+4
  5323  1412  120A  158A  200A  160A  118A  	fcall	stringdir
  5324  1417  00C7               	movwf	??_fround+5
  5325  1418  0847               	movf	??_fround+5,w
  5326  1419  00A7               	movwf	___flmul@b+3
  5327  141A  0846               	movf	??_fround+4,w
  5328  141B  00A6               	movwf	___flmul@b+2
  5329  141C  0845               	movf	??_fround+3,w
  5330  141D  00A5               	movwf	___flmul@b+1
  5331  141E  0844               	movf	??_fround+2,w
  5332  141F  00A4               	movwf	___flmul@b
  5333  1420  084C               	movf	_fround$835+3,w
  5334  1421  00AB               	movwf	___flmul@a+3
  5335  1422  084B               	movf	_fround$835+2,w
  5336  1423  00AA               	movwf	___flmul@a+2
  5337  1424  084A               	movf	_fround$835+1,w
  5338  1425  00A9               	movwf	___flmul@a+1
  5339  1426  0849               	movf	_fround$835,w
  5340  1427  00A8               	movwf	___flmul@a
  5341  1428  160A  118A  250B   	fcall	___flmul
  5342  142B  0827               	movf	?___flmul+3,w
  5343  142C  00C1               	movwf	?_fround+3
  5344  142D  0826               	movf	?___flmul+2,w
  5345  142E  00C0               	movwf	?_fround+2
  5346  142F  0825               	movf	?___flmul+1,w
  5347  1430  00BF               	movwf	?_fround+1
  5348  1431  0824               	movf	?___flmul,w
  5349  1432  00BE               	movwf	?_fround
  5350  1433  0008               	return
  5351  1434                     l2897:	
  5352  1434  300B               	movlw	11
  5353  1435  0251               	subwf	fround@prec,w
  5354  1436  1C03               	skipc
  5355  1437  2CCB               	goto	l2903
  5356                           
  5357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5358  1438  303F               	movlw	63
  5359  1439  00A7               	movwf	___flmul@b+3
  5360  143A  3000               	movlw	0
  5361  143B  00A6               	movwf	___flmul@b+2
  5362  143C  3000               	movlw	0
  5363  143D  00A5               	movwf	___flmul@b+1
  5364  143E  3000               	movlw	0
  5365  143F  00A4               	movwf	___flmul@b
  5366  1440  300A               	movlw	10
  5367  1441  00C2               	movwf	??_fround
  5368  1442  0842               	movf	??_fround,w
  5369  1443  00F7               	movwf	___lbdiv@divisor
  5370  1444  0851               	movf	fround@prec,w
  5371  1445  160A  158A  23E6  160A  118A  	fcall	___lbdiv
  5372  144A  00C3               	movwf	??_fround+1
  5373  144B  3001               	movlw	1
  5374  144C                     u4475:	
  5375  144C  1003               	clrc
  5376  144D  0DC3               	rlf	??_fround+1,f
  5377  144E  3EFF               	addlw	-1
  5378  144F  1D03               	skipz
  5379  1450  2C4C               	goto	u4475
  5380  1451  1003               	clrc
  5381  1452  0D43               	rlf	??_fround+1,w
  5382  1453  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5383  1454  0084               	movwf	4
  5384  1455  120A  158A  200A  160A  118A  	fcall	stringdir
  5385  145A  00C4               	movwf	??_fround+2
  5386  145B  120A  158A  200A  160A  118A  	fcall	stringdir
  5387  1460  00C5               	movwf	??_fround+3
  5388  1461  120A  158A  200A  160A  118A  	fcall	stringdir
  5389  1466  00C6               	movwf	??_fround+4
  5390  1467  120A  158A  200A  160A  118A  	fcall	stringdir
  5391  146C  00C7               	movwf	??_fround+5
  5392  146D  0847               	movf	??_fround+5,w
  5393  146E  00AB               	movwf	___flmul@a+3
  5394  146F  0846               	movf	??_fround+4,w
  5395  1470  00AA               	movwf	___flmul@a+2
  5396  1471  0845               	movf	??_fround+3,w
  5397  1472  00A9               	movwf	___flmul@a+1
  5398  1473  0844               	movf	??_fround+2,w
  5399  1474  00A8               	movwf	___flmul@a
  5400  1475  160A  118A  250B  160A  118A  	fcall	___flmul
  5401  147A  0827               	movf	?___flmul+3,w
  5402  147B  00D0               	movwf	_fround$834+3
  5403  147C  0826               	movf	?___flmul+2,w
  5404  147D  00CF               	movwf	_fround$834+2
  5405  147E  0825               	movf	?___flmul+1,w
  5406  147F  00CE               	movwf	_fround$834+1
  5407  1480  0824               	movf	?___flmul,w
  5408  1481  00CD               	movwf	_fround$834
  5409                           
  5410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5411  1482  300A               	movlw	10
  5412  1483  00C2               	movwf	??_fround
  5413  1484  0842               	movf	??_fround,w
  5414  1485  00F0               	movwf	___lbmod@divisor
  5415  1486  0851               	movf	fround@prec,w
  5416  1487  160A  158A  242A  160A  118A  	fcall	___lbmod
  5417  148C  00C3               	movwf	??_fround+1
  5418  148D  3001               	movlw	1
  5419  148E                     u4485:	
  5420  148E  1003               	clrc
  5421  148F  0DC3               	rlf	??_fround+1,f
  5422  1490  3EFF               	addlw	-1
  5423  1491  1D03               	skipz
  5424  1492  2C8E               	goto	u4485
  5425  1493  1003               	clrc
  5426  1494  0D43               	rlf	??_fround+1,w
  5427  1495  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5428  1496  0084               	movwf	4
  5429  1497  120A  158A  200A  160A  118A  	fcall	stringdir
  5430  149C  00C4               	movwf	??_fround+2
  5431  149D  120A  158A  200A  160A  118A  	fcall	stringdir
  5432  14A2  00C5               	movwf	??_fround+3
  5433  14A3  120A  158A  200A  160A  118A  	fcall	stringdir
  5434  14A8  00C6               	movwf	??_fround+4
  5435  14A9  120A  158A  200A  160A  118A  	fcall	stringdir
  5436  14AE  00C7               	movwf	??_fround+5
  5437  14AF  0847               	movf	??_fround+5,w
  5438  14B0  00A7               	movwf	___flmul@b+3
  5439  14B1  0846               	movf	??_fround+4,w
  5440  14B2  00A6               	movwf	___flmul@b+2
  5441  14B3  0845               	movf	??_fround+3,w
  5442  14B4  00A5               	movwf	___flmul@b+1
  5443  14B5  0844               	movf	??_fround+2,w
  5444  14B6  00A4               	movwf	___flmul@b
  5445  14B7  0850               	movf	_fround$834+3,w
  5446  14B8  00AB               	movwf	___flmul@a+3
  5447  14B9  084F               	movf	_fround$834+2,w
  5448  14BA  00AA               	movwf	___flmul@a+2
  5449  14BB  084E               	movf	_fround$834+1,w
  5450  14BC  00A9               	movwf	___flmul@a+1
  5451  14BD  084D               	movf	_fround$834,w
  5452  14BE  00A8               	movwf	___flmul@a
  5453  14BF  160A  118A  250B   	fcall	___flmul
  5454  14C2  0827               	movf	?___flmul+3,w
  5455  14C3  00C1               	movwf	?_fround+3
  5456  14C4  0826               	movf	?___flmul+2,w
  5457  14C5  00C0               	movwf	?_fround+2
  5458  14C6  0825               	movf	?___flmul+1,w
  5459  14C7  00BF               	movwf	?_fround+1
  5460  14C8  0824               	movf	?___flmul,w
  5461  14C9  00BE               	movwf	?_fround
  5462  14CA  0008               	return
  5463  14CB                     l2903:	
  5464                           
  5465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5466  14CB  303F               	movlw	63
  5467  14CC  00A7               	movwf	___flmul@b+3
  5468  14CD  3000               	movlw	0
  5469  14CE  00A6               	movwf	___flmul@b+2
  5470  14CF  3000               	movlw	0
  5471  14D0  00A5               	movwf	___flmul@b+1
  5472  14D1  3000               	movlw	0
  5473  14D2  00A4               	movwf	___flmul@b
  5474  14D3  0851               	movf	fround@prec,w
  5475  14D4  00C2               	movwf	??_fround
  5476  14D5  3001               	movlw	1
  5477  14D6                     u4495:	
  5478  14D6  1003               	clrc
  5479  14D7  0DC2               	rlf	??_fround,f
  5480  14D8  3EFF               	addlw	-1
  5481  14D9  1D03               	skipz
  5482  14DA  2CD6               	goto	u4495
  5483  14DB  1003               	clrc
  5484  14DC  0D42               	rlf	??_fround,w
  5485  14DD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5486  14DE  0084               	movwf	4
  5487  14DF  120A  158A  200A  160A  118A  	fcall	stringdir
  5488  14E4  00C3               	movwf	??_fround+1
  5489  14E5  120A  158A  200A  160A  118A  	fcall	stringdir
  5490  14EA  00C4               	movwf	??_fround+2
  5491  14EB  120A  158A  200A  160A  118A  	fcall	stringdir
  5492  14F0  00C5               	movwf	??_fround+3
  5493  14F1  120A  158A  200A  160A  118A  	fcall	stringdir
  5494  14F6  00C6               	movwf	??_fround+4
  5495  14F7  0846               	movf	??_fround+4,w
  5496  14F8  00AB               	movwf	___flmul@a+3
  5497  14F9  0845               	movf	??_fround+3,w
  5498  14FA  00AA               	movwf	___flmul@a+2
  5499  14FB  0844               	movf	??_fround+2,w
  5500  14FC  00A9               	movwf	___flmul@a+1
  5501  14FD  0843               	movf	??_fround+1,w
  5502  14FE  00A8               	movwf	___flmul@a
  5503  14FF  160A  118A  250B   	fcall	___flmul
  5504  1502  0827               	movf	?___flmul+3,w
  5505  1503  00C1               	movwf	?_fround+3
  5506  1504  0826               	movf	?___flmul+2,w
  5507  1505  00C0               	movwf	?_fround+2
  5508  1506  0825               	movf	?___flmul+1,w
  5509  1507  00BF               	movwf	?_fround+1
  5510  1508  0824               	movf	?___flmul,w
  5511  1509  00BE               	movwf	?_fround
  5512  150A  0008               	return
  5513  150B                     __end_of_fround:	
  5514                           
  5515                           	psect	text11
  5516  1C2A                     __ptext11:	
  5517 ;; *************** function ___lbmod *****************
  5518 ;; Defined at:
  5519 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  dividend        1    wreg     unsigned char 
  5522 ;;  divisor         1    0[COMMON] unsigned char 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  dividend        1    4[COMMON] unsigned char 
  5525 ;;  rem             1    6[COMMON] unsigned char 
  5526 ;;  counter         1    5[COMMON] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      unsigned char 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0
  5531 ;; Tracked objects:
  5532 ;;		On entry : 300/0
  5533 ;;		On exit  : 300/0
  5534 ;;		Unchanged: 300/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         1       0       0       0       0
  5537 ;;      Locals:         3       0       0       0       0
  5538 ;;      Temps:          3       0       0       0       0
  5539 ;;      Totals:         7       0       0       0       0
  5540 ;;Total ram usage:        7 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_fround
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           
  5550                           ;psect for function ___lbmod
  5551  1C2A                     ___lbmod:	
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5555                           ;___lbmod@dividend stored from wreg
  5556  1C2A  00F4               	movwf	___lbmod@dividend
  5557  1C2B  3008               	movlw	8
  5558  1C2C  00F1               	movwf	??___lbmod
  5559  1C2D  0871               	movf	??___lbmod,w
  5560  1C2E  00F5               	movwf	___lbmod@counter
  5561  1C2F  01F6               	clrf	___lbmod@rem
  5562  1C30                     l2475:	
  5563  1C30  0874               	movf	___lbmod@dividend,w
  5564  1C31  00F1               	movwf	??___lbmod
  5565  1C32  3007               	movlw	7
  5566  1C33                     u3435:	
  5567  1C33  1003               	clrc
  5568  1C34  0CF1               	rrf	??___lbmod,f
  5569  1C35  3EFF               	addlw	-1
  5570  1C36  1D03               	skipz
  5571  1C37  2C33               	goto	u3435
  5572  1C38  0876               	movf	___lbmod@rem,w
  5573  1C39  00F2               	movwf	??___lbmod+1
  5574  1C3A  0772               	addwf	??___lbmod+1,w
  5575  1C3B  0471               	iorwf	??___lbmod,w
  5576  1C3C  00F3               	movwf	??___lbmod+2
  5577  1C3D  0873               	movf	??___lbmod+2,w
  5578  1C3E  00F6               	movwf	___lbmod@rem
  5579  1C3F  1003               	clrc
  5580  1C40  0DF4               	rlf	___lbmod@dividend,f
  5581  1C41  0870               	movf	___lbmod@divisor,w
  5582  1C42  0276               	subwf	___lbmod@rem,w
  5583  1C43  1C03               	skipc
  5584  1C44  2C47               	goto	l534
  5585  1C45  0870               	movf	___lbmod@divisor,w
  5586  1C46  02F6               	subwf	___lbmod@rem,f
  5587  1C47                     l534:	
  5588  1C47  3001               	movlw	1
  5589  1C48  02F5               	subwf	___lbmod@counter,f
  5590  1C49  1D03               	btfss	3,2
  5591  1C4A  2C30               	goto	l2475
  5592  1C4B  0876               	movf	___lbmod@rem,w
  5593  1C4C  0008               	return
  5594  1C4D                     __end_of___lbmod:	
  5595                           
  5596                           	psect	text12
  5597  1BE6                     __ptext12:	
  5598 ;; *************** function ___lbdiv *****************
  5599 ;; Defined at:
  5600 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  dividend        1    wreg     unsigned char 
  5603 ;;  divisor         1    7[COMMON] unsigned char 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  dividend        1    9[COMMON] unsigned char 
  5606 ;;  quotient        1   11[COMMON] unsigned char 
  5607 ;;  counter         1   10[COMMON] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      unsigned char 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0
  5612 ;; Tracked objects:
  5613 ;;		On entry : 300/0
  5614 ;;		On exit  : 300/0
  5615 ;;		Unchanged: 300/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5617 ;;      Params:         1       0       0       0       0
  5618 ;;      Locals:         3       0       0       0       0
  5619 ;;      Temps:          1       0       0       0       0
  5620 ;;      Totals:         5       0       0       0       0
  5621 ;;Total ram usage:        5 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; This function calls:
  5624 ;;		Nothing
  5625 ;; This function is called by:
  5626 ;;		_fround
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function ___lbdiv
  5632  1BE6                     ___lbdiv:	
  5633                           
  5634                           ;incstack = 0
  5635                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5636                           ;___lbdiv@dividend stored from wreg
  5637  1BE6  00F9               	movwf	___lbdiv@dividend
  5638  1BE7  01FB               	clrf	___lbdiv@quotient
  5639  1BE8  0877               	movf	___lbdiv@divisor,w
  5640  1BE9  1903               	btfsc	3,2
  5641  1BEA  2C05               	goto	l2467
  5642  1BEB  01FA               	clrf	___lbdiv@counter
  5643  1BEC  0AFA               	incf	___lbdiv@counter,f
  5644  1BED                     l2455:	
  5645  1BED  1BF7               	btfsc	___lbdiv@divisor,7
  5646  1BEE  2BF6               	goto	l2457
  5647  1BEF  1003               	clrc
  5648  1BF0  0DF7               	rlf	___lbdiv@divisor,f
  5649  1BF1  3001               	movlw	1
  5650  1BF2  00F8               	movwf	??___lbdiv
  5651  1BF3  0878               	movf	??___lbdiv,w
  5652  1BF4  07FA               	addwf	___lbdiv@counter,f
  5653  1BF5  2BED               	goto	l2455
  5654  1BF6                     l2457:	
  5655  1BF6  1003               	clrc
  5656  1BF7  0DFB               	rlf	___lbdiv@quotient,f
  5657  1BF8  0877               	movf	___lbdiv@divisor,w
  5658  1BF9  0279               	subwf	___lbdiv@dividend,w
  5659  1BFA  1C03               	skipc
  5660  1BFB  2C00               	goto	L8
  5661  1BFC  0877               	movf	___lbdiv@divisor,w
  5662  1BFD  02F9               	subwf	___lbdiv@dividend,f
  5663  1BFE  147B               	bsf	___lbdiv@quotient,0
  5664  1BFF  1003               	clrc
  5665  1C00                     L8:	
  5666  1C00  0CF7               	rrf	___lbdiv@divisor,f
  5667  1C01  3001               	movlw	1
  5668  1C02  02FA               	subwf	___lbdiv@counter,f
  5669  1C03  1D03               	btfss	3,2
  5670  1C04  2BF6               	goto	l2457
  5671  1C05                     l2467:	
  5672  1C05  087B               	movf	___lbdiv@quotient,w
  5673  1C06  0008               	return
  5674  1C07                     __end_of___lbdiv:	
  5675                           
  5676                           	psect	text13
  5677  150B                     __ptext13:	
  5678 ;; *************** function ___flmul *****************
  5679 ;; Defined at:
  5680 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  b               4    4[BANK0 ] unsigned char 
  5683 ;;  a               4    8[BANK0 ] unsigned char 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  prod            4   24[BANK0 ] struct .
  5686 ;;  grs             4   19[BANK0 ] unsigned long 
  5687 ;;  temp            2   28[BANK0 ] struct .
  5688 ;;  bexp            1   23[BANK0 ] unsigned char 
  5689 ;;  aexp            1   18[BANK0 ] unsigned char 
  5690 ;;  sign            1   17[BANK0 ] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  4    4[BANK0 ] unsigned char 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 300/0
  5697 ;;		On exit  : 300/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5700 ;;      Params:         0       8       0       0       0
  5701 ;;      Locals:         0      13       0       0       0
  5702 ;;      Temps:          0       5       0       0       0
  5703 ;;      Totals:         0      26       0       0       0
  5704 ;;Total ram usage:       26 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    1
  5707 ;; This function calls:
  5708 ;;		__Umul8_16
  5709 ;; This function is called by:
  5710 ;;		_main
  5711 ;;		_fround
  5712 ;;		_scale
  5713 ;;		_sprintf
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           
  5718                           ;psect for function ___flmul
  5719  150B                     ___flmul:	
  5720                           
  5721                           ;incstack = 0
  5722                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5723  150B  0827               	movf	___flmul@b+3,w
  5724  150C  3980               	andlw	128
  5725  150D  00AC               	movwf	??___flmul
  5726  150E  082C               	movf	??___flmul,w
  5727  150F  00B1               	movwf	___flmul@sign
  5728  1510  0827               	movf	___flmul@b+3,w
  5729  1511  00AC               	movwf	??___flmul
  5730  1512  072C               	addwf	??___flmul,w
  5731  1513  00AD               	movwf	??___flmul+1
  5732  1514  082D               	movf	??___flmul+1,w
  5733  1515  00B7               	movwf	___flmul@bexp
  5734  1516  1BA6               	btfsc	___flmul@b+2,7
  5735  1517  1437               	bsf	___flmul@bexp,0
  5736  1518  0837               	movf	___flmul@bexp,w
  5737  1519  1903               	btfsc	3,2
  5738  151A  2D28               	goto	l2745
  5739  151B  0A37               	incf	___flmul@bexp,w
  5740  151C  1D03               	btfss	3,2
  5741  151D  2D26               	goto	l2743
  5742  151E  3000               	movlw	0
  5743  151F  00A7               	movwf	___flmul@b+3
  5744  1520  3000               	movlw	0
  5745  1521  00A6               	movwf	___flmul@b+2
  5746  1522  3000               	movlw	0
  5747  1523  00A5               	movwf	___flmul@b+1
  5748  1524  3000               	movlw	0
  5749  1525  00A4               	movwf	___flmul@b
  5750  1526                     l2743:	
  5751  1526  17A6               	bsf	___flmul@b+2,7
  5752  1527  2D30               	goto	l2747
  5753  1528                     l2745:	
  5754  1528  3000               	movlw	0
  5755  1529  00A7               	movwf	___flmul@b+3
  5756  152A  3000               	movlw	0
  5757  152B  00A6               	movwf	___flmul@b+2
  5758  152C  3000               	movlw	0
  5759  152D  00A5               	movwf	___flmul@b+1
  5760  152E  3000               	movlw	0
  5761  152F  00A4               	movwf	___flmul@b
  5762  1530                     l2747:	
  5763  1530  082B               	movf	___flmul@a+3,w
  5764  1531  3980               	andlw	128
  5765  1532  00AC               	movwf	??___flmul
  5766  1533  082C               	movf	??___flmul,w
  5767  1534  06B1               	xorwf	___flmul@sign,f
  5768  1535  082B               	movf	___flmul@a+3,w
  5769  1536  00AC               	movwf	??___flmul
  5770  1537  072C               	addwf	??___flmul,w
  5771  1538  00AD               	movwf	??___flmul+1
  5772  1539  082D               	movf	??___flmul+1,w
  5773  153A  00B2               	movwf	___flmul@aexp
  5774  153B  1BAA               	btfsc	___flmul@a+2,7
  5775  153C  1432               	bsf	___flmul@aexp,0
  5776  153D  0832               	movf	___flmul@aexp,w
  5777  153E  1903               	btfsc	3,2
  5778  153F  2D4D               	goto	l2763
  5779  1540  0A32               	incf	___flmul@aexp,w
  5780  1541  1D03               	btfss	3,2
  5781  1542  2D4B               	goto	l2761
  5782  1543  3000               	movlw	0
  5783  1544  00AB               	movwf	___flmul@a+3
  5784  1545  3000               	movlw	0
  5785  1546  00AA               	movwf	___flmul@a+2
  5786  1547  3000               	movlw	0
  5787  1548  00A9               	movwf	___flmul@a+1
  5788  1549  3000               	movlw	0
  5789  154A  00A8               	movwf	___flmul@a
  5790  154B                     l2761:	
  5791  154B  17AA               	bsf	___flmul@a+2,7
  5792  154C  2D55               	goto	l2765
  5793  154D                     l2763:	
  5794  154D  3000               	movlw	0
  5795  154E  00AB               	movwf	___flmul@a+3
  5796  154F  3000               	movlw	0
  5797  1550  00AA               	movwf	___flmul@a+2
  5798  1551  3000               	movlw	0
  5799  1552  00A9               	movwf	___flmul@a+1
  5800  1553  3000               	movlw	0
  5801  1554  00A8               	movwf	___flmul@a
  5802  1555                     l2765:	
  5803  1555  0832               	movf	___flmul@aexp,w
  5804  1556  1D03               	btfss	3,2
  5805  1557  0837               	movf	___flmul@bexp,w
  5806  1558  1D03               	btfss	3,2
  5807  1559  2D63               	goto	l2773
  5808  155A  3000               	movlw	0
  5809  155B  00A7               	movwf	?___flmul+3
  5810  155C  3000               	movlw	0
  5811  155D  00A6               	movwf	?___flmul+2
  5812  155E  3000               	movlw	0
  5813  155F  00A5               	movwf	?___flmul+1
  5814  1560  3000               	movlw	0
  5815  1561  00A4               	movwf	?___flmul
  5816  1562  0008               	return
  5817  1563                     l2773:	
  5818  1563  0824               	movf	___flmul@b,w
  5819  1564  00AC               	movwf	??___flmul
  5820  1565  082C               	movf	??___flmul,w
  5821  1566  00F0               	movwf	__Umul8_16@multiplicand
  5822  1567  082A               	movf	___flmul@a+2,w
  5823  1568  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  5824  156D  0871               	movf	?__Umul8_16+1,w
  5825  156E  00BD               	movwf	___flmul@temp+1
  5826  156F  0870               	movf	?__Umul8_16,w
  5827  1570  00BC               	movwf	___flmul@temp
  5828  1571  083C               	movf	___flmul@temp,w
  5829  1572  00AC               	movwf	??___flmul
  5830  1573  01AD               	clrf	??___flmul+1
  5831  1574  01AE               	clrf	??___flmul+2
  5832  1575  01AF               	clrf	??___flmul+3
  5833  1576  082F               	movf	??___flmul+3,w
  5834  1577  00B6               	movwf	___flmul@grs+3
  5835  1578  082E               	movf	??___flmul+2,w
  5836  1579  00B5               	movwf	___flmul@grs+2
  5837  157A  082D               	movf	??___flmul+1,w
  5838  157B  00B4               	movwf	___flmul@grs+1
  5839  157C  082C               	movf	??___flmul,w
  5840  157D  00B3               	movwf	___flmul@grs
  5841  157E  083D               	movf	___flmul@temp+1,w
  5842  157F  00AC               	movwf	??___flmul
  5843  1580  01AD               	clrf	??___flmul+1
  5844  1581  01AE               	clrf	??___flmul+2
  5845  1582  01AF               	clrf	??___flmul+3
  5846  1583  082F               	movf	??___flmul+3,w
  5847  1584  00BB               	movwf	___flmul@prod+3
  5848  1585  082E               	movf	??___flmul+2,w
  5849  1586  00BA               	movwf	___flmul@prod+2
  5850  1587  082D               	movf	??___flmul+1,w
  5851  1588  00B9               	movwf	___flmul@prod+1
  5852  1589  082C               	movf	??___flmul,w
  5853  158A  00B8               	movwf	___flmul@prod
  5854  158B  0825               	movf	___flmul@b+1,w
  5855  158C  00AC               	movwf	??___flmul
  5856  158D  082C               	movf	??___flmul,w
  5857  158E  00F0               	movwf	__Umul8_16@multiplicand
  5858  158F  0829               	movf	___flmul@a+1,w
  5859  1590  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  5860  1595  0871               	movf	?__Umul8_16+1,w
  5861  1596  00BD               	movwf	___flmul@temp+1
  5862  1597  0870               	movf	?__Umul8_16,w
  5863  1598  00BC               	movwf	___flmul@temp
  5864  1599  083C               	movf	___flmul@temp,w
  5865  159A  00AC               	movwf	??___flmul
  5866  159B  01AD               	clrf	??___flmul+1
  5867  159C  01AE               	clrf	??___flmul+2
  5868  159D  01AF               	clrf	??___flmul+3
  5869  159E  082C               	movf	??___flmul,w
  5870  159F  07B3               	addwf	___flmul@grs,f
  5871  15A0  082D               	movf	??___flmul+1,w
  5872  15A1  1103               	clrz
  5873  15A2  1803               	skipnc
  5874  15A3  3E01               	addlw	1
  5875  15A4  1D03               	btfss	3,2
  5876  15A5  07B4               	addwf	___flmul@grs+1,f
  5877  15A6  082E               	movf	??___flmul+2,w
  5878  15A7  1103               	clrz
  5879  15A8  1803               	skipnc
  5880  15A9  3E01               	addlw	1
  5881  15AA  1D03               	btfss	3,2
  5882  15AB  07B5               	addwf	___flmul@grs+2,f
  5883  15AC  082F               	movf	??___flmul+3,w
  5884  15AD  1103               	clrz
  5885  15AE  1803               	skipnc
  5886  15AF  3E01               	addlw	1
  5887  15B0  1D03               	btfss	3,2
  5888  15B1  07B6               	addwf	___flmul@grs+3,f
  5889  15B2  083D               	movf	___flmul@temp+1,w
  5890  15B3  00AC               	movwf	??___flmul
  5891  15B4  01AD               	clrf	??___flmul+1
  5892  15B5  01AE               	clrf	??___flmul+2
  5893  15B6  01AF               	clrf	??___flmul+3
  5894  15B7  082C               	movf	??___flmul,w
  5895  15B8  07B8               	addwf	___flmul@prod,f
  5896  15B9  082D               	movf	??___flmul+1,w
  5897  15BA  1103               	clrz
  5898  15BB  1803               	skipnc
  5899  15BC  3E01               	addlw	1
  5900  15BD  1D03               	btfss	3,2
  5901  15BE  07B9               	addwf	___flmul@prod+1,f
  5902  15BF  082E               	movf	??___flmul+2,w
  5903  15C0  1103               	clrz
  5904  15C1  1803               	skipnc
  5905  15C2  3E01               	addlw	1
  5906  15C3  1D03               	btfss	3,2
  5907  15C4  07BA               	addwf	___flmul@prod+2,f
  5908  15C5  082F               	movf	??___flmul+3,w
  5909  15C6  1103               	clrz
  5910  15C7  1803               	skipnc
  5911  15C8  3E01               	addlw	1
  5912  15C9  1D03               	btfss	3,2
  5913  15CA  07BB               	addwf	___flmul@prod+3,f
  5914  15CB  0826               	movf	___flmul@b+2,w
  5915  15CC  00AC               	movwf	??___flmul
  5916  15CD  082C               	movf	??___flmul,w
  5917  15CE  00F0               	movwf	__Umul8_16@multiplicand
  5918  15CF  0828               	movf	___flmul@a,w
  5919  15D0  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  5920  15D5  0871               	movf	?__Umul8_16+1,w
  5921  15D6  00BD               	movwf	___flmul@temp+1
  5922  15D7  0870               	movf	?__Umul8_16,w
  5923  15D8  00BC               	movwf	___flmul@temp
  5924  15D9  083C               	movf	___flmul@temp,w
  5925  15DA  00AC               	movwf	??___flmul
  5926  15DB  01AD               	clrf	??___flmul+1
  5927  15DC  01AE               	clrf	??___flmul+2
  5928  15DD  01AF               	clrf	??___flmul+3
  5929  15DE  082C               	movf	??___flmul,w
  5930  15DF  07B3               	addwf	___flmul@grs,f
  5931  15E0  082D               	movf	??___flmul+1,w
  5932  15E1  1103               	clrz
  5933  15E2  1803               	skipnc
  5934  15E3  3E01               	addlw	1
  5935  15E4  1D03               	btfss	3,2
  5936  15E5  07B4               	addwf	___flmul@grs+1,f
  5937  15E6  082E               	movf	??___flmul+2,w
  5938  15E7  1103               	clrz
  5939  15E8  1803               	skipnc
  5940  15E9  3E01               	addlw	1
  5941  15EA  1D03               	btfss	3,2
  5942  15EB  07B5               	addwf	___flmul@grs+2,f
  5943  15EC  082F               	movf	??___flmul+3,w
  5944  15ED  1103               	clrz
  5945  15EE  1803               	skipnc
  5946  15EF  3E01               	addlw	1
  5947  15F0  1D03               	btfss	3,2
  5948  15F1  07B6               	addwf	___flmul@grs+3,f
  5949  15F2  083D               	movf	___flmul@temp+1,w
  5950  15F3  00AC               	movwf	??___flmul
  5951  15F4  01AD               	clrf	??___flmul+1
  5952  15F5  01AE               	clrf	??___flmul+2
  5953  15F6  01AF               	clrf	??___flmul+3
  5954  15F7  082C               	movf	??___flmul,w
  5955  15F8  07B8               	addwf	___flmul@prod,f
  5956  15F9  082D               	movf	??___flmul+1,w
  5957  15FA  1103               	clrz
  5958  15FB  1803               	skipnc
  5959  15FC  3E01               	addlw	1
  5960  15FD  1D03               	btfss	3,2
  5961  15FE  07B9               	addwf	___flmul@prod+1,f
  5962  15FF  082E               	movf	??___flmul+2,w
  5963  1600  1103               	clrz
  5964  1601  1803               	skipnc
  5965  1602  3E01               	addlw	1
  5966  1603  1D03               	btfss	3,2
  5967  1604  07BA               	addwf	___flmul@prod+2,f
  5968  1605  082F               	movf	??___flmul+3,w
  5969  1606  1103               	clrz
  5970  1607  1803               	skipnc
  5971  1608  3E01               	addlw	1
  5972  1609  1D03               	btfss	3,2
  5973  160A  07BB               	addwf	___flmul@prod+3,f
  5974  160B  3008               	movlw	8
  5975  160C  00AC               	movwf	??___flmul
  5976  160D                     u4175:	
  5977  160D  1003               	clrc
  5978  160E  0DB3               	rlf	___flmul@grs,f
  5979  160F  0DB4               	rlf	___flmul@grs+1,f
  5980  1610  0DB5               	rlf	___flmul@grs+2,f
  5981  1611  0DB6               	rlf	___flmul@grs+3,f
  5982  1612  0BAC               	decfsz	??___flmul,f
  5983  1613  2E0D               	goto	u4175
  5984  1614  0825               	movf	___flmul@b+1,w
  5985  1615  00AC               	movwf	??___flmul
  5986  1616  082C               	movf	??___flmul,w
  5987  1617  00F0               	movwf	__Umul8_16@multiplicand
  5988  1618  0828               	movf	___flmul@a,w
  5989  1619  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  5990  161E  0871               	movf	?__Umul8_16+1,w
  5991  161F  00BD               	movwf	___flmul@temp+1
  5992  1620  0870               	movf	?__Umul8_16,w
  5993  1621  00BC               	movwf	___flmul@temp
  5994  1622  083C               	movf	___flmul@temp,w
  5995  1623  00AC               	movwf	??___flmul
  5996  1624  083D               	movf	___flmul@temp+1,w
  5997  1625  00AD               	movwf	??___flmul+1
  5998  1626  01AE               	clrf	??___flmul+2
  5999  1627  01AF               	clrf	??___flmul+3
  6000  1628  082C               	movf	??___flmul,w
  6001  1629  07B3               	addwf	___flmul@grs,f
  6002  162A  082D               	movf	??___flmul+1,w
  6003  162B  1103               	clrz
  6004  162C  1803               	skipnc
  6005  162D  3E01               	addlw	1
  6006  162E  1D03               	btfss	3,2
  6007  162F  07B4               	addwf	___flmul@grs+1,f
  6008  1630  082E               	movf	??___flmul+2,w
  6009  1631  1103               	clrz
  6010  1632  1803               	skipnc
  6011  1633  3E01               	addlw	1
  6012  1634  1D03               	btfss	3,2
  6013  1635  07B5               	addwf	___flmul@grs+2,f
  6014  1636  082F               	movf	??___flmul+3,w
  6015  1637  1103               	clrz
  6016  1638  1803               	skipnc
  6017  1639  3E01               	addlw	1
  6018  163A  1D03               	btfss	3,2
  6019  163B  07B6               	addwf	___flmul@grs+3,f
  6020  163C  0824               	movf	___flmul@b,w
  6021  163D  00AC               	movwf	??___flmul
  6022  163E  082C               	movf	??___flmul,w
  6023  163F  00F0               	movwf	__Umul8_16@multiplicand
  6024  1640  0829               	movf	___flmul@a+1,w
  6025  1641  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  6026  1646  0871               	movf	?__Umul8_16+1,w
  6027  1647  00BD               	movwf	___flmul@temp+1
  6028  1648  0870               	movf	?__Umul8_16,w
  6029  1649  00BC               	movwf	___flmul@temp
  6030  164A  083C               	movf	___flmul@temp,w
  6031  164B  00AC               	movwf	??___flmul
  6032  164C  083D               	movf	___flmul@temp+1,w
  6033  164D  00AD               	movwf	??___flmul+1
  6034  164E  01AE               	clrf	??___flmul+2
  6035  164F  01AF               	clrf	??___flmul+3
  6036  1650  082C               	movf	??___flmul,w
  6037  1651  07B3               	addwf	___flmul@grs,f
  6038  1652  082D               	movf	??___flmul+1,w
  6039  1653  1103               	clrz
  6040  1654  1803               	skipnc
  6041  1655  3E01               	addlw	1
  6042  1656  1D03               	btfss	3,2
  6043  1657  07B4               	addwf	___flmul@grs+1,f
  6044  1658  082E               	movf	??___flmul+2,w
  6045  1659  1103               	clrz
  6046  165A  1803               	skipnc
  6047  165B  3E01               	addlw	1
  6048  165C  1D03               	btfss	3,2
  6049  165D  07B5               	addwf	___flmul@grs+2,f
  6050  165E  082F               	movf	??___flmul+3,w
  6051  165F  1103               	clrz
  6052  1660  1803               	skipnc
  6053  1661  3E01               	addlw	1
  6054  1662  1D03               	btfss	3,2
  6055  1663  07B6               	addwf	___flmul@grs+3,f
  6056  1664  3008               	movlw	8
  6057  1665  00AC               	movwf	??___flmul
  6058  1666                     u4205:	
  6059  1666  1003               	clrc
  6060  1667  0DB3               	rlf	___flmul@grs,f
  6061  1668  0DB4               	rlf	___flmul@grs+1,f
  6062  1669  0DB5               	rlf	___flmul@grs+2,f
  6063  166A  0DB6               	rlf	___flmul@grs+3,f
  6064  166B  0BAC               	decfsz	??___flmul,f
  6065  166C  2E66               	goto	u4205
  6066  166D  0824               	movf	___flmul@b,w
  6067  166E  00AC               	movwf	??___flmul
  6068  166F  082C               	movf	??___flmul,w
  6069  1670  00F0               	movwf	__Umul8_16@multiplicand
  6070  1671  0828               	movf	___flmul@a,w
  6071  1672  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  6072  1677  0871               	movf	?__Umul8_16+1,w
  6073  1678  00BD               	movwf	___flmul@temp+1
  6074  1679  0870               	movf	?__Umul8_16,w
  6075  167A  00BC               	movwf	___flmul@temp
  6076  167B  083C               	movf	___flmul@temp,w
  6077  167C  00AC               	movwf	??___flmul
  6078  167D  083D               	movf	___flmul@temp+1,w
  6079  167E  00AD               	movwf	??___flmul+1
  6080  167F  01AE               	clrf	??___flmul+2
  6081  1680  01AF               	clrf	??___flmul+3
  6082  1681  082C               	movf	??___flmul,w
  6083  1682  07B3               	addwf	___flmul@grs,f
  6084  1683  082D               	movf	??___flmul+1,w
  6085  1684  1103               	clrz
  6086  1685  1803               	skipnc
  6087  1686  3E01               	addlw	1
  6088  1687  1D03               	btfss	3,2
  6089  1688  07B4               	addwf	___flmul@grs+1,f
  6090  1689  082E               	movf	??___flmul+2,w
  6091  168A  1103               	clrz
  6092  168B  1803               	skipnc
  6093  168C  3E01               	addlw	1
  6094  168D  1D03               	btfss	3,2
  6095  168E  07B5               	addwf	___flmul@grs+2,f
  6096  168F  082F               	movf	??___flmul+3,w
  6097  1690  1103               	clrz
  6098  1691  1803               	skipnc
  6099  1692  3E01               	addlw	1
  6100  1693  1D03               	btfss	3,2
  6101  1694  07B6               	addwf	___flmul@grs+3,f
  6102  1695  0825               	movf	___flmul@b+1,w
  6103  1696  00AC               	movwf	??___flmul
  6104  1697  082C               	movf	??___flmul,w
  6105  1698  00F0               	movwf	__Umul8_16@multiplicand
  6106  1699  082A               	movf	___flmul@a+2,w
  6107  169A  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  6108  169F  0871               	movf	?__Umul8_16+1,w
  6109  16A0  00BD               	movwf	___flmul@temp+1
  6110  16A1  0870               	movf	?__Umul8_16,w
  6111  16A2  00BC               	movwf	___flmul@temp
  6112  16A3  083C               	movf	___flmul@temp,w
  6113  16A4  00AC               	movwf	??___flmul
  6114  16A5  083D               	movf	___flmul@temp+1,w
  6115  16A6  00AD               	movwf	??___flmul+1
  6116  16A7  01AE               	clrf	??___flmul+2
  6117  16A8  01AF               	clrf	??___flmul+3
  6118  16A9  082C               	movf	??___flmul,w
  6119  16AA  07B8               	addwf	___flmul@prod,f
  6120  16AB  082D               	movf	??___flmul+1,w
  6121  16AC  1103               	clrz
  6122  16AD  1803               	skipnc
  6123  16AE  3E01               	addlw	1
  6124  16AF  1D03               	btfss	3,2
  6125  16B0  07B9               	addwf	___flmul@prod+1,f
  6126  16B1  082E               	movf	??___flmul+2,w
  6127  16B2  1103               	clrz
  6128  16B3  1803               	skipnc
  6129  16B4  3E01               	addlw	1
  6130  16B5  1D03               	btfss	3,2
  6131  16B6  07BA               	addwf	___flmul@prod+2,f
  6132  16B7  082F               	movf	??___flmul+3,w
  6133  16B8  1103               	clrz
  6134  16B9  1803               	skipnc
  6135  16BA  3E01               	addlw	1
  6136  16BB  1D03               	btfss	3,2
  6137  16BC  07BB               	addwf	___flmul@prod+3,f
  6138  16BD  0826               	movf	___flmul@b+2,w
  6139  16BE  00AC               	movwf	??___flmul
  6140  16BF  082C               	movf	??___flmul,w
  6141  16C0  00F0               	movwf	__Umul8_16@multiplicand
  6142  16C1  0829               	movf	___flmul@a+1,w
  6143  16C2  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  6144  16C7  0871               	movf	?__Umul8_16+1,w
  6145  16C8  00BD               	movwf	___flmul@temp+1
  6146  16C9  0870               	movf	?__Umul8_16,w
  6147  16CA  00BC               	movwf	___flmul@temp
  6148  16CB  083C               	movf	___flmul@temp,w
  6149  16CC  00AC               	movwf	??___flmul
  6150  16CD  083D               	movf	___flmul@temp+1,w
  6151  16CE  00AD               	movwf	??___flmul+1
  6152  16CF  01AE               	clrf	??___flmul+2
  6153  16D0  01AF               	clrf	??___flmul+3
  6154  16D1  082C               	movf	??___flmul,w
  6155  16D2  07B8               	addwf	___flmul@prod,f
  6156  16D3  082D               	movf	??___flmul+1,w
  6157  16D4  1103               	clrz
  6158  16D5  1803               	skipnc
  6159  16D6  3E01               	addlw	1
  6160  16D7  1D03               	btfss	3,2
  6161  16D8  07B9               	addwf	___flmul@prod+1,f
  6162  16D9  082E               	movf	??___flmul+2,w
  6163  16DA  1103               	clrz
  6164  16DB  1803               	skipnc
  6165  16DC  3E01               	addlw	1
  6166  16DD  1D03               	btfss	3,2
  6167  16DE  07BA               	addwf	___flmul@prod+2,f
  6168  16DF  082F               	movf	??___flmul+3,w
  6169  16E0  1103               	clrz
  6170  16E1  1803               	skipnc
  6171  16E2  3E01               	addlw	1
  6172  16E3  1D03               	btfss	3,2
  6173  16E4  07BB               	addwf	___flmul@prod+3,f
  6174  16E5  0826               	movf	___flmul@b+2,w
  6175  16E6  00AC               	movwf	??___flmul
  6176  16E7  082C               	movf	??___flmul,w
  6177  16E8  00F0               	movwf	__Umul8_16@multiplicand
  6178  16E9  082A               	movf	___flmul@a+2,w
  6179  16EA  160A  158A  2407  160A  118A  	fcall	__Umul8_16
  6180  16EF  0871               	movf	?__Umul8_16+1,w
  6181  16F0  00BD               	movwf	___flmul@temp+1
  6182  16F1  0870               	movf	?__Umul8_16,w
  6183  16F2  00BC               	movwf	___flmul@temp
  6184  16F3  083C               	movf	___flmul@temp,w
  6185  16F4  00AC               	movwf	??___flmul
  6186  16F5  083D               	movf	___flmul@temp+1,w
  6187  16F6  00AD               	movwf	??___flmul+1
  6188  16F7  01AE               	clrf	??___flmul+2
  6189  16F8  01AF               	clrf	??___flmul+3
  6190  16F9  3008               	movlw	8
  6191  16FA                     u4245:	
  6192  16FA  1003               	clrc
  6193  16FB  0DAC               	rlf	??___flmul,f
  6194  16FC  0DAD               	rlf	??___flmul+1,f
  6195  16FD  0DAE               	rlf	??___flmul+2,f
  6196  16FE  0DAF               	rlf	??___flmul+3,f
  6197  16FF  3EFF               	addlw	-1
  6198  1700  1D03               	skipz
  6199  1701  2EFA               	goto	u4245
  6200  1702  082C               	movf	??___flmul,w
  6201  1703  07B8               	addwf	___flmul@prod,f
  6202  1704  082D               	movf	??___flmul+1,w
  6203  1705  1103               	clrz
  6204  1706  1803               	skipnc
  6205  1707  3E01               	addlw	1
  6206  1708  1D03               	btfss	3,2
  6207  1709  07B9               	addwf	___flmul@prod+1,f
  6208  170A  082E               	movf	??___flmul+2,w
  6209  170B  1103               	clrz
  6210  170C  1803               	skipnc
  6211  170D  3E01               	addlw	1
  6212  170E  1D03               	btfss	3,2
  6213  170F  07BA               	addwf	___flmul@prod+2,f
  6214  1710  082F               	movf	??___flmul+3,w
  6215  1711  1103               	clrz
  6216  1712  1803               	skipnc
  6217  1713  3E01               	addlw	1
  6218  1714  1D03               	btfss	3,2
  6219  1715  07BB               	addwf	___flmul@prod+3,f
  6220  1716  0836               	movf	___flmul@grs+3,w
  6221  1717  00AC               	movwf	??___flmul
  6222  1718  01AD               	clrf	??___flmul+1
  6223  1719  01AE               	clrf	??___flmul+2
  6224  171A  01AF               	clrf	??___flmul+3
  6225  171B  082C               	movf	??___flmul,w
  6226  171C  07B8               	addwf	___flmul@prod,f
  6227  171D  082D               	movf	??___flmul+1,w
  6228  171E  1103               	clrz
  6229  171F  1803               	skipnc
  6230  1720  3E01               	addlw	1
  6231  1721  1D03               	btfss	3,2
  6232  1722  07B9               	addwf	___flmul@prod+1,f
  6233  1723  082E               	movf	??___flmul+2,w
  6234  1724  1103               	clrz
  6235  1725  1803               	skipnc
  6236  1726  3E01               	addlw	1
  6237  1727  1D03               	btfss	3,2
  6238  1728  07BA               	addwf	___flmul@prod+2,f
  6239  1729  082F               	movf	??___flmul+3,w
  6240  172A  1103               	clrz
  6241  172B  1803               	skipnc
  6242  172C  3E01               	addlw	1
  6243  172D  1D03               	btfss	3,2
  6244  172E  07BB               	addwf	___flmul@prod+3,f
  6245  172F  3008               	movlw	8
  6246  1730  00AC               	movwf	??___flmul
  6247  1731                     u4275:	
  6248  1731  1003               	clrc
  6249  1732  0DB3               	rlf	___flmul@grs,f
  6250  1733  0DB4               	rlf	___flmul@grs+1,f
  6251  1734  0DB5               	rlf	___flmul@grs+2,f
  6252  1735  0DB6               	rlf	___flmul@grs+3,f
  6253  1736  0BAC               	decfsz	??___flmul,f
  6254  1737  2F31               	goto	u4275
  6255  1738  0837               	movf	___flmul@bexp,w
  6256  1739  0732               	addwf	___flmul@aexp,w
  6257  173A  00AC               	movwf	??___flmul
  6258  173B  01AD               	clrf	??___flmul+1
  6259  173C  0DAD               	rlf	??___flmul+1,f
  6260  173D  082C               	movf	??___flmul,w
  6261  173E  3E82               	addlw	130
  6262  173F  00BC               	movwf	___flmul@temp
  6263  1740  082D               	movf	??___flmul+1,w
  6264  1741  1803               	skipnc
  6265  1742  3E01               	addlw	1
  6266  1743  3EFF               	addlw	255
  6267  1744  00BD               	movwf	___flmul@temp+1
  6268  1745                     l2825:	
  6269  1745  1BBA               	btfsc	___flmul@prod+2,7
  6270  1746  2F62               	goto	l2827
  6271  1747  3001               	movlw	1
  6272  1748  00AC               	movwf	??___flmul
  6273  1749                     u4285:	
  6274  1749  1003               	clrc
  6275  174A  0DB8               	rlf	___flmul@prod,f
  6276  174B  0DB9               	rlf	___flmul@prod+1,f
  6277  174C  0DBA               	rlf	___flmul@prod+2,f
  6278  174D  0DBB               	rlf	___flmul@prod+3,f
  6279  174E  0BAC               	decfsz	??___flmul,f
  6280  174F  2F49               	goto	u4285
  6281  1750  1BB6               	btfsc	___flmul@grs+3,7
  6282  1751  1438               	bsf	___flmul@prod,0
  6283  1752  3001               	movlw	1
  6284  1753  00AC               	movwf	??___flmul
  6285  1754                     u4305:	
  6286  1754  1003               	clrc
  6287  1755  0DB3               	rlf	___flmul@grs,f
  6288  1756  0DB4               	rlf	___flmul@grs+1,f
  6289  1757  0DB5               	rlf	___flmul@grs+2,f
  6290  1758  0DB6               	rlf	___flmul@grs+3,f
  6291  1759  0BAC               	decfsz	??___flmul,f
  6292  175A  2F54               	goto	u4305
  6293  175B  30FF               	movlw	255
  6294  175C  07BC               	addwf	___flmul@temp,f
  6295  175D  1803               	skipnc
  6296  175E  0ABD               	incf	___flmul@temp+1,f
  6297  175F  30FF               	movlw	255
  6298  1760  07BD               	addwf	___flmul@temp+1,f
  6299  1761  2F45               	goto	l2825
  6300  1762                     l2827:	
  6301  1762  01B2               	clrf	___flmul@aexp
  6302  1763  1FB6               	btfss	___flmul@grs+3,7
  6303  1764  2F7B               	goto	l2837
  6304  1765  30FF               	movlw	255
  6305  1766  0533               	andwf	___flmul@grs,w
  6306  1767  00AC               	movwf	??___flmul
  6307  1768  30FF               	movlw	255
  6308  1769  0534               	andwf	___flmul@grs+1,w
  6309  176A  00AD               	movwf	??___flmul+1
  6310  176B  30FF               	movlw	255
  6311  176C  0535               	andwf	___flmul@grs+2,w
  6312  176D  00AE               	movwf	??___flmul+2
  6313  176E  307F               	movlw	127
  6314  176F  0536               	andwf	___flmul@grs+3,w
  6315  1770  00AF               	movwf	??___flmul+3
  6316  1771  082F               	movf	??___flmul+3,w
  6317  1772  042E               	iorwf	??___flmul+2,w
  6318  1773  042D               	iorwf	??___flmul+1,w
  6319  1774  042C               	iorwf	??___flmul,w
  6320  1775  1903               	skipnz
  6321  1776  1838               	btfsc	___flmul@prod,0
  6322  1777  2F79               	goto	l2833
  6323  1778  2F7B               	goto	l2837
  6324  1779                     l2833:	
  6325  1779  01B2               	clrf	___flmul@aexp
  6326  177A  0AB2               	incf	___flmul@aexp,f
  6327  177B                     l2837:	
  6328  177B  0832               	movf	___flmul@aexp,w
  6329  177C  1903               	btfsc	3,2
  6330  177D  2FAD               	goto	l2847
  6331  177E  3001               	movlw	1
  6332  177F  07B8               	addwf	___flmul@prod,f
  6333  1780  3000               	movlw	0
  6334  1781  1803               	skipnc
  6335  1782  3001               	movlw	1
  6336  1783  07B9               	addwf	___flmul@prod+1,f
  6337  1784  3000               	movlw	0
  6338  1785  1803               	skipnc
  6339  1786  3001               	movlw	1
  6340  1787  07BA               	addwf	___flmul@prod+2,f
  6341  1788  3000               	movlw	0
  6342  1789  1803               	skipnc
  6343  178A  3001               	movlw	1
  6344  178B  07BB               	addwf	___flmul@prod+3,f
  6345  178C  1C3B               	btfss	___flmul@prod+3,0
  6346  178D  2FAD               	goto	l2847
  6347  178E  0838               	movf	___flmul@prod,w
  6348  178F  00AC               	movwf	??___flmul
  6349  1790  0839               	movf	___flmul@prod+1,w
  6350  1791  00AD               	movwf	??___flmul+1
  6351  1792  083A               	movf	___flmul@prod+2,w
  6352  1793  00AE               	movwf	??___flmul+2
  6353  1794  083B               	movf	___flmul@prod+3,w
  6354  1795  00AF               	movwf	??___flmul+3
  6355  1796  3001               	movlw	1
  6356  1797  00B0               	movwf	??___flmul+4
  6357  1798                     u4375:	
  6358  1798  0D2F               	rlf	??___flmul+3,w
  6359  1799  0CAF               	rrf	??___flmul+3,f
  6360  179A  0CAE               	rrf	??___flmul+2,f
  6361  179B  0CAD               	rrf	??___flmul+1,f
  6362  179C  0CAC               	rrf	??___flmul,f
  6363  179D  0BB0               	decfsz	??___flmul+4,f
  6364  179E  2F98               	goto	u4375
  6365  179F  082F               	movf	??___flmul+3,w
  6366  17A0  00BB               	movwf	___flmul@prod+3
  6367  17A1  082E               	movf	??___flmul+2,w
  6368  17A2  00BA               	movwf	___flmul@prod+2
  6369  17A3  082D               	movf	??___flmul+1,w
  6370  17A4  00B9               	movwf	___flmul@prod+1
  6371  17A5  082C               	movf	??___flmul,w
  6372  17A6  00B8               	movwf	___flmul@prod
  6373  17A7  3001               	movlw	1
  6374  17A8  07BC               	addwf	___flmul@temp,f
  6375  17A9  1803               	skipnc
  6376  17AA  0ABD               	incf	___flmul@temp+1,f
  6377  17AB  3000               	movlw	0
  6378  17AC  07BD               	addwf	___flmul@temp+1,f
  6379  17AD                     l2847:	
  6380  17AD  083D               	movf	___flmul@temp+1,w
  6381  17AE  3A80               	xorlw	128
  6382  17AF  00FF               	movwf	127
  6383  17B0  3080               	movlw	128
  6384  17B1  027F               	subwf	127,w
  6385  17B2  1D03               	skipz
  6386  17B3  2FB6               	goto	u4385
  6387  17B4  30FF               	movlw	255
  6388  17B5  023C               	subwf	___flmul@temp,w
  6389  17B6                     u4385:	
  6390  17B6  1C03               	skipc
  6391  17B7  2FC3               	goto	l2851
  6392  17B8  307F               	movlw	127
  6393  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  6394  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  6395  17BB  00BB               	movwf	___flmul@prod+3
  6396  17BC  3080               	movlw	128
  6397  17BD  00BA               	movwf	___flmul@prod+2
  6398  17BE  3000               	movlw	0
  6399  17BF  00B9               	movwf	___flmul@prod+1
  6400  17C0  3000               	movlw	0
  6401  17C1  00B8               	movwf	___flmul@prod
  6402  17C2  2FF3               	goto	l725
  6403  17C3                     l2851:	
  6404  17C3  1283               	bcf	3,5	;RP0=0, select bank0
  6405  17C4  1303               	bcf	3,6	;RP1=0, select bank0
  6406  17C5  083D               	movf	___flmul@temp+1,w
  6407  17C6  3A80               	xorlw	128
  6408  17C7  00FF               	movwf	127
  6409  17C8  3080               	movlw	128
  6410  17C9  027F               	subwf	127,w
  6411  17CA  1D03               	skipz
  6412  17CB  2FCE               	goto	u4395
  6413  17CC  3001               	movlw	1
  6414  17CD  023C               	subwf	___flmul@temp,w
  6415  17CE                     u4395:	
  6416  17CE  1803               	skipnc
  6417  17CF  2FDC               	goto	l2857
  6418  17D0  3000               	movlw	0
  6419  17D1  1283               	bcf	3,5	;RP0=0, select bank0
  6420  17D2  1303               	bcf	3,6	;RP1=0, select bank0
  6421  17D3  00BB               	movwf	___flmul@prod+3
  6422  17D4  3000               	movlw	0
  6423  17D5  00BA               	movwf	___flmul@prod+2
  6424  17D6  3000               	movlw	0
  6425  17D7  00B9               	movwf	___flmul@prod+1
  6426  17D8  3000               	movlw	0
  6427  17D9  00B8               	movwf	___flmul@prod
  6428  17DA  01B1               	clrf	___flmul@sign
  6429  17DB  2FF3               	goto	l725
  6430  17DC                     l2857:	
  6431  17DC  1283               	bcf	3,5	;RP0=0, select bank0
  6432  17DD  1303               	bcf	3,6	;RP1=0, select bank0
  6433  17DE  083C               	movf	___flmul@temp,w
  6434  17DF  00AC               	movwf	??___flmul
  6435  17E0  082C               	movf	??___flmul,w
  6436  17E1  00B7               	movwf	___flmul@bexp
  6437  17E2  30FF               	movlw	255
  6438  17E3  05B8               	andwf	___flmul@prod,f
  6439  17E4  30FF               	movlw	255
  6440  17E5  05B9               	andwf	___flmul@prod+1,f
  6441  17E6  307F               	movlw	127
  6442  17E7  05BA               	andwf	___flmul@prod+2,f
  6443  17E8  3000               	movlw	0
  6444  17E9  05BB               	andwf	___flmul@prod+3,f
  6445  17EA  1837               	btfsc	___flmul@bexp,0
  6446  17EB  17BA               	bsf	___flmul@prod+2,7
  6447  17EC  0837               	movf	___flmul@bexp,w
  6448  17ED  00AC               	movwf	??___flmul
  6449  17EE  1003               	clrc
  6450  17EF  0C2C               	rrf	??___flmul,w
  6451  17F0  00AD               	movwf	??___flmul+1
  6452  17F1  082D               	movf	??___flmul+1,w
  6453  17F2  00BB               	movwf	___flmul@prod+3
  6454  17F3                     l725:	
  6455  17F3  0831               	movf	___flmul@sign,w
  6456  17F4  00AC               	movwf	??___flmul
  6457  17F5  082C               	movf	??___flmul,w
  6458  17F6  04BB               	iorwf	___flmul@prod+3,f
  6459  17F7  083B               	movf	___flmul@prod+3,w
  6460  17F8  00A7               	movwf	?___flmul+3
  6461  17F9  083A               	movf	___flmul@prod+2,w
  6462  17FA  00A6               	movwf	?___flmul+2
  6463  17FB  0839               	movf	___flmul@prod+1,w
  6464  17FC  00A5               	movwf	?___flmul+1
  6465  17FD  0838               	movf	___flmul@prod,w
  6466  17FE  00A4               	movwf	?___flmul
  6467  17FF  0008               	return
  6468  1800                     __end_of___flmul:	
  6469                           
  6470                           	psect	text14
  6471  1C07                     __ptext14:	
  6472 ;; *************** function __Umul8_16 *****************
  6473 ;; Defined at:
  6474 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  multiplier      1    wreg     unsigned char 
  6477 ;;  multiplicand    1    0[COMMON] unsigned char 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  multiplier      1    8[COMMON] unsigned char 
  6480 ;;  word_mpld       2    6[COMMON] unsigned int 
  6481 ;;  product         2    4[COMMON] unsigned int 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  2    0[COMMON] unsigned int 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 300/0
  6488 ;;		On exit  : 300/0
  6489 ;;		Unchanged: 300/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6491 ;;      Params:         2       0       0       0       0
  6492 ;;      Locals:         5       0       0       0       0
  6493 ;;      Temps:          2       0       0       0       0
  6494 ;;      Totals:         9       0       0       0       0
  6495 ;;Total ram usage:        9 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		___flmul
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           
  6505                           ;psect for function __Umul8_16
  6506  1C07                     __Umul8_16:	
  6507                           
  6508                           ;incstack = 0
  6509                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6510                           ;__Umul8_16@multiplier stored from wreg
  6511  1C07  00F8               	movwf	__Umul8_16@multiplier
  6512  1C08  01F4               	clrf	__Umul8_16@product
  6513  1C09  01F5               	clrf	__Umul8_16@product+1
  6514  1C0A  0870               	movf	__Umul8_16@multiplicand,w
  6515  1C0B  00F2               	movwf	??__Umul8_16
  6516  1C0C  01F3               	clrf	??__Umul8_16+1
  6517  1C0D  0872               	movf	??__Umul8_16,w
  6518  1C0E  00F6               	movwf	__Umul8_16@word_mpld
  6519  1C0F  0873               	movf	??__Umul8_16+1,w
  6520  1C10  00F7               	movwf	__Umul8_16@word_mpld+1
  6521  1C11                     l2343:	
  6522  1C11  1C78               	btfss	__Umul8_16@multiplier,0
  6523  1C12  2C19               	goto	l793
  6524  1C13  0876               	movf	__Umul8_16@word_mpld,w
  6525  1C14  07F4               	addwf	__Umul8_16@product,f
  6526  1C15  1803               	skipnc
  6527  1C16  0AF5               	incf	__Umul8_16@product+1,f
  6528  1C17  0877               	movf	__Umul8_16@word_mpld+1,w
  6529  1C18  07F5               	addwf	__Umul8_16@product+1,f
  6530  1C19                     l793:	
  6531  1C19  3001               	movlw	1
  6532  1C1A                     u3145:	
  6533  1C1A  1003               	clrc
  6534  1C1B  0DF6               	rlf	__Umul8_16@word_mpld,f
  6535  1C1C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6536  1C1D  3EFF               	addlw	-1
  6537  1C1E  1D03               	skipz
  6538  1C1F  2C1A               	goto	u3145
  6539  1C20  1003               	clrc
  6540  1C21  0CF8               	rrf	__Umul8_16@multiplier,f
  6541  1C22  0878               	movf	__Umul8_16@multiplier,w
  6542  1C23  1D03               	btfss	3,2
  6543  1C24  2C11               	goto	l2343
  6544  1C25  0875               	movf	__Umul8_16@product+1,w
  6545  1C26  00F1               	movwf	?__Umul8_16+1
  6546  1C27  0874               	movf	__Umul8_16@product,w
  6547  1C28  00F0               	movwf	?__Umul8_16
  6548  1C29  0008               	return
  6549  1C2A                     __end_of__Umul8_16:	
  6550                           
  6551                           	psect	text15
  6552  08EB                     __ptext15:	
  6553 ;; *************** function __tdiv_to_l_ *****************
  6554 ;; Defined at:
  6555 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  f1              4    0[COMMON] float 
  6558 ;;  f2              4    4[COMMON] float 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  quot            4    0[BANK0 ] unsigned long 
  6561 ;;  exp1            1    5[BANK0 ] unsigned char 
  6562 ;;  cntr            1    4[BANK0 ] unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  4    0[COMMON] unsigned long 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 300/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6572 ;;      Params:         8       0       0       0       0
  6573 ;;      Locals:         0       6       0       0       0
  6574 ;;      Temps:          4       0       0       0       0
  6575 ;;      Totals:        12       6       0       0       0
  6576 ;;Total ram usage:       18 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_sprintf
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           
  6586                           ;psect for function __tdiv_to_l_
  6587  08EB                     __tdiv_to_l_:	
  6588                           
  6589                           ;incstack = 0
  6590                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6591  08EB  0870               	movf	__tdiv_to_l_@f1,w
  6592  08EC  00F8               	movwf	??__tdiv_to_l_
  6593  08ED  0871               	movf	__tdiv_to_l_@f1+1,w
  6594  08EE  00F9               	movwf	??__tdiv_to_l_+1
  6595  08EF  0872               	movf	__tdiv_to_l_@f1+2,w
  6596  08F0  00FA               	movwf	??__tdiv_to_l_+2
  6597  08F1  1003               	clrc
  6598  08F2  0D79               	rlf	??__tdiv_to_l_+1,w
  6599  08F3  0D7A               	rlf	??__tdiv_to_l_+2,w
  6600  08F4  00FB               	movwf	??__tdiv_to_l_+3
  6601  08F5  087B               	movf	??__tdiv_to_l_+3,w
  6602  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  6603  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  6604  08F8  00A5               	movwf	__tdiv_to_l_@exp1
  6605  08F9  0825               	movf	__tdiv_to_l_@exp1,w
  6606  08FA  1D03               	btfss	3,2
  6607  08FB  2905               	goto	l2965
  6608  08FC                     l2961:	
  6609  08FC  3000               	movlw	0
  6610  08FD  00F3               	movwf	?__tdiv_to_l_+3
  6611  08FE  3000               	movlw	0
  6612  08FF  00F2               	movwf	?__tdiv_to_l_+2
  6613  0900  3000               	movlw	0
  6614  0901  00F1               	movwf	?__tdiv_to_l_+1
  6615  0902  3000               	movlw	0
  6616  0903  00F0               	movwf	?__tdiv_to_l_
  6617  0904  0008               	return
  6618  0905                     l2965:	
  6619  0905  0874               	movf	__tdiv_to_l_@f2,w
  6620  0906  00F8               	movwf	??__tdiv_to_l_
  6621  0907  0875               	movf	__tdiv_to_l_@f2+1,w
  6622  0908  00F9               	movwf	??__tdiv_to_l_+1
  6623  0909  0876               	movf	__tdiv_to_l_@f2+2,w
  6624  090A  00FA               	movwf	??__tdiv_to_l_+2
  6625  090B  1003               	clrc
  6626  090C  0D79               	rlf	??__tdiv_to_l_+1,w
  6627  090D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6628  090E  00FB               	movwf	??__tdiv_to_l_+3
  6629  090F  087B               	movf	??__tdiv_to_l_+3,w
  6630  0910  00A4               	movwf	__tdiv_to_l_@cntr
  6631  0911  0824               	movf	__tdiv_to_l_@cntr,w
  6632  0912  1903               	btfsc	3,2
  6633  0913  28FC               	goto	l2961
  6634  0914  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6635  0915  30FF               	movlw	255
  6636  0916  05F0               	andwf	__tdiv_to_l_@f1,f
  6637  0917  30FF               	movlw	255
  6638  0918  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6639  0919  3000               	movlw	0
  6640  091A  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6641  091B  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6642  091C  30FF               	movlw	255
  6643  091D  05F4               	andwf	__tdiv_to_l_@f2,f
  6644  091E  30FF               	movlw	255
  6645  091F  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6646  0920  3000               	movlw	0
  6647  0921  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6648  0922  3000               	movlw	0
  6649  0923  00A3               	movwf	__tdiv_to_l_@quot+3
  6650  0924  3000               	movlw	0
  6651  0925  00A2               	movwf	__tdiv_to_l_@quot+2
  6652  0926  3000               	movlw	0
  6653  0927  00A1               	movwf	__tdiv_to_l_@quot+1
  6654  0928  3000               	movlw	0
  6655  0929  00A0               	movwf	__tdiv_to_l_@quot
  6656  092A  307F               	movlw	127
  6657  092B  02A5               	subwf	__tdiv_to_l_@exp1,f
  6658  092C  3098               	movlw	152
  6659  092D  0724               	addwf	__tdiv_to_l_@cntr,w
  6660  092E  00F8               	movwf	??__tdiv_to_l_
  6661  092F  0878               	movf	??__tdiv_to_l_,w
  6662  0930  02A5               	subwf	__tdiv_to_l_@exp1,f
  6663  0931  3018               	movlw	24
  6664  0932  00F8               	movwf	??__tdiv_to_l_
  6665  0933  0878               	movf	??__tdiv_to_l_,w
  6666  0934  00A4               	movwf	__tdiv_to_l_@cntr
  6667  0935                     l2979:	
  6668  0935  3001               	movlw	1
  6669  0936  00F8               	movwf	??__tdiv_to_l_
  6670  0937                     u4715:	
  6671  0937  1003               	clrc
  6672  0938  0DA0               	rlf	__tdiv_to_l_@quot,f
  6673  0939  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6674  093A  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6675  093B  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6676  093C  0BF8               	decfsz	??__tdiv_to_l_,f
  6677  093D  2937               	goto	u4715
  6678  093E  0876               	movf	__tdiv_to_l_@f2+2,w
  6679  093F  0272               	subwf	__tdiv_to_l_@f1+2,w
  6680  0940  1D03               	skipz
  6681  0941  2948               	goto	u4725
  6682  0942  0875               	movf	__tdiv_to_l_@f2+1,w
  6683  0943  0271               	subwf	__tdiv_to_l_@f1+1,w
  6684  0944  1D03               	skipz
  6685  0945  2948               	goto	u4725
  6686  0946  0874               	movf	__tdiv_to_l_@f2,w
  6687  0947  0270               	subwf	__tdiv_to_l_@f1,w
  6688  0948                     u4725:	
  6689  0948  1C03               	skipc
  6690  0949  2955               	goto	l2987
  6691  094A  0874               	movf	__tdiv_to_l_@f2,w
  6692  094B  02F0               	subwf	__tdiv_to_l_@f1,f
  6693  094C  0875               	movf	__tdiv_to_l_@f2+1,w
  6694  094D  1C03               	skipc
  6695  094E  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6696  094F  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6697  0950  0876               	movf	__tdiv_to_l_@f2+2,w
  6698  0951  1C03               	skipc
  6699  0952  0A76               	incf	__tdiv_to_l_@f2+2,w
  6700  0953  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6701  0954  1420               	bsf	__tdiv_to_l_@quot,0
  6702  0955                     l2987:	
  6703  0955  3001               	movlw	1
  6704  0956                     u4735:	
  6705  0956  1003               	clrc
  6706  0957  0DF0               	rlf	__tdiv_to_l_@f1,f
  6707  0958  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6708  0959  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6709  095A  3EFF               	addlw	-1
  6710  095B  1D03               	skipz
  6711  095C  2956               	goto	u4735
  6712  095D  3001               	movlw	1
  6713  095E  02A4               	subwf	__tdiv_to_l_@cntr,f
  6714  095F  1D03               	btfss	3,2
  6715  0960  2935               	goto	l2979
  6716  0961  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6717  0962  2978               	goto	l2999
  6718  0963  0825               	movf	__tdiv_to_l_@exp1,w
  6719  0964  3A80               	xorlw	128
  6720  0965  3E97               	addlw	151
  6721  0966  1C03               	btfss	3,0
  6722  0967  28FC               	goto	l2961
  6723  0968                     l2997:	
  6724  0968  3001               	movlw	1
  6725  0969                     u4775:	
  6726  0969  1003               	clrc
  6727  096A  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6728  096B  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6729  096C  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6730  096D  0CA0               	rrf	__tdiv_to_l_@quot,f
  6731  096E  3EFF               	addlw	-1
  6732  096F  1D03               	skipz
  6733  0970  2969               	goto	u4775
  6734  0971  3001               	movlw	1
  6735  0972  00F8               	movwf	??__tdiv_to_l_
  6736  0973  0878               	movf	??__tdiv_to_l_,w
  6737  0974  07A5               	addwf	__tdiv_to_l_@exp1,f
  6738  0975  1903               	btfsc	3,2
  6739  0976  298B               	goto	l3007
  6740  0977  2968               	goto	l2997
  6741  0978                     l2999:	
  6742  0978  3018               	movlw	24
  6743  0979  0225               	subwf	__tdiv_to_l_@exp1,w
  6744  097A  1803               	btfsc	3,0
  6745  097B  28FC               	goto	l2961
  6746  097C                     l518:	
  6747  097C  0825               	movf	__tdiv_to_l_@exp1,w
  6748  097D  1903               	btfsc	3,2
  6749  097E  298B               	goto	l3007
  6750  097F  3001               	movlw	1
  6751  0980  00F8               	movwf	??__tdiv_to_l_
  6752  0981                     u4805:	
  6753  0981  1003               	clrc
  6754  0982  0DA0               	rlf	__tdiv_to_l_@quot,f
  6755  0983  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6756  0984  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6757  0985  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6758  0986  0BF8               	decfsz	??__tdiv_to_l_,f
  6759  0987  2981               	goto	u4805
  6760  0988  3001               	movlw	1
  6761  0989  02A5               	subwf	__tdiv_to_l_@exp1,f
  6762  098A  297C               	goto	l518
  6763  098B                     l3007:	
  6764  098B  0823               	movf	__tdiv_to_l_@quot+3,w
  6765  098C  00F3               	movwf	?__tdiv_to_l_+3
  6766  098D  0822               	movf	__tdiv_to_l_@quot+2,w
  6767  098E  00F2               	movwf	?__tdiv_to_l_+2
  6768  098F  0821               	movf	__tdiv_to_l_@quot+1,w
  6769  0990  00F1               	movwf	?__tdiv_to_l_+1
  6770  0991  0820               	movf	__tdiv_to_l_@quot,w
  6771  0992  00F0               	movwf	?__tdiv_to_l_
  6772  0993  0008               	return
  6773  0994                     __end_of__tdiv_to_l_:	
  6774                           
  6775                           	psect	text16
  6776  10FE                     __ptext16:	
  6777 ;; *************** function __div_to_l_ *****************
  6778 ;; Defined at:
  6779 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  f1              4    0[COMMON] unsigned long 
  6782 ;;  f2              4    4[COMMON] unsigned long 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  quot            4    0[BANK0 ] unsigned long 
  6785 ;;  exp1            1    5[BANK0 ] unsigned char 
  6786 ;;  cntr            1    4[BANK0 ] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  4    0[COMMON] unsigned long 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 300/100
  6793 ;;		On exit  : 300/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6796 ;;      Params:         8       0       0       0       0
  6797 ;;      Locals:         0       6       0       0       0
  6798 ;;      Temps:          1       0       0       0       0
  6799 ;;      Totals:         9       6       0       0       0
  6800 ;;Total ram usage:       15 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_sprintf
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           
  6810                           ;psect for function __div_to_l_
  6811  10FE                     __div_to_l_:	
  6812                           
  6813                           ;incstack = 0
  6814                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6815  10FE  1003               	clrc
  6816  10FF  0D72               	rlf	__div_to_l_@f1+2,w
  6817  1100  0D73               	rlf	__div_to_l_@f1+3,w
  6818  1101  00F8               	movwf	??__div_to_l_
  6819  1102  0878               	movf	??__div_to_l_,w
  6820  1103  1283               	bcf	3,5	;RP0=0, select bank0
  6821  1104  00A5               	movwf	__div_to_l_@exp1
  6822  1105  0825               	movf	__div_to_l_@exp1,w
  6823  1106  1D03               	btfss	3,2
  6824  1107  2911               	goto	l3017
  6825  1108                     l3013:	
  6826  1108  3000               	movlw	0
  6827  1109  00F3               	movwf	?__div_to_l_+3
  6828  110A  3000               	movlw	0
  6829  110B  00F2               	movwf	?__div_to_l_+2
  6830  110C  3000               	movlw	0
  6831  110D  00F1               	movwf	?__div_to_l_+1
  6832  110E  3000               	movlw	0
  6833  110F  00F0               	movwf	?__div_to_l_
  6834  1110  0008               	return
  6835  1111                     l3017:	
  6836  1111  1003               	clrc
  6837  1112  0D76               	rlf	__div_to_l_@f2+2,w
  6838  1113  0D77               	rlf	__div_to_l_@f2+3,w
  6839  1114  00F8               	movwf	??__div_to_l_
  6840  1115  0878               	movf	??__div_to_l_,w
  6841  1116  00A4               	movwf	__div_to_l_@cntr
  6842  1117  0824               	movf	__div_to_l_@cntr,w
  6843  1118  1903               	btfsc	3,2
  6844  1119  2908               	goto	l3013
  6845  111A  17F2               	bsf	__div_to_l_@f1+2,7
  6846  111B  30FF               	movlw	255
  6847  111C  05F0               	andwf	__div_to_l_@f1,f
  6848  111D  30FF               	movlw	255
  6849  111E  05F1               	andwf	__div_to_l_@f1+1,f
  6850  111F  30FF               	movlw	255
  6851  1120  05F2               	andwf	__div_to_l_@f1+2,f
  6852  1121  3000               	movlw	0
  6853  1122  05F3               	andwf	__div_to_l_@f1+3,f
  6854  1123  17F6               	bsf	__div_to_l_@f2+2,7
  6855  1124  30FF               	movlw	255
  6856  1125  05F4               	andwf	__div_to_l_@f2,f
  6857  1126  30FF               	movlw	255
  6858  1127  05F5               	andwf	__div_to_l_@f2+1,f
  6859  1128  30FF               	movlw	255
  6860  1129  05F6               	andwf	__div_to_l_@f2+2,f
  6861  112A  3000               	movlw	0
  6862  112B  05F7               	andwf	__div_to_l_@f2+3,f
  6863  112C  3000               	movlw	0
  6864  112D  00A3               	movwf	__div_to_l_@quot+3
  6865  112E  3000               	movlw	0
  6866  112F  00A2               	movwf	__div_to_l_@quot+2
  6867  1130  3000               	movlw	0
  6868  1131  00A1               	movwf	__div_to_l_@quot+1
  6869  1132  3000               	movlw	0
  6870  1133  00A0               	movwf	__div_to_l_@quot
  6871  1134  307F               	movlw	127
  6872  1135  02A5               	subwf	__div_to_l_@exp1,f
  6873  1136  30A0               	movlw	160
  6874  1137  0724               	addwf	__div_to_l_@cntr,w
  6875  1138  00F8               	movwf	??__div_to_l_
  6876  1139  0878               	movf	??__div_to_l_,w
  6877  113A  02A5               	subwf	__div_to_l_@exp1,f
  6878  113B  3020               	movlw	32
  6879  113C  00F8               	movwf	??__div_to_l_
  6880  113D  0878               	movf	??__div_to_l_,w
  6881  113E  00A4               	movwf	__div_to_l_@cntr
  6882  113F                     l3031:	
  6883  113F  3001               	movlw	1
  6884  1140  00F8               	movwf	??__div_to_l_
  6885  1141                     u4845:	
  6886  1141  1003               	clrc
  6887  1142  0DA0               	rlf	__div_to_l_@quot,f
  6888  1143  0DA1               	rlf	__div_to_l_@quot+1,f
  6889  1144  0DA2               	rlf	__div_to_l_@quot+2,f
  6890  1145  0DA3               	rlf	__div_to_l_@quot+3,f
  6891  1146  0BF8               	decfsz	??__div_to_l_,f
  6892  1147  2941               	goto	u4845
  6893  1148  0877               	movf	__div_to_l_@f2+3,w
  6894  1149  0273               	subwf	__div_to_l_@f1+3,w
  6895  114A  1D03               	skipz
  6896  114B  2956               	goto	u4855
  6897  114C  0876               	movf	__div_to_l_@f2+2,w
  6898  114D  0272               	subwf	__div_to_l_@f1+2,w
  6899  114E  1D03               	skipz
  6900  114F  2956               	goto	u4855
  6901  1150  0875               	movf	__div_to_l_@f2+1,w
  6902  1151  0271               	subwf	__div_to_l_@f1+1,w
  6903  1152  1D03               	skipz
  6904  1153  2956               	goto	u4855
  6905  1154  0874               	movf	__div_to_l_@f2,w
  6906  1155  0270               	subwf	__div_to_l_@f1,w
  6907  1156                     u4855:	
  6908  1156  1C03               	skipc
  6909  1157  2967               	goto	l3039
  6910  1158  0874               	movf	__div_to_l_@f2,w
  6911  1159  02F0               	subwf	__div_to_l_@f1,f
  6912  115A  0875               	movf	__div_to_l_@f2+1,w
  6913  115B  1C03               	skipc
  6914  115C  0F75               	incfsz	__div_to_l_@f2+1,w
  6915  115D  02F1               	subwf	__div_to_l_@f1+1,f
  6916  115E  0876               	movf	__div_to_l_@f2+2,w
  6917  115F  1C03               	skipc
  6918  1160  0F76               	incfsz	__div_to_l_@f2+2,w
  6919  1161  02F2               	subwf	__div_to_l_@f1+2,f
  6920  1162  0877               	movf	__div_to_l_@f2+3,w
  6921  1163  1C03               	skipc
  6922  1164  0F77               	incfsz	__div_to_l_@f2+3,w
  6923  1165  02F3               	subwf	__div_to_l_@f1+3,f
  6924  1166  1420               	bsf	__div_to_l_@quot,0
  6925  1167                     l3039:	
  6926  1167  3001               	movlw	1
  6927  1168  00F8               	movwf	??__div_to_l_
  6928  1169                     u4865:	
  6929  1169  1003               	clrc
  6930  116A  0DF0               	rlf	__div_to_l_@f1,f
  6931  116B  0DF1               	rlf	__div_to_l_@f1+1,f
  6932  116C  0DF2               	rlf	__div_to_l_@f1+2,f
  6933  116D  0DF3               	rlf	__div_to_l_@f1+3,f
  6934  116E  0BF8               	decfsz	??__div_to_l_,f
  6935  116F  2969               	goto	u4865
  6936  1170  3001               	movlw	1
  6937  1171  02A4               	subwf	__div_to_l_@cntr,f
  6938  1172  1D03               	btfss	3,2
  6939  1173  293F               	goto	l3031
  6940  1174  1FA5               	btfss	__div_to_l_@exp1,7
  6941  1175  298B               	goto	l3051
  6942  1176  0825               	movf	__div_to_l_@exp1,w
  6943  1177  3A80               	xorlw	128
  6944  1178  3E9F               	addlw	159
  6945  1179  1C03               	btfss	3,0
  6946  117A  2908               	goto	l3013
  6947  117B                     l3049:	
  6948  117B  3001               	movlw	1
  6949  117C                     u4905:	
  6950  117C  1003               	clrc
  6951  117D  0CA3               	rrf	__div_to_l_@quot+3,f
  6952  117E  0CA2               	rrf	__div_to_l_@quot+2,f
  6953  117F  0CA1               	rrf	__div_to_l_@quot+1,f
  6954  1180  0CA0               	rrf	__div_to_l_@quot,f
  6955  1181  3EFF               	addlw	-1
  6956  1182  1D03               	skipz
  6957  1183  297C               	goto	u4905
  6958  1184  3001               	movlw	1
  6959  1185  00F8               	movwf	??__div_to_l_
  6960  1186  0878               	movf	??__div_to_l_,w
  6961  1187  07A5               	addwf	__div_to_l_@exp1,f
  6962  1188  1903               	btfsc	3,2
  6963  1189  299E               	goto	l3059
  6964  118A  297B               	goto	l3049
  6965  118B                     l3051:	
  6966  118B  3020               	movlw	32
  6967  118C  0225               	subwf	__div_to_l_@exp1,w
  6968  118D  1803               	btfsc	3,0
  6969  118E  2908               	goto	l3013
  6970  118F                     l471:	
  6971  118F  0825               	movf	__div_to_l_@exp1,w
  6972  1190  1903               	btfsc	3,2
  6973  1191  299E               	goto	l3059
  6974  1192  3001               	movlw	1
  6975  1193  00F8               	movwf	??__div_to_l_
  6976  1194                     u4935:	
  6977  1194  1003               	clrc
  6978  1195  0DA0               	rlf	__div_to_l_@quot,f
  6979  1196  0DA1               	rlf	__div_to_l_@quot+1,f
  6980  1197  0DA2               	rlf	__div_to_l_@quot+2,f
  6981  1198  0DA3               	rlf	__div_to_l_@quot+3,f
  6982  1199  0BF8               	decfsz	??__div_to_l_,f
  6983  119A  2994               	goto	u4935
  6984  119B  3001               	movlw	1
  6985  119C  02A5               	subwf	__div_to_l_@exp1,f
  6986  119D  298F               	goto	l471
  6987  119E                     l3059:	
  6988  119E  0823               	movf	__div_to_l_@quot+3,w
  6989  119F  00F3               	movwf	?__div_to_l_+3
  6990  11A0  0822               	movf	__div_to_l_@quot+2,w
  6991  11A1  00F2               	movwf	?__div_to_l_+2
  6992  11A2  0821               	movf	__div_to_l_@quot+1,w
  6993  11A3  00F1               	movwf	?__div_to_l_+1
  6994  11A4  0820               	movf	__div_to_l_@quot,w
  6995  11A5  00F0               	movwf	?__div_to_l_
  6996  11A6  0008               	return
  6997  11A7                     __end_of__div_to_l_:	
  6998                           
  6999                           	psect	text17
  7000  105B                     __ptext17:	
  7001 ;; *************** function ___xxtofl *****************
  7002 ;; Defined at:
  7003 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  sign            1    wreg     unsigned char 
  7006 ;;  val             4    0[COMMON] long 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;  sign            1    8[COMMON] unsigned char 
  7009 ;;  arg             4   10[COMMON] unsigned long 
  7010 ;;  exp             1    9[COMMON] unsigned char 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  4    0[COMMON] unsigned char 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0
  7015 ;; Tracked objects:
  7016 ;;		On entry : 300/100
  7017 ;;		On exit  : 300/100
  7018 ;;		Unchanged: 300/0
  7019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7020 ;;      Params:         4       0       0       0       0
  7021 ;;      Locals:         6       0       0       0       0
  7022 ;;      Temps:          4       0       0       0       0
  7023 ;;      Totals:        14       0       0       0       0
  7024 ;;Total ram usage:       14 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_main
  7030 ;;		_sprintf
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           
  7035                           ;psect for function ___xxtofl
  7036  105B                     ___xxtofl:	
  7037                           
  7038                           ;incstack = 0
  7039                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7040                           ;___xxtofl@sign stored from wreg
  7041  105B  00F8               	movwf	___xxtofl@sign
  7042  105C  0878               	movf	___xxtofl@sign,w
  7043  105D  1D03               	btfss	3,2
  7044  105E  1FF3               	btfss	___xxtofl@val+3,7
  7045  105F  2870               	goto	l3209
  7046  1060  0970               	comf	___xxtofl@val,w
  7047  1061  00FA               	movwf	___xxtofl@arg
  7048  1062  0971               	comf	___xxtofl@val+1,w
  7049  1063  00FB               	movwf	___xxtofl@arg+1
  7050  1064  0972               	comf	___xxtofl@val+2,w
  7051  1065  00FC               	movwf	___xxtofl@arg+2
  7052  1066  0973               	comf	___xxtofl@val+3,w
  7053  1067  00FD               	movwf	___xxtofl@arg+3
  7054  1068  0AFA               	incf	___xxtofl@arg,f
  7055  1069  1903               	skipnz
  7056  106A  0AFB               	incf	___xxtofl@arg+1,f
  7057  106B  1903               	skipnz
  7058  106C  0AFC               	incf	___xxtofl@arg+2,f
  7059  106D  1903               	skipnz
  7060  106E  0AFD               	incf	___xxtofl@arg+3,f
  7061  106F  2878               	goto	l751
  7062  1070                     l3209:	
  7063  1070  0873               	movf	___xxtofl@val+3,w
  7064  1071  00FD               	movwf	___xxtofl@arg+3
  7065  1072  0872               	movf	___xxtofl@val+2,w
  7066  1073  00FC               	movwf	___xxtofl@arg+2
  7067  1074  0871               	movf	___xxtofl@val+1,w
  7068  1075  00FB               	movwf	___xxtofl@arg+1
  7069  1076  0870               	movf	___xxtofl@val,w
  7070  1077  00FA               	movwf	___xxtofl@arg
  7071  1078                     l751:	
  7072  1078  0873               	movf	___xxtofl@val+3,w
  7073  1079  0472               	iorwf	___xxtofl@val+2,w
  7074  107A  0471               	iorwf	___xxtofl@val+1,w
  7075  107B  0470               	iorwf	___xxtofl@val,w
  7076  107C  1D03               	skipz
  7077  107D  2887               	goto	l3215
  7078  107E  3000               	movlw	0
  7079  107F  00F3               	movwf	?___xxtofl+3
  7080  1080  3000               	movlw	0
  7081  1081  00F2               	movwf	?___xxtofl+2
  7082  1082  3000               	movlw	0
  7083  1083  00F1               	movwf	?___xxtofl+1
  7084  1084  3000               	movlw	0
  7085  1085  00F0               	movwf	?___xxtofl
  7086  1086  0008               	return
  7087  1087                     l3215:	
  7088  1087  3096               	movlw	150
  7089  1088  00F4               	movwf	??___xxtofl
  7090  1089  0874               	movf	??___xxtofl,w
  7091  108A  00F9               	movwf	___xxtofl@exp
  7092  108B                     l3219:	
  7093  108B  30FE               	movlw	254
  7094  108C  057D               	andwf	___xxtofl@arg+3,w
  7095  108D  1903               	btfsc	3,2
  7096  108E  28B8               	goto	l757
  7097  108F  3001               	movlw	1
  7098  1090  00F4               	movwf	??___xxtofl
  7099  1091  0874               	movf	??___xxtofl,w
  7100  1092  07F9               	addwf	___xxtofl@exp,f
  7101  1093  3001               	movlw	1
  7102  1094                     u5365:	
  7103  1094  1003               	clrc
  7104  1095  0CFD               	rrf	___xxtofl@arg+3,f
  7105  1096  0CFC               	rrf	___xxtofl@arg+2,f
  7106  1097  0CFB               	rrf	___xxtofl@arg+1,f
  7107  1098  0CFA               	rrf	___xxtofl@arg,f
  7108  1099  3EFF               	addlw	-1
  7109  109A  1D03               	skipz
  7110  109B  2894               	goto	u5365
  7111  109C  288B               	goto	l3219
  7112  109D                     l3221:	
  7113  109D  3001               	movlw	1
  7114  109E  00F4               	movwf	??___xxtofl
  7115  109F  0874               	movf	??___xxtofl,w
  7116  10A0  07F9               	addwf	___xxtofl@exp,f
  7117  10A1  3001               	movlw	1
  7118  10A2  07FA               	addwf	___xxtofl@arg,f
  7119  10A3  3000               	movlw	0
  7120  10A4  1803               	skipnc
  7121  10A5  3001               	movlw	1
  7122  10A6  07FB               	addwf	___xxtofl@arg+1,f
  7123  10A7  3000               	movlw	0
  7124  10A8  1803               	skipnc
  7125  10A9  3001               	movlw	1
  7126  10AA  07FC               	addwf	___xxtofl@arg+2,f
  7127  10AB  3000               	movlw	0
  7128  10AC  1803               	skipnc
  7129  10AD  3001               	movlw	1
  7130  10AE  07FD               	addwf	___xxtofl@arg+3,f
  7131  10AF  3001               	movlw	1
  7132  10B0                     u5385:	
  7133  10B0  1003               	clrc
  7134  10B1  0CFD               	rrf	___xxtofl@arg+3,f
  7135  10B2  0CFC               	rrf	___xxtofl@arg+2,f
  7136  10B3  0CFB               	rrf	___xxtofl@arg+1,f
  7137  10B4  0CFA               	rrf	___xxtofl@arg,f
  7138  10B5  3EFF               	addlw	-1
  7139  10B6  1D03               	skipz
  7140  10B7  28B0               	goto	u5385
  7141  10B8                     l757:	
  7142  10B8  30FF               	movlw	255
  7143  10B9  057D               	andwf	___xxtofl@arg+3,w
  7144  10BA  1903               	btfsc	3,2
  7145  10BB  28CC               	goto	l3229
  7146  10BC  289D               	goto	l3221
  7147  10BD                     l3231:	
  7148  10BD  3002               	movlw	2
  7149  10BE  0279               	subwf	___xxtofl@exp,w
  7150  10BF  1C03               	btfss	3,0
  7151  10C0  28CE               	goto	l764
  7152  10C1  3001               	movlw	1
  7153  10C2  02F9               	subwf	___xxtofl@exp,f
  7154  10C3  3001               	movlw	1
  7155  10C4  00F4               	movwf	??___xxtofl
  7156  10C5                     u5405:	
  7157  10C5  1003               	clrc
  7158  10C6  0DFA               	rlf	___xxtofl@arg,f
  7159  10C7  0DFB               	rlf	___xxtofl@arg+1,f
  7160  10C8  0DFC               	rlf	___xxtofl@arg+2,f
  7161  10C9  0DFD               	rlf	___xxtofl@arg+3,f
  7162  10CA  0BF4               	decfsz	??___xxtofl,f
  7163  10CB  28C5               	goto	u5405
  7164  10CC                     l3229:	
  7165  10CC  1FFC               	btfss	___xxtofl@arg+2,7
  7166  10CD  28BD               	goto	l3231
  7167  10CE                     l764:	
  7168  10CE  1879               	btfsc	___xxtofl@exp,0
  7169  10CF  28D8               	goto	l765
  7170  10D0  30FF               	movlw	255
  7171  10D1  05FA               	andwf	___xxtofl@arg,f
  7172  10D2  30FF               	movlw	255
  7173  10D3  05FB               	andwf	___xxtofl@arg+1,f
  7174  10D4  307F               	movlw	127
  7175  10D5  05FC               	andwf	___xxtofl@arg+2,f
  7176  10D6  30FF               	movlw	255
  7177  10D7  05FD               	andwf	___xxtofl@arg+3,f
  7178  10D8                     l765:	
  7179  10D8  1003               	clrc
  7180  10D9  0CF9               	rrf	___xxtofl@exp,f
  7181  10DA  0879               	movf	___xxtofl@exp,w
  7182  10DB  00F4               	movwf	??___xxtofl
  7183  10DC  01F5               	clrf	??___xxtofl+1
  7184  10DD  01F6               	clrf	??___xxtofl+2
  7185  10DE  01F7               	clrf	??___xxtofl+3
  7186  10DF  3018               	movlw	24
  7187  10E0                     u5445:	
  7188  10E0  1003               	clrc
  7189  10E1  0DF4               	rlf	??___xxtofl,f
  7190  10E2  0DF5               	rlf	??___xxtofl+1,f
  7191  10E3  0DF6               	rlf	??___xxtofl+2,f
  7192  10E4  0DF7               	rlf	??___xxtofl+3,f
  7193  10E5  3EFF               	addlw	-1
  7194  10E6  1D03               	skipz
  7195  10E7  28E0               	goto	u5445
  7196  10E8  0874               	movf	??___xxtofl,w
  7197  10E9  04FA               	iorwf	___xxtofl@arg,f
  7198  10EA  0875               	movf	??___xxtofl+1,w
  7199  10EB  04FB               	iorwf	___xxtofl@arg+1,f
  7200  10EC  0876               	movf	??___xxtofl+2,w
  7201  10ED  04FC               	iorwf	___xxtofl@arg+2,f
  7202  10EE  0877               	movf	??___xxtofl+3,w
  7203  10EF  04FD               	iorwf	___xxtofl@arg+3,f
  7204  10F0  0878               	movf	___xxtofl@sign,w
  7205  10F1  1D03               	btfss	3,2
  7206  10F2  1FF3               	btfss	___xxtofl@val+3,7
  7207  10F3  28F5               	goto	l3243
  7208  10F4  17FD               	bsf	___xxtofl@arg+3,7
  7209  10F5                     l3243:	
  7210  10F5  087D               	movf	___xxtofl@arg+3,w
  7211  10F6  00F3               	movwf	?___xxtofl+3
  7212  10F7  087C               	movf	___xxtofl@arg+2,w
  7213  10F8  00F2               	movwf	?___xxtofl+2
  7214  10F9  087B               	movf	___xxtofl@arg+1,w
  7215  10FA  00F1               	movwf	?___xxtofl+1
  7216  10FB  087A               	movf	___xxtofl@arg,w
  7217  10FC  00F0               	movwf	?___xxtofl
  7218  10FD  0008               	return
  7219  10FE                     __end_of___xxtofl:	
  7220                           
  7221                           	psect	text18
  7222  1BC5                     __ptext18:	
  7223 ;; *************** function ___wmul *****************
  7224 ;; Defined at:
  7225 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  multiplier      2    0[COMMON] unsigned int 
  7228 ;;  multiplicand    2    2[COMMON] unsigned int 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  product         2    4[COMMON] unsigned int 
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  2    0[COMMON] unsigned int 
  7233 ;; Registers used:
  7234 ;;		wreg, status,2, status,0
  7235 ;; Tracked objects:
  7236 ;;		On entry : 300/100
  7237 ;;		On exit  : 300/100
  7238 ;;		Unchanged: 300/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7240 ;;      Params:         4       0       0       0       0
  7241 ;;      Locals:         2       0       0       0       0
  7242 ;;      Temps:          0       0       0       0       0
  7243 ;;      Totals:         6       0       0       0       0
  7244 ;;Total ram usage:        6 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_sprintf
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function ___wmul
  7255  1BC5                     ___wmul:	
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7259  1BC5  01F4               	clrf	___wmul@product
  7260  1BC6  01F5               	clrf	___wmul@product+1
  7261  1BC7                     l3065:	
  7262  1BC7  1C70               	btfss	___wmul@multiplier,0
  7263  1BC8  2BCF               	goto	l290
  7264  1BC9  0872               	movf	___wmul@multiplicand,w
  7265  1BCA  07F4               	addwf	___wmul@product,f
  7266  1BCB  1803               	skipnc
  7267  1BCC  0AF5               	incf	___wmul@product+1,f
  7268  1BCD  0873               	movf	___wmul@multiplicand+1,w
  7269  1BCE  07F5               	addwf	___wmul@product+1,f
  7270  1BCF                     l290:	
  7271  1BCF  3001               	movlw	1
  7272  1BD0                     u4965:	
  7273  1BD0  1003               	clrc
  7274  1BD1  0DF2               	rlf	___wmul@multiplicand,f
  7275  1BD2  0DF3               	rlf	___wmul@multiplicand+1,f
  7276  1BD3  3EFF               	addlw	-1
  7277  1BD4  1D03               	skipz
  7278  1BD5  2BD0               	goto	u4965
  7279  1BD6  3001               	movlw	1
  7280  1BD7                     u4975:	
  7281  1BD7  1003               	clrc
  7282  1BD8  0CF1               	rrf	___wmul@multiplier+1,f
  7283  1BD9  0CF0               	rrf	___wmul@multiplier,f
  7284  1BDA  3EFF               	addlw	-1
  7285  1BDB  1D03               	skipz
  7286  1BDC  2BD7               	goto	u4975
  7287  1BDD  0870               	movf	___wmul@multiplier,w
  7288  1BDE  0471               	iorwf	___wmul@multiplier+1,w
  7289  1BDF  1D03               	btfss	3,2
  7290  1BE0  2BC7               	goto	l3065
  7291  1BE1  0875               	movf	___wmul@product+1,w
  7292  1BE2  00F1               	movwf	?___wmul+1
  7293  1BE3  0874               	movf	___wmul@product,w
  7294  1BE4  00F0               	movwf	?___wmul
  7295  1BE5  0008               	return
  7296  1BE6                     __end_of___wmul:	
  7297                           
  7298                           	psect	text19
  7299  1E05                     __ptext19:	
  7300 ;; *************** function ___llmod *****************
  7301 ;; Defined at:
  7302 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  divisor         4    0[COMMON] unsigned long 
  7305 ;;  dividend        4    4[COMMON] unsigned long 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;  counter         1    9[COMMON] unsigned char 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  4    0[COMMON] unsigned long 
  7310 ;; Registers used:
  7311 ;;		wreg, status,2, status,0
  7312 ;; Tracked objects:
  7313 ;;		On entry : 300/100
  7314 ;;		On exit  : 300/100
  7315 ;;		Unchanged: 300/0
  7316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7317 ;;      Params:         8       0       0       0       0
  7318 ;;      Locals:         1       0       0       0       0
  7319 ;;      Temps:          1       0       0       0       0
  7320 ;;      Totals:        10       0       0       0       0
  7321 ;;Total ram usage:       10 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_sprintf
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           
  7331                           ;psect for function ___llmod
  7332  1E05                     ___llmod:	
  7333                           
  7334                           ;incstack = 0
  7335                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7336  1E05  0873               	movf	___llmod@divisor+3,w
  7337  1E06  0472               	iorwf	___llmod@divisor+2,w
  7338  1E07  0471               	iorwf	___llmod@divisor+1,w
  7339  1E08  0470               	iorwf	___llmod@divisor,w
  7340  1E09  1903               	skipnz
  7341  1E0A  2E48               	goto	l3193
  7342  1E0B  01F9               	clrf	___llmod@counter
  7343  1E0C  0AF9               	incf	___llmod@counter,f
  7344  1E0D                     l3183:	
  7345  1E0D  1BF3               	btfsc	___llmod@divisor+3,7
  7346  1E0E  2E1D               	goto	l3185
  7347  1E0F  3001               	movlw	1
  7348  1E10  00F8               	movwf	??___llmod
  7349  1E11                     u5285:	
  7350  1E11  1003               	clrc
  7351  1E12  0DF0               	rlf	___llmod@divisor,f
  7352  1E13  0DF1               	rlf	___llmod@divisor+1,f
  7353  1E14  0DF2               	rlf	___llmod@divisor+2,f
  7354  1E15  0DF3               	rlf	___llmod@divisor+3,f
  7355  1E16  0BF8               	decfsz	??___llmod,f
  7356  1E17  2E11               	goto	u5285
  7357  1E18  3001               	movlw	1
  7358  1E19  00F8               	movwf	??___llmod
  7359  1E1A  0878               	movf	??___llmod,w
  7360  1E1B  07F9               	addwf	___llmod@counter,f
  7361  1E1C  2E0D               	goto	l3183
  7362  1E1D                     l3185:	
  7363  1E1D  0873               	movf	___llmod@divisor+3,w
  7364  1E1E  0277               	subwf	___llmod@dividend+3,w
  7365  1E1F  1D03               	skipz
  7366  1E20  2E2B               	goto	u5305
  7367  1E21  0872               	movf	___llmod@divisor+2,w
  7368  1E22  0276               	subwf	___llmod@dividend+2,w
  7369  1E23  1D03               	skipz
  7370  1E24  2E2B               	goto	u5305
  7371  1E25  0871               	movf	___llmod@divisor+1,w
  7372  1E26  0275               	subwf	___llmod@dividend+1,w
  7373  1E27  1D03               	skipz
  7374  1E28  2E2B               	goto	u5305
  7375  1E29  0870               	movf	___llmod@divisor,w
  7376  1E2A  0274               	subwf	___llmod@dividend,w
  7377  1E2B                     u5305:	
  7378  1E2B  1C03               	skipc
  7379  1E2C  2E3B               	goto	l3189
  7380  1E2D  0870               	movf	___llmod@divisor,w
  7381  1E2E  02F4               	subwf	___llmod@dividend,f
  7382  1E2F  0871               	movf	___llmod@divisor+1,w
  7383  1E30  1C03               	skipc
  7384  1E31  0F71               	incfsz	___llmod@divisor+1,w
  7385  1E32  02F5               	subwf	___llmod@dividend+1,f
  7386  1E33  0872               	movf	___llmod@divisor+2,w
  7387  1E34  1C03               	skipc
  7388  1E35  0F72               	incfsz	___llmod@divisor+2,w
  7389  1E36  02F6               	subwf	___llmod@dividend+2,f
  7390  1E37  0873               	movf	___llmod@divisor+3,w
  7391  1E38  1C03               	skipc
  7392  1E39  0F73               	incfsz	___llmod@divisor+3,w
  7393  1E3A  02F7               	subwf	___llmod@dividend+3,f
  7394  1E3B                     l3189:	
  7395  1E3B  3001               	movlw	1
  7396  1E3C                     u5315:	
  7397  1E3C  1003               	clrc
  7398  1E3D  0CF3               	rrf	___llmod@divisor+3,f
  7399  1E3E  0CF2               	rrf	___llmod@divisor+2,f
  7400  1E3F  0CF1               	rrf	___llmod@divisor+1,f
  7401  1E40  0CF0               	rrf	___llmod@divisor,f
  7402  1E41  3EFF               	addlw	-1
  7403  1E42  1D03               	skipz
  7404  1E43  2E3C               	goto	u5315
  7405  1E44  3001               	movlw	1
  7406  1E45  02F9               	subwf	___llmod@counter,f
  7407  1E46  1D03               	btfss	3,2
  7408  1E47  2E1D               	goto	l3185
  7409  1E48                     l3193:	
  7410  1E48  0877               	movf	___llmod@dividend+3,w
  7411  1E49  00F3               	movwf	?___llmod+3
  7412  1E4A  0876               	movf	___llmod@dividend+2,w
  7413  1E4B  00F2               	movwf	?___llmod+2
  7414  1E4C  0875               	movf	___llmod@dividend+1,w
  7415  1E4D  00F1               	movwf	?___llmod+1
  7416  1E4E  0874               	movf	___llmod@dividend,w
  7417  1E4F  00F0               	movwf	?___llmod
  7418  1E50  0008               	return
  7419  1E51                     __end_of___llmod:	
  7420                           
  7421                           	psect	text20
  7422  1EAB                     __ptext20:	
  7423 ;; *************** function ___lldiv *****************
  7424 ;; Defined at:
  7425 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  divisor         4    0[COMMON] unsigned long 
  7428 ;;  dividend        4    4[COMMON] unsigned long 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;  quotient        4    9[COMMON] unsigned long 
  7431 ;;  counter         1   13[COMMON] unsigned char 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  4    0[COMMON] unsigned long 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2, status,0
  7436 ;; Tracked objects:
  7437 ;;		On entry : 300/100
  7438 ;;		On exit  : 300/100
  7439 ;;		Unchanged: 300/0
  7440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7441 ;;      Params:         8       0       0       0       0
  7442 ;;      Locals:         5       0       0       0       0
  7443 ;;      Temps:          1       0       0       0       0
  7444 ;;      Totals:        14       0       0       0       0
  7445 ;;Total ram usage:       14 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; This function calls:
  7448 ;;		Nothing
  7449 ;; This function is called by:
  7450 ;;		_sprintf
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           
  7455                           ;psect for function ___lldiv
  7456  1EAB                     ___lldiv:	
  7457                           
  7458                           ;incstack = 0
  7459                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7460  1EAB  3000               	movlw	0
  7461  1EAC  00FC               	movwf	___lldiv@quotient+3
  7462  1EAD  3000               	movlw	0
  7463  1EAE  00FB               	movwf	___lldiv@quotient+2
  7464  1EAF  3000               	movlw	0
  7465  1EB0  00FA               	movwf	___lldiv@quotient+1
  7466  1EB1  3000               	movlw	0
  7467  1EB2  00F9               	movwf	___lldiv@quotient
  7468  1EB3  0873               	movf	___lldiv@divisor+3,w
  7469  1EB4  0472               	iorwf	___lldiv@divisor+2,w
  7470  1EB5  0471               	iorwf	___lldiv@divisor+1,w
  7471  1EB6  0470               	iorwf	___lldiv@divisor,w
  7472  1EB7  1903               	skipnz
  7473  1EB8  2F00               	goto	l3097
  7474  1EB9  01FD               	clrf	___lldiv@counter
  7475  1EBA  0AFD               	incf	___lldiv@counter,f
  7476  1EBB                     l3083:	
  7477  1EBB  1BF3               	btfsc	___lldiv@divisor+3,7
  7478  1EBC  2ECB               	goto	l3085
  7479  1EBD  3001               	movlw	1
  7480  1EBE  00F8               	movwf	??___lldiv
  7481  1EBF                     u5005:	
  7482  1EBF  1003               	clrc
  7483  1EC0  0DF0               	rlf	___lldiv@divisor,f
  7484  1EC1  0DF1               	rlf	___lldiv@divisor+1,f
  7485  1EC2  0DF2               	rlf	___lldiv@divisor+2,f
  7486  1EC3  0DF3               	rlf	___lldiv@divisor+3,f
  7487  1EC4  0BF8               	decfsz	??___lldiv,f
  7488  1EC5  2EBF               	goto	u5005
  7489  1EC6  3001               	movlw	1
  7490  1EC7  00F8               	movwf	??___lldiv
  7491  1EC8  0878               	movf	??___lldiv,w
  7492  1EC9  07FD               	addwf	___lldiv@counter,f
  7493  1ECA  2EBB               	goto	l3083
  7494  1ECB                     l3085:	
  7495  1ECB  3001               	movlw	1
  7496  1ECC  00F8               	movwf	??___lldiv
  7497  1ECD                     u5025:	
  7498  1ECD  1003               	clrc
  7499  1ECE  0DF9               	rlf	___lldiv@quotient,f
  7500  1ECF  0DFA               	rlf	___lldiv@quotient+1,f
  7501  1ED0  0DFB               	rlf	___lldiv@quotient+2,f
  7502  1ED1  0DFC               	rlf	___lldiv@quotient+3,f
  7503  1ED2  0BF8               	decfsz	??___lldiv,f
  7504  1ED3  2ECD               	goto	u5025
  7505  1ED4  0873               	movf	___lldiv@divisor+3,w
  7506  1ED5  0277               	subwf	___lldiv@dividend+3,w
  7507  1ED6  1D03               	skipz
  7508  1ED7  2EE2               	goto	u5035
  7509  1ED8  0872               	movf	___lldiv@divisor+2,w
  7510  1ED9  0276               	subwf	___lldiv@dividend+2,w
  7511  1EDA  1D03               	skipz
  7512  1EDB  2EE2               	goto	u5035
  7513  1EDC  0871               	movf	___lldiv@divisor+1,w
  7514  1EDD  0275               	subwf	___lldiv@dividend+1,w
  7515  1EDE  1D03               	skipz
  7516  1EDF  2EE2               	goto	u5035
  7517  1EE0  0870               	movf	___lldiv@divisor,w
  7518  1EE1  0274               	subwf	___lldiv@dividend,w
  7519  1EE2                     u5035:	
  7520  1EE2  1C03               	skipc
  7521  1EE3  2EF3               	goto	l3093
  7522  1EE4  0870               	movf	___lldiv@divisor,w
  7523  1EE5  02F4               	subwf	___lldiv@dividend,f
  7524  1EE6  0871               	movf	___lldiv@divisor+1,w
  7525  1EE7  1C03               	skipc
  7526  1EE8  0F71               	incfsz	___lldiv@divisor+1,w
  7527  1EE9  02F5               	subwf	___lldiv@dividend+1,f
  7528  1EEA  0872               	movf	___lldiv@divisor+2,w
  7529  1EEB  1C03               	skipc
  7530  1EEC  0F72               	incfsz	___lldiv@divisor+2,w
  7531  1EED  02F6               	subwf	___lldiv@dividend+2,f
  7532  1EEE  0873               	movf	___lldiv@divisor+3,w
  7533  1EEF  1C03               	skipc
  7534  1EF0  0F73               	incfsz	___lldiv@divisor+3,w
  7535  1EF1  02F7               	subwf	___lldiv@dividend+3,f
  7536  1EF2  1479               	bsf	___lldiv@quotient,0
  7537  1EF3                     l3093:	
  7538  1EF3  3001               	movlw	1
  7539  1EF4                     u5045:	
  7540  1EF4  1003               	clrc
  7541  1EF5  0CF3               	rrf	___lldiv@divisor+3,f
  7542  1EF6  0CF2               	rrf	___lldiv@divisor+2,f
  7543  1EF7  0CF1               	rrf	___lldiv@divisor+1,f
  7544  1EF8  0CF0               	rrf	___lldiv@divisor,f
  7545  1EF9  3EFF               	addlw	-1
  7546  1EFA  1D03               	skipz
  7547  1EFB  2EF4               	goto	u5045
  7548  1EFC  3001               	movlw	1
  7549  1EFD  02FD               	subwf	___lldiv@counter,f
  7550  1EFE  1D03               	btfss	3,2
  7551  1EFF  2ECB               	goto	l3085
  7552  1F00                     l3097:	
  7553  1F00  087C               	movf	___lldiv@quotient+3,w
  7554  1F01  00F3               	movwf	?___lldiv+3
  7555  1F02  087B               	movf	___lldiv@quotient+2,w
  7556  1F03  00F2               	movwf	?___lldiv+2
  7557  1F04  087A               	movf	___lldiv@quotient+1,w
  7558  1F05  00F1               	movwf	?___lldiv+1
  7559  1F06  0879               	movf	___lldiv@quotient,w
  7560  1F07  00F0               	movwf	?___lldiv
  7561  1F08  0008               	return
  7562  1F09                     __end_of___lldiv:	
  7563                           
  7564                           	psect	text21
  7565  001E                     __ptext21:	
  7566 ;; *************** function ___fltol *****************
  7567 ;; Defined at:
  7568 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  f1              4   49[BANK0 ] unsigned long 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  exp1            1   59[BANK0 ] unsigned char 
  7573 ;;  sign1           1   58[BANK0 ] unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  4   49[BANK0 ] long 
  7576 ;; Registers used:
  7577 ;;		wreg, status,2, status,0
  7578 ;; Tracked objects:
  7579 ;;		On entry : 300/0
  7580 ;;		On exit  : 300/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7583 ;;      Params:         0       4       0       0       0
  7584 ;;      Locals:         0       2       0       0       0
  7585 ;;      Temps:          0       5       0       0       0
  7586 ;;      Totals:         0      11       0       0       0
  7587 ;;Total ram usage:       11 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_main
  7593 ;;		_sprintf
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           
  7598                           ;psect for function ___fltol
  7599  001E                     ___fltol:	
  7600                           
  7601                           ;incstack = 0
  7602                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7603  001E  1003               	clrc
  7604  001F  0D53               	rlf	___fltol@f1+2,w
  7605  0020  0D54               	rlf	___fltol@f1+3,w
  7606  0021  00D5               	movwf	??___fltol
  7607  0022  0855               	movf	??___fltol,w
  7608  0023  00DB               	movwf	___fltol@exp1
  7609  0024  085B               	movf	___fltol@exp1,w
  7610  0025  1D03               	btfss	3,2
  7611  0026  2830               	goto	l3147
  7612  0027                     l3143:	
  7613  0027  3000               	movlw	0
  7614  0028  00D4               	movwf	?___fltol+3
  7615  0029  3000               	movlw	0
  7616  002A  00D3               	movwf	?___fltol+2
  7617  002B  3000               	movlw	0
  7618  002C  00D2               	movwf	?___fltol+1
  7619  002D  3000               	movlw	0
  7620  002E  00D1               	movwf	?___fltol
  7621  002F  0008               	return
  7622  0030                     l3147:	
  7623  0030  0851               	movf	___fltol@f1,w
  7624  0031  00D5               	movwf	??___fltol
  7625  0032  0852               	movf	___fltol@f1+1,w
  7626  0033  00D6               	movwf	??___fltol+1
  7627  0034  0853               	movf	___fltol@f1+2,w
  7628  0035  00D7               	movwf	??___fltol+2
  7629  0036  0854               	movf	___fltol@f1+3,w
  7630  0037  00D8               	movwf	??___fltol+3
  7631  0038  301F               	movlw	31
  7632  0039                     u5185:	
  7633  0039  1003               	clrc
  7634  003A  0CD8               	rrf	??___fltol+3,f
  7635  003B  0CD7               	rrf	??___fltol+2,f
  7636  003C  0CD6               	rrf	??___fltol+1,f
  7637  003D  0CD5               	rrf	??___fltol,f
  7638  003E  3EFF               	addlw	-1
  7639  003F  1D03               	skipz
  7640  0040  2839               	goto	u5185
  7641  0041  0855               	movf	??___fltol,w
  7642  0042  00D9               	movwf	??___fltol+4
  7643  0043  0859               	movf	??___fltol+4,w
  7644  0044  00DA               	movwf	___fltol@sign1
  7645  0045  17D3               	bsf	___fltol@f1+2,7
  7646  0046  30FF               	movlw	255
  7647  0047  05D1               	andwf	___fltol@f1,f
  7648  0048  30FF               	movlw	255
  7649  0049  05D2               	andwf	___fltol@f1+1,f
  7650  004A  30FF               	movlw	255
  7651  004B  05D3               	andwf	___fltol@f1+2,f
  7652  004C  3000               	movlw	0
  7653  004D  05D4               	andwf	___fltol@f1+3,f
  7654  004E  3096               	movlw	150
  7655  004F  02DB               	subwf	___fltol@exp1,f
  7656  0050  1FDB               	btfss	___fltol@exp1,7
  7657  0051  2867               	goto	l3165
  7658  0052  085B               	movf	___fltol@exp1,w
  7659  0053  3A80               	xorlw	128
  7660  0054  3E97               	addlw	151
  7661  0055  1C03               	btfss	3,0
  7662  0056  2827               	goto	l3143
  7663  0057                     l3163:	
  7664  0057  3001               	movlw	1
  7665  0058                     u5215:	
  7666  0058  1003               	clrc
  7667  0059  0CD4               	rrf	___fltol@f1+3,f
  7668  005A  0CD3               	rrf	___fltol@f1+2,f
  7669  005B  0CD2               	rrf	___fltol@f1+1,f
  7670  005C  0CD1               	rrf	___fltol@f1,f
  7671  005D  3EFF               	addlw	-1
  7672  005E  1D03               	skipz
  7673  005F  2858               	goto	u5215
  7674  0060  3001               	movlw	1
  7675  0061  00D5               	movwf	??___fltol
  7676  0062  0855               	movf	??___fltol,w
  7677  0063  07DB               	addwf	___fltol@exp1,f
  7678  0064  1903               	btfsc	3,2
  7679  0065  287A               	goto	l3173
  7680  0066  2857               	goto	l3163
  7681  0067                     l3165:	
  7682  0067  3020               	movlw	32
  7683  0068  025B               	subwf	___fltol@exp1,w
  7684  0069  1803               	btfsc	3,0
  7685  006A  2827               	goto	l3143
  7686  006B                     l500:	
  7687  006B  085B               	movf	___fltol@exp1,w
  7688  006C  1903               	btfsc	3,2
  7689  006D  287A               	goto	l3173
  7690  006E  3001               	movlw	1
  7691  006F  00D5               	movwf	??___fltol
  7692  0070                     u5245:	
  7693  0070  1003               	clrc
  7694  0071  0DD1               	rlf	___fltol@f1,f
  7695  0072  0DD2               	rlf	___fltol@f1+1,f
  7696  0073  0DD3               	rlf	___fltol@f1+2,f
  7697  0074  0DD4               	rlf	___fltol@f1+3,f
  7698  0075  0BD5               	decfsz	??___fltol,f
  7699  0076  2870               	goto	u5245
  7700  0077  3001               	movlw	1
  7701  0078  02DB               	subwf	___fltol@exp1,f
  7702  0079  286B               	goto	l500
  7703  007A                     l3173:	
  7704  007A  085A               	movf	___fltol@sign1,w
  7705  007B  1903               	btfsc	3,2
  7706  007C  0008               	return
  7707  007D  09D1               	comf	___fltol@f1,f
  7708  007E  09D2               	comf	___fltol@f1+1,f
  7709  007F  09D3               	comf	___fltol@f1+2,f
  7710  0080  09D4               	comf	___fltol@f1+3,f
  7711  0081  0AD1               	incf	___fltol@f1,f
  7712  0082  1903               	skipnz
  7713  0083  0AD2               	incf	___fltol@f1+1,f
  7714  0084  1903               	skipnz
  7715  0085  0AD3               	incf	___fltol@f1+2,f
  7716  0086  1903               	skipnz
  7717  0087  0AD4               	incf	___fltol@f1+3,f
  7718  0088  0008               	return
  7719  0089                     __end_of___fltol:	
  7720                           
  7721                           	psect	text22
  7722  1B87                     __ptext22:	
  7723 ;; *************** function ___flsub *****************
  7724 ;; Defined at:
  7725 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  a               4   70[BANK0 ] long 
  7728 ;;  b               4   74[BANK0 ] long 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  4   70[BANK0 ] long 
  7733 ;; Registers used:
  7734 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 300/0
  7737 ;;		On exit  : 300/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7740 ;;      Params:         0       8       0       0       0
  7741 ;;      Locals:         0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0
  7743 ;;      Totals:         0       8       0       0       0
  7744 ;;Total ram usage:        8 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:    1
  7747 ;; This function calls:
  7748 ;;		___fladd
  7749 ;; This function is called by:
  7750 ;;		_main
  7751 ;;		_sprintf
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           
  7756                           ;psect for function ___flsub
  7757  1B87                     ___flsub:	
  7758                           
  7759                           ;incstack = 0
  7760                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7761  1B87  3080               	movlw	128
  7762  1B88  06E9               	xorwf	___flsub@a+3,f
  7763  1B89  086D               	movf	___flsub@b+3,w
  7764  1B8A  00D5               	movwf	___fladd@b+3
  7765  1B8B  086C               	movf	___flsub@b+2,w
  7766  1B8C  00D4               	movwf	___fladd@b+2
  7767  1B8D  086B               	movf	___flsub@b+1,w
  7768  1B8E  00D3               	movwf	___fladd@b+1
  7769  1B8F  086A               	movf	___flsub@b,w
  7770  1B90  00D2               	movwf	___fladd@b
  7771  1B91  0869               	movf	___flsub@a+3,w
  7772  1B92  00D9               	movwf	___fladd@a+3
  7773  1B93  0868               	movf	___flsub@a+2,w
  7774  1B94  00D8               	movwf	___fladd@a+2
  7775  1B95  0867               	movf	___flsub@a+1,w
  7776  1B96  00D7               	movwf	___fladd@a+1
  7777  1B97  0866               	movf	___flsub@a,w
  7778  1B98  00D6               	movwf	___fladd@a
  7779  1B99  120A  118A  2089   	fcall	___fladd
  7780  1B9C  0855               	movf	?___fladd+3,w
  7781  1B9D  00E9               	movwf	?___flsub+3
  7782  1B9E  0854               	movf	?___fladd+2,w
  7783  1B9F  00E8               	movwf	?___flsub+2
  7784  1BA0  0853               	movf	?___fladd+1,w
  7785  1BA1  00E7               	movwf	?___flsub+1
  7786  1BA2  0852               	movf	?___fladd,w
  7787  1BA3  00E6               	movwf	?___flsub
  7788  1BA4  0008               	return
  7789  1BA5                     __end_of___flsub:	
  7790                           
  7791                           	psect	text23
  7792  0089                     __ptext23:	
  7793 ;; *************** function ___fladd *****************
  7794 ;; Defined at:
  7795 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  b               4   50[BANK0 ] long 
  7798 ;;  a               4   54[BANK0 ] long 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  grs             1   69[BANK0 ] unsigned char 
  7801 ;;  bexp            1   68[BANK0 ] unsigned char 
  7802 ;;  aexp            1   67[BANK0 ] unsigned char 
  7803 ;;  signs           1   66[BANK0 ] unsigned char 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  4   50[BANK0 ] unsigned char 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0, btemp+1
  7808 ;; Tracked objects:
  7809 ;;		On entry : 300/0
  7810 ;;		On exit  : 300/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7813 ;;      Params:         0       8       0       0       0
  7814 ;;      Locals:         0       4       0       0       0
  7815 ;;      Temps:          0       8       0       0       0
  7816 ;;      Totals:         0      20       0       0       0
  7817 ;;Total ram usage:       20 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_main
  7823 ;;		_sprintf
  7824 ;;		___flsub
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           
  7829                           ;psect for function ___fladd
  7830  0089                     ___fladd:	
  7831                           
  7832                           ;incstack = 0
  7833                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7834  0089  0855               	movf	___fladd@b+3,w
  7835  008A  3980               	andlw	128
  7836  008B  00DA               	movwf	??___fladd
  7837  008C  085A               	movf	??___fladd,w
  7838  008D  00E2               	movwf	___fladd@signs
  7839  008E  0855               	movf	___fladd@b+3,w
  7840  008F  00DA               	movwf	??___fladd
  7841  0090  075A               	addwf	??___fladd,w
  7842  0091  00DB               	movwf	??___fladd+1
  7843  0092  085B               	movf	??___fladd+1,w
  7844  0093  00E4               	movwf	___fladd@bexp
  7845  0094  1BD4               	btfsc	___fladd@b+2,7
  7846  0095  1464               	bsf	___fladd@bexp,0
  7847  0096  0864               	movf	___fladd@bexp,w
  7848  0097  1903               	btfsc	3,2
  7849  0098  28A7               	goto	l2553
  7850  0099  0A64               	incf	___fladd@bexp,w
  7851  009A  1D03               	btfss	3,2
  7852  009B  28A4               	goto	l2549
  7853  009C  3000               	movlw	0
  7854  009D  00D5               	movwf	___fladd@b+3
  7855  009E  3000               	movlw	0
  7856  009F  00D4               	movwf	___fladd@b+2
  7857  00A0  3000               	movlw	0
  7858  00A1  00D3               	movwf	___fladd@b+1
  7859  00A2  3000               	movlw	0
  7860  00A3  00D2               	movwf	___fladd@b
  7861  00A4                     l2549:	
  7862  00A4  17D4               	bsf	___fladd@b+2,7
  7863  00A5  01D5               	clrf	___fladd@b+3
  7864  00A6  28AF               	goto	l2555
  7865  00A7                     l2553:	
  7866  00A7  3000               	movlw	0
  7867  00A8  00D5               	movwf	___fladd@b+3
  7868  00A9  3000               	movlw	0
  7869  00AA  00D4               	movwf	___fladd@b+2
  7870  00AB  3000               	movlw	0
  7871  00AC  00D3               	movwf	___fladd@b+1
  7872  00AD  3000               	movlw	0
  7873  00AE  00D2               	movwf	___fladd@b
  7874  00AF                     l2555:	
  7875  00AF  0859               	movf	___fladd@a+3,w
  7876  00B0  3980               	andlw	128
  7877  00B1  00DA               	movwf	??___fladd
  7878  00B2  085A               	movf	??___fladd,w
  7879  00B3  00E3               	movwf	___fladd@aexp
  7880  00B4  0863               	movf	___fladd@aexp,w
  7881  00B5  0662               	xorwf	___fladd@signs,w
  7882  00B6  1D03               	btfss	3,2
  7883  00B7  1762               	bsf	___fladd@signs,6
  7884  00B8  0859               	movf	___fladd@a+3,w
  7885  00B9  00DA               	movwf	??___fladd
  7886  00BA  075A               	addwf	??___fladd,w
  7887  00BB  00DB               	movwf	??___fladd+1
  7888  00BC  085B               	movf	??___fladd+1,w
  7889  00BD  00E3               	movwf	___fladd@aexp
  7890  00BE  1BD8               	btfsc	___fladd@a+2,7
  7891  00BF  1463               	bsf	___fladd@aexp,0
  7892  00C0  0863               	movf	___fladd@aexp,w
  7893  00C1  1903               	btfsc	3,2
  7894  00C2  28D1               	goto	l2577
  7895  00C3  0A63               	incf	___fladd@aexp,w
  7896  00C4  1D03               	btfss	3,2
  7897  00C5  28CE               	goto	l2573
  7898  00C6  3000               	movlw	0
  7899  00C7  00D9               	movwf	___fladd@a+3
  7900  00C8  3000               	movlw	0
  7901  00C9  00D8               	movwf	___fladd@a+2
  7902  00CA  3000               	movlw	0
  7903  00CB  00D7               	movwf	___fladd@a+1
  7904  00CC  3000               	movlw	0
  7905  00CD  00D6               	movwf	___fladd@a
  7906  00CE                     l2573:	
  7907  00CE  17D8               	bsf	___fladd@a+2,7
  7908  00CF  01D9               	clrf	___fladd@a+3
  7909  00D0  28D9               	goto	l617
  7910  00D1                     l2577:	
  7911  00D1  3000               	movlw	0
  7912  00D2  00D9               	movwf	___fladd@a+3
  7913  00D3  3000               	movlw	0
  7914  00D4  00D8               	movwf	___fladd@a+2
  7915  00D5  3000               	movlw	0
  7916  00D6  00D7               	movwf	___fladd@a+1
  7917  00D7  3000               	movlw	0
  7918  00D8  00D6               	movwf	___fladd@a
  7919  00D9                     l617:	
  7920  00D9  0864               	movf	___fladd@bexp,w
  7921  00DA  0263               	subwf	___fladd@aexp,w
  7922  00DB  1803               	skipnc
  7923  00DC  291F               	goto	l2613
  7924  00DD  1F62               	btfss	___fladd@signs,6
  7925  00DE  28E3               	goto	l2583
  7926  00DF  3080               	movlw	128
  7927  00E0  00DA               	movwf	??___fladd
  7928  00E1  085A               	movf	??___fladd,w
  7929  00E2  06E2               	xorwf	___fladd@signs,f
  7930  00E3                     l2583:	
  7931  00E3  0864               	movf	___fladd@bexp,w
  7932  00E4  00DA               	movwf	??___fladd
  7933  00E5  085A               	movf	??___fladd,w
  7934  00E6  00E5               	movwf	___fladd@grs
  7935  00E7  0863               	movf	___fladd@aexp,w
  7936  00E8  00DA               	movwf	??___fladd
  7937  00E9  085A               	movf	??___fladd,w
  7938  00EA  00E4               	movwf	___fladd@bexp
  7939  00EB  0865               	movf	___fladd@grs,w
  7940  00EC  00DA               	movwf	??___fladd
  7941  00ED  085A               	movf	??___fladd,w
  7942  00EE  00E3               	movwf	___fladd@aexp
  7943  00EF  0852               	movf	___fladd@b,w
  7944  00F0  00DA               	movwf	??___fladd
  7945  00F1  085A               	movf	??___fladd,w
  7946  00F2  00E5               	movwf	___fladd@grs
  7947  00F3  0856               	movf	___fladd@a,w
  7948  00F4  00DA               	movwf	??___fladd
  7949  00F5  085A               	movf	??___fladd,w
  7950  00F6  00D2               	movwf	___fladd@b
  7951  00F7  0865               	movf	___fladd@grs,w
  7952  00F8  00DA               	movwf	??___fladd
  7953  00F9  085A               	movf	??___fladd,w
  7954  00FA  00D6               	movwf	___fladd@a
  7955  00FB  0853               	movf	___fladd@b+1,w
  7956  00FC  00DA               	movwf	??___fladd
  7957  00FD  085A               	movf	??___fladd,w
  7958  00FE  00E5               	movwf	___fladd@grs
  7959  00FF  0857               	movf	___fladd@a+1,w
  7960  0100  00DA               	movwf	??___fladd
  7961  0101  085A               	movf	??___fladd,w
  7962  0102  00D3               	movwf	___fladd@b+1
  7963  0103  0865               	movf	___fladd@grs,w
  7964  0104  00DA               	movwf	??___fladd
  7965  0105  085A               	movf	??___fladd,w
  7966  0106  00D7               	movwf	___fladd@a+1
  7967  0107  0854               	movf	___fladd@b+2,w
  7968  0108  00DA               	movwf	??___fladd
  7969  0109  085A               	movf	??___fladd,w
  7970  010A  00E5               	movwf	___fladd@grs
  7971  010B  0858               	movf	___fladd@a+2,w
  7972  010C  00DA               	movwf	??___fladd
  7973  010D  085A               	movf	??___fladd,w
  7974  010E  00D4               	movwf	___fladd@b+2
  7975  010F  0865               	movf	___fladd@grs,w
  7976  0110  00DA               	movwf	??___fladd
  7977  0111  085A               	movf	??___fladd,w
  7978  0112  00D8               	movwf	___fladd@a+2
  7979  0113  0855               	movf	___fladd@b+3,w
  7980  0114  00DA               	movwf	??___fladd
  7981  0115  085A               	movf	??___fladd,w
  7982  0116  00E5               	movwf	___fladd@grs
  7983  0117  0859               	movf	___fladd@a+3,w
  7984  0118  00DA               	movwf	??___fladd
  7985  0119  085A               	movf	??___fladd,w
  7986  011A  00D5               	movwf	___fladd@b+3
  7987  011B  0865               	movf	___fladd@grs,w
  7988  011C  00DA               	movwf	??___fladd
  7989  011D  085A               	movf	??___fladd,w
  7990  011E  00D9               	movwf	___fladd@a+3
  7991  011F                     l2613:	
  7992  011F  01E5               	clrf	___fladd@grs
  7993  0120  0863               	movf	___fladd@aexp,w
  7994  0121  00DA               	movwf	??___fladd
  7995  0122  01DB               	clrf	??___fladd+1
  7996  0123  085B               	movf	??___fladd+1,w
  7997  0124  00DD               	movwf	??___fladd+3
  7998  0125  0864               	movf	___fladd@bexp,w
  7999  0126  025A               	subwf	??___fladd,w
  8000  0127  00DC               	movwf	??___fladd+2
  8001  0128  1C03               	skipc
  8002  0129  03DD               	decf	??___fladd+3,f
  8003  012A  085D               	movf	??___fladd+3,w
  8004  012B  3A80               	xorlw	128
  8005  012C  00FF               	movwf	127
  8006  012D  3080               	movlw	128
  8007  012E  027F               	subwf	127,w
  8008  012F  1D03               	skipz
  8009  0130  2933               	goto	u3685
  8010  0131  301A               	movlw	26
  8011  0132  025C               	subwf	??___fladd+2,w
  8012  0133                     u3685:	
  8013  0133  1C03               	skipc
  8014  0134  296C               	goto	l2631
  8015  0135  1283               	bcf	3,5	;RP0=0, select bank0
  8016  0136  1303               	bcf	3,6	;RP1=0, select bank0
  8017  0137  0855               	movf	___fladd@b+3,w
  8018  0138  0454               	iorwf	___fladd@b+2,w
  8019  0139  0453               	iorwf	___fladd@b+1,w
  8020  013A  0452               	iorwf	___fladd@b,w
  8021  013B  1903               	btfsc	3,2
  8022  013C  293F               	goto	u3690
  8023  013D  3001               	movlw	1
  8024  013E  2940               	goto	u3700
  8025  013F                     u3690:	
  8026  013F  3000               	movlw	0
  8027  0140                     u3700:	
  8028  0140  00DA               	movwf	??___fladd
  8029  0141  085A               	movf	??___fladd,w
  8030  0142  00E5               	movwf	___fladd@grs
  8031  0143  3000               	movlw	0
  8032  0144  00D5               	movwf	___fladd@b+3
  8033  0145  3000               	movlw	0
  8034  0146  00D4               	movwf	___fladd@b+2
  8035  0147  3000               	movlw	0
  8036  0148  00D3               	movwf	___fladd@b+1
  8037  0149  3000               	movlw	0
  8038  014A  00D2               	movwf	___fladd@b
  8039  014B  0863               	movf	___fladd@aexp,w
  8040  014C  00DA               	movwf	??___fladd
  8041  014D  085A               	movf	??___fladd,w
  8042  014E  00E4               	movwf	___fladd@bexp
  8043  014F  2972               	goto	l621
  8044  0150                     l623:	
  8045  0150  1C65               	btfss	___fladd@grs,0
  8046  0151  295B               	goto	l2621
  8047  0152  0865               	movf	___fladd@grs,w
  8048  0153  00DA               	movwf	??___fladd
  8049  0154  1003               	clrc
  8050  0155  0C5A               	rrf	??___fladd,w
  8051  0156  3801               	iorlw	1
  8052  0157  00DB               	movwf	??___fladd+1
  8053  0158  085B               	movf	??___fladd+1,w
  8054  0159  00E5               	movwf	___fladd@grs
  8055  015A  295D               	goto	l2623
  8056  015B                     l2621:	
  8057  015B  1003               	clrc
  8058  015C  0CE5               	rrf	___fladd@grs,f
  8059  015D                     l2623:	
  8060  015D  1852               	btfsc	___fladd@b,0
  8061  015E  17E5               	bsf	___fladd@grs,7
  8062  015F  3001               	movlw	1
  8063  0160  00DA               	movwf	??___fladd
  8064  0161                     u3735:	
  8065  0161  0D55               	rlf	___fladd@b+3,w
  8066  0162  0CD5               	rrf	___fladd@b+3,f
  8067  0163  0CD4               	rrf	___fladd@b+2,f
  8068  0164  0CD3               	rrf	___fladd@b+1,f
  8069  0165  0CD2               	rrf	___fladd@b,f
  8070  0166  0BDA               	decfsz	??___fladd& (0+127),f
  8071  0167  2961               	goto	u3735
  8072  0168  3001               	movlw	1
  8073  0169  00DA               	movwf	??___fladd
  8074  016A  085A               	movf	??___fladd,w
  8075  016B  07E4               	addwf	___fladd@bexp,f
  8076  016C                     l2631:	
  8077  016C  1283               	bcf	3,5	;RP0=0, select bank0
  8078  016D  1303               	bcf	3,6	;RP1=0, select bank0
  8079  016E  0863               	movf	___fladd@aexp,w
  8080  016F  0264               	subwf	___fladd@bexp,w
  8081  0170  1C03               	skipc
  8082  0171  2950               	goto	l623
  8083  0172                     l621:	
  8084  0172  1B62               	btfsc	___fladd@signs,6
  8085  0173  29B3               	goto	l2657
  8086  0174  0864               	movf	___fladd@bexp,w
  8087  0175  1D03               	btfss	3,2
  8088  0176  2980               	goto	l2639
  8089  0177  3000               	movlw	0
  8090  0178  00D5               	movwf	?___fladd+3
  8091  0179  3000               	movlw	0
  8092  017A  00D4               	movwf	?___fladd+2
  8093  017B  3000               	movlw	0
  8094  017C  00D3               	movwf	?___fladd+1
  8095  017D  3000               	movlw	0
  8096  017E  00D2               	movwf	?___fladd
  8097  017F  0008               	return
  8098  0180                     l2639:	
  8099  0180  0856               	movf	___fladd@a,w
  8100  0181  07D2               	addwf	___fladd@b,f
  8101  0182  0857               	movf	___fladd@a+1,w
  8102  0183  1103               	clrz
  8103  0184  1803               	skipnc
  8104  0185  3E01               	addlw	1
  8105  0186  1D03               	btfss	3,2
  8106  0187  07D3               	addwf	___fladd@b+1,f
  8107  0188  0858               	movf	___fladd@a+2,w
  8108  0189  1103               	clrz
  8109  018A  1803               	skipnc
  8110  018B  3E01               	addlw	1
  8111  018C  1D03               	btfss	3,2
  8112  018D  07D4               	addwf	___fladd@b+2,f
  8113  018E  0859               	movf	___fladd@a+3,w
  8114  018F  1103               	clrz
  8115  0190  1803               	skipnc
  8116  0191  3E01               	addlw	1
  8117  0192  1D03               	btfss	3,2
  8118  0193  07D5               	addwf	___fladd@b+3,f
  8119  0194  1C55               	btfss	___fladd@b+3,0
  8120  0195  2A55               	goto	l2691
  8121  0196  1C65               	btfss	___fladd@grs,0
  8122  0197  29A1               	goto	l2647
  8123  0198  0865               	movf	___fladd@grs,w
  8124  0199  00DA               	movwf	??___fladd
  8125  019A  1003               	clrc
  8126  019B  0C5A               	rrf	??___fladd,w
  8127  019C  3801               	iorlw	1
  8128  019D  00DB               	movwf	??___fladd+1
  8129  019E  085B               	movf	??___fladd+1,w
  8130  019F  00E5               	movwf	___fladd@grs
  8131  01A0  29A3               	goto	l2649
  8132  01A1                     l2647:	
  8133  01A1  1003               	clrc
  8134  01A2  0CE5               	rrf	___fladd@grs,f
  8135  01A3                     l2649:	
  8136  01A3  1852               	btfsc	___fladd@b,0
  8137  01A4  17E5               	bsf	___fladd@grs,7
  8138  01A5  3001               	movlw	1
  8139  01A6  00DA               	movwf	??___fladd
  8140  01A7                     u3815:	
  8141  01A7  0D55               	rlf	___fladd@b+3,w
  8142  01A8  0CD5               	rrf	___fladd@b+3,f
  8143  01A9  0CD4               	rrf	___fladd@b+2,f
  8144  01AA  0CD3               	rrf	___fladd@b+1,f
  8145  01AB  0CD2               	rrf	___fladd@b,f
  8146  01AC  0BDA               	decfsz	??___fladd& (0+127),f
  8147  01AD  29A7               	goto	u3815
  8148  01AE  3001               	movlw	1
  8149  01AF  00DA               	movwf	??___fladd
  8150  01B0  085A               	movf	??___fladd,w
  8151  01B1  07E4               	addwf	___fladd@bexp,f
  8152  01B2  2A55               	goto	l2691
  8153  01B3                     l2657:	
  8154  01B3  0855               	movf	___fladd@b+3,w
  8155  01B4  3A80               	xorlw	128
  8156  01B5  00FF               	movwf	127
  8157  01B6  0859               	movf	___fladd@a+3,w
  8158  01B7  3A80               	xorlw	128
  8159  01B8  027F               	subwf	127,w
  8160  01B9  1D03               	skipz
  8161  01BA  29C5               	goto	u3823
  8162  01BB  0858               	movf	___fladd@a+2,w
  8163  01BC  0254               	subwf	___fladd@b+2,w
  8164  01BD  1D03               	skipz
  8165  01BE  29C5               	goto	u3823
  8166  01BF  0857               	movf	___fladd@a+1,w
  8167  01C0  0253               	subwf	___fladd@b+1,w
  8168  01C1  1D03               	skipz
  8169  01C2  29C5               	goto	u3823
  8170  01C3  0856               	movf	___fladd@a,w
  8171  01C4  0252               	subwf	___fladd@b,w
  8172  01C5                     u3823:	
  8173  01C5  1803               	skipnc
  8174  01C6  2A1D               	goto	l2667
  8175  01C7  30FF               	movlw	255
  8176  01C8  00DA               	movwf	??___fladd
  8177  01C9  30FF               	movlw	255
  8178  01CA  00DB               	movwf	??___fladd+1
  8179  01CB  30FF               	movlw	255
  8180  01CC  00DC               	movwf	??___fladd+2
  8181  01CD  30FF               	movlw	255
  8182  01CE  00DD               	movwf	??___fladd+3
  8183  01CF  0856               	movf	___fladd@a,w
  8184  01D0  00DE               	movwf	??___fladd+4
  8185  01D1  0857               	movf	___fladd@a+1,w
  8186  01D2  00DF               	movwf	??___fladd+5
  8187  01D3  0858               	movf	___fladd@a+2,w
  8188  01D4  00E0               	movwf	??___fladd+6
  8189  01D5  0859               	movf	___fladd@a+3,w
  8190  01D6  00E1               	movwf	??___fladd+7
  8191  01D7  0852               	movf	___fladd@b,w
  8192  01D8  02DE               	subwf	??___fladd+4,f
  8193  01D9  0853               	movf	___fladd@b+1,w
  8194  01DA  1C03               	skipc
  8195  01DB  0F53               	incfsz	___fladd@b+1,w
  8196  01DC  29DE               	goto	u3831
  8197  01DD  29DF               	goto	u3832
  8198  01DE                     u3831:	
  8199  01DE  02DF               	subwf	??___fladd+5,f
  8200  01DF                     u3832:	
  8201  01DF  0854               	movf	___fladd@b+2,w
  8202  01E0  1C03               	skipc
  8203  01E1  0F54               	incfsz	___fladd@b+2,w
  8204  01E2  29E4               	goto	u3833
  8205  01E3  29E5               	goto	u3834
  8206  01E4                     u3833:	
  8207  01E4  02E0               	subwf	??___fladd+6,f
  8208  01E5                     u3834:	
  8209  01E5  0855               	movf	___fladd@b+3,w
  8210  01E6  1C03               	skipc
  8211  01E7  0F55               	incfsz	___fladd@b+3,w
  8212  01E8  29EA               	goto	u3835
  8213  01E9  29EB               	goto	u3836
  8214  01EA                     u3835:	
  8215  01EA  02E1               	subwf	??___fladd+7,f
  8216  01EB                     u3836:	
  8217  01EB  085E               	movf	??___fladd+4,w
  8218  01EC  07DA               	addwf	??___fladd,f
  8219  01ED  085F               	movf	??___fladd+5,w
  8220  01EE  1803               	skipnc
  8221  01EF  0F5F               	incfsz	??___fladd+5,w
  8222  01F0  29F2               	goto	u3840
  8223  01F1  29F3               	goto	u3841
  8224  01F2                     u3840:	
  8225  01F2  07DB               	addwf	??___fladd+1,f
  8226  01F3                     u3841:	
  8227  01F3  0860               	movf	??___fladd+6,w
  8228  01F4  1803               	skipnc
  8229  01F5  0F60               	incfsz	??___fladd+6,w
  8230  01F6  29F8               	goto	u3842
  8231  01F7  29F9               	goto	u3843
  8232  01F8                     u3842:	
  8233  01F8  07DC               	addwf	??___fladd+2,f
  8234  01F9                     u3843:	
  8235  01F9  0861               	movf	??___fladd+7,w
  8236  01FA  1803               	skipnc
  8237  01FB  0A61               	incf	??___fladd+7,w
  8238  01FC  07DD               	addwf	??___fladd+3,f
  8239  01FD  085D               	movf	??___fladd+3,w
  8240  01FE  00D5               	movwf	___fladd@b+3
  8241  01FF  085C               	movf	??___fladd+2,w
  8242  0200  00D4               	movwf	___fladd@b+2
  8243  0201  085B               	movf	??___fladd+1,w
  8244  0202  00D3               	movwf	___fladd@b+1
  8245  0203  085A               	movf	??___fladd,w
  8246  0204  00D2               	movwf	___fladd@b
  8247  0205  3080               	movlw	128
  8248  0206  00DA               	movwf	??___fladd
  8249  0207  085A               	movf	??___fladd,w
  8250  0208  06E2               	xorwf	___fladd@signs,f
  8251  0209  09E5               	comf	___fladd@grs,f
  8252  020A  0AE5               	incf	___fladd@grs,f
  8253  020B  0865               	movf	___fladd@grs,w
  8254  020C  1D03               	btfss	3,2
  8255  020D  2A2B               	goto	l638
  8256  020E  3001               	movlw	1
  8257  020F  07D2               	addwf	___fladd@b,f
  8258  0210  3000               	movlw	0
  8259  0211  1803               	skipnc
  8260  0212  3001               	movlw	1
  8261  0213  07D3               	addwf	___fladd@b+1,f
  8262  0214  3000               	movlw	0
  8263  0215  1803               	skipnc
  8264  0216  3001               	movlw	1
  8265  0217  07D4               	addwf	___fladd@b+2,f
  8266  0218  3000               	movlw	0
  8267  0219  1803               	skipnc
  8268  021A  3001               	movlw	1
  8269  021B  07D5               	addwf	___fladd@b+3,f
  8270  021C  2A2B               	goto	l638
  8271  021D                     l2667:	
  8272  021D  0856               	movf	___fladd@a,w
  8273  021E  02D2               	subwf	___fladd@b,f
  8274  021F  0857               	movf	___fladd@a+1,w
  8275  0220  1C03               	skipc
  8276  0221  0F57               	incfsz	___fladd@a+1,w
  8277  0222  02D3               	subwf	___fladd@b+1,f
  8278  0223  0858               	movf	___fladd@a+2,w
  8279  0224  1C03               	skipc
  8280  0225  0F58               	incfsz	___fladd@a+2,w
  8281  0226  02D4               	subwf	___fladd@b+2,f
  8282  0227  0859               	movf	___fladd@a+3,w
  8283  0228  1C03               	skipc
  8284  0229  0F59               	incfsz	___fladd@a+3,w
  8285  022A  02D5               	subwf	___fladd@b+3,f
  8286  022B                     l638:	
  8287  022B  0855               	movf	___fladd@b+3,w
  8288  022C  0454               	iorwf	___fladd@b+2,w
  8289  022D  0453               	iorwf	___fladd@b+1,w
  8290  022E  0452               	iorwf	___fladd@b,w
  8291  022F  1D03               	skipz
  8292  0230  2A53               	goto	l2689
  8293  0231  0865               	movf	___fladd@grs,w
  8294  0232  1D03               	btfss	3,2
  8295  0233  2A53               	goto	l2689
  8296  0234  3000               	movlw	0
  8297  0235  00D5               	movwf	?___fladd+3
  8298  0236  3000               	movlw	0
  8299  0237  00D4               	movwf	?___fladd+2
  8300  0238  3000               	movlw	0
  8301  0239  00D3               	movwf	?___fladd+1
  8302  023A  3000               	movlw	0
  8303  023B  00D2               	movwf	?___fladd
  8304  023C  0008               	return
  8305  023D                     l2675:	
  8306  023D  3001               	movlw	1
  8307  023E  00DA               	movwf	??___fladd
  8308  023F                     u3885:	
  8309  023F  1003               	clrc
  8310  0240  0DD2               	rlf	___fladd@b,f
  8311  0241  0DD3               	rlf	___fladd@b+1,f
  8312  0242  0DD4               	rlf	___fladd@b+2,f
  8313  0243  0DD5               	rlf	___fladd@b+3,f
  8314  0244  0BDA               	decfsz	??___fladd,f
  8315  0245  2A3F               	goto	u3885
  8316  0246  1BE5               	btfsc	___fladd@grs,7
  8317  0247  1452               	bsf	___fladd@b,0
  8318  0248  1C65               	btfss	___fladd@grs,0
  8319  0249  2A4C               	goto	l2683
  8320  024A  1403               	setc
  8321  024B  2A4D               	goto	L9
  8322  024C                     l2683:	
  8323  024C  1003               	clrc
  8324  024D                     L9:	
  8325  024D  0DE5               	rlf	___fladd@grs,f
  8326  024E  0864               	movf	___fladd@bexp,w
  8327  024F  1903               	btfsc	3,2
  8328  0250  2A53               	goto	l2689
  8329  0251  3001               	movlw	1
  8330  0252  02E4               	subwf	___fladd@bexp,f
  8331  0253                     l2689:	
  8332  0253  1FD4               	btfss	___fladd@b+2,7
  8333  0254  2A3D               	goto	l2675
  8334  0255                     l2691:	
  8335  0255  01E3               	clrf	___fladd@aexp
  8336  0256  1FE5               	btfss	___fladd@grs,7
  8337  0257  2A60               	goto	l2701
  8338  0258  0865               	movf	___fladd@grs,w
  8339  0259  397F               	andlw	127
  8340  025A  1903               	btfsc	3,2
  8341  025B  1852               	btfsc	___fladd@b,0
  8342  025C  2A5E               	goto	l2697
  8343  025D  2A60               	goto	l2701
  8344  025E                     l2697:	
  8345  025E  01E3               	clrf	___fladd@aexp
  8346  025F  0AE3               	incf	___fladd@aexp,f
  8347  0260                     l2701:	
  8348  0260  0863               	movf	___fladd@aexp,w
  8349  0261  1903               	btfsc	3,2
  8350  0262  2A93               	goto	l651
  8351  0263  3001               	movlw	1
  8352  0264  07D2               	addwf	___fladd@b,f
  8353  0265  3000               	movlw	0
  8354  0266  1803               	skipnc
  8355  0267  3001               	movlw	1
  8356  0268  07D3               	addwf	___fladd@b+1,f
  8357  0269  3000               	movlw	0
  8358  026A  1803               	skipnc
  8359  026B  3001               	movlw	1
  8360  026C  07D4               	addwf	___fladd@b+2,f
  8361  026D  3000               	movlw	0
  8362  026E  1803               	skipnc
  8363  026F  3001               	movlw	1
  8364  0270  07D5               	addwf	___fladd@b+3,f
  8365  0271  1C55               	btfss	___fladd@b+3,0
  8366  0272  2A93               	goto	l651
  8367  0273  0852               	movf	___fladd@b,w
  8368  0274  00DA               	movwf	??___fladd
  8369  0275  0853               	movf	___fladd@b+1,w
  8370  0276  00DB               	movwf	??___fladd+1
  8371  0277  0854               	movf	___fladd@b+2,w
  8372  0278  00DC               	movwf	??___fladd+2
  8373  0279  0855               	movf	___fladd@b+3,w
  8374  027A  00DD               	movwf	??___fladd+3
  8375  027B  3001               	movlw	1
  8376  027C  00DE               	movwf	??___fladd+4
  8377  027D                     u3985:	
  8378  027D  0D5D               	rlf	??___fladd+3,w
  8379  027E  0CDD               	rrf	??___fladd+3,f
  8380  027F  0CDC               	rrf	??___fladd+2,f
  8381  0280  0CDB               	rrf	??___fladd+1,f
  8382  0281  0CDA               	rrf	??___fladd,f
  8383  0282  0BDE               	decfsz	??___fladd+4,f
  8384  0283  2A7D               	goto	u3985
  8385  0284  085D               	movf	??___fladd+3,w
  8386  0285  00D5               	movwf	___fladd@b+3
  8387  0286  085C               	movf	??___fladd+2,w
  8388  0287  00D4               	movwf	___fladd@b+2
  8389  0288  085B               	movf	??___fladd+1,w
  8390  0289  00D3               	movwf	___fladd@b+1
  8391  028A  085A               	movf	??___fladd,w
  8392  028B  00D2               	movwf	___fladd@b
  8393  028C  0A64               	incf	___fladd@bexp,w
  8394  028D  1903               	btfsc	3,2
  8395  028E  2A93               	goto	l651
  8396  028F  3001               	movlw	1
  8397  0290  00DA               	movwf	??___fladd
  8398  0291  085A               	movf	??___fladd,w
  8399  0292  07E4               	addwf	___fladd@bexp,f
  8400  0293                     l651:	
  8401  0293  0A64               	incf	___fladd@bexp,w
  8402  0294  1D03               	btfss	3,2
  8403  0295  0864               	movf	___fladd@bexp,w
  8404  0296  1D03               	btfss	3,2
  8405  0297  2AA3               	goto	l2719
  8406  0298  3000               	movlw	0
  8407  0299  00D5               	movwf	___fladd@b+3
  8408  029A  3000               	movlw	0
  8409  029B  00D4               	movwf	___fladd@b+2
  8410  029C  3000               	movlw	0
  8411  029D  00D3               	movwf	___fladd@b+1
  8412  029E  3000               	movlw	0
  8413  029F  00D2               	movwf	___fladd@b
  8414  02A0  0864               	movf	___fladd@bexp,w
  8415  02A1  1903               	btfsc	3,2
  8416  02A2  01E2               	clrf	___fladd@signs
  8417  02A3                     l2719:	
  8418  02A3  1C64               	btfss	___fladd@bexp,0
  8419  02A4  2AA7               	goto	l2723
  8420  02A5  17D4               	bsf	___fladd@b+2,7
  8421  02A6  2AAB               	goto	l659
  8422  02A7                     l2723:	
  8423  02A7  307F               	movlw	127
  8424  02A8  00DA               	movwf	??___fladd
  8425  02A9  085A               	movf	??___fladd,w
  8426  02AA  05D4               	andwf	___fladd@b+2,f
  8427  02AB                     l659:	
  8428  02AB  0864               	movf	___fladd@bexp,w
  8429  02AC  00DA               	movwf	??___fladd
  8430  02AD  1003               	clrc
  8431  02AE  0C5A               	rrf	??___fladd,w
  8432  02AF  00DB               	movwf	??___fladd+1
  8433  02B0  085B               	movf	??___fladd+1,w
  8434  02B1  00D5               	movwf	___fladd@b+3
  8435  02B2  1FE2               	btfss	___fladd@signs,7
  8436  02B3  0008               	return
  8437  02B4  17D5               	bsf	___fladd@b+3,7
  8438  02B5  0008               	return
  8439  02B6                     __end_of___fladd:	
  8440                           
  8441                           	psect	text24
  8442  1B1D                     __ptext24:	
  8443 ;; *************** function ___flneg *****************
  8444 ;; Defined at:
  8445 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;  f1              4    0[COMMON] unsigned char 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  4    0[COMMON] unsigned char 
  8452 ;; Registers used:
  8453 ;;		wreg
  8454 ;; Tracked objects:
  8455 ;;		On entry : 300/100
  8456 ;;		On exit  : 300/100
  8457 ;;		Unchanged: 300/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8459 ;;      Params:         4       0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0
  8462 ;;      Totals:         4       0       0       0       0
  8463 ;;Total ram usage:        4 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_sprintf
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           
  8473                           ;psect for function ___flneg
  8474  1B1D                     ___flneg:	
  8475                           
  8476                           ;incstack = 0
  8477                           ; Regs used in ___flneg: [wreg]
  8478  1B1D  0873               	movf	___flneg@f1+3,w
  8479  1B1E  0472               	iorwf	___flneg@f1+2,w
  8480  1B1F  0471               	iorwf	___flneg@f1+1,w
  8481  1B20  0470               	iorwf	___flneg@f1,w
  8482  1B21  1903               	skipnz
  8483  1B22  0008               	return
  8484  1B23  3080               	movlw	128
  8485  1B24  06F3               	xorwf	___flneg@f1+3,f
  8486  1B25  0008               	return
  8487  1B26                     __end_of___flneg:	
  8488                           
  8489                           	psect	text25
  8490  1F6D                     __ptext25:	
  8491 ;; *************** function ___flge *****************
  8492 ;; Defined at:
  8493 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  ff1             4    0[COMMON] unsigned char 
  8496 ;;  ff2             4    4[COMMON] unsigned char 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;		None               void
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0
  8503 ;; Tracked objects:
  8504 ;;		On entry : 300/100
  8505 ;;		On exit  : 300/100
  8506 ;;		Unchanged: 300/0
  8507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8508 ;;      Params:         8       0       0       0       0
  8509 ;;      Locals:         0       0       0       0       0
  8510 ;;      Temps:          4       0       0       0       0
  8511 ;;      Totals:        12       0       0       0       0
  8512 ;;Total ram usage:       12 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_sprintf
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           
  8522                           ;psect for function ___flge
  8523  1F6D                     ___flge:	
  8524                           
  8525                           ;incstack = 0
  8526                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8527  1F6D  3000               	movlw	0
  8528  1F6E  0570               	andwf	___flge@ff1,w
  8529  1F6F  00F8               	movwf	??___flge
  8530  1F70  3000               	movlw	0
  8531  1F71  0571               	andwf	___flge@ff1+1,w
  8532  1F72  00F9               	movwf	??___flge+1
  8533  1F73  3080               	movlw	128
  8534  1F74  0572               	andwf	___flge@ff1+2,w
  8535  1F75  00FA               	movwf	??___flge+2
  8536  1F76  307F               	movlw	127
  8537  1F77  0573               	andwf	___flge@ff1+3,w
  8538  1F78  00FB               	movwf	??___flge+3
  8539  1F79  087B               	movf	??___flge+3,w
  8540  1F7A  047A               	iorwf	??___flge+2,w
  8541  1F7B  0479               	iorwf	??___flge+1,w
  8542  1F7C  0478               	iorwf	??___flge,w
  8543  1F7D  1D03               	skipz
  8544  1F7E  2F87               	goto	l481
  8545  1F7F  3000               	movlw	0
  8546  1F80  00F3               	movwf	___flge@ff1+3
  8547  1F81  3000               	movlw	0
  8548  1F82  00F2               	movwf	___flge@ff1+2
  8549  1F83  3000               	movlw	0
  8550  1F84  00F1               	movwf	___flge@ff1+1
  8551  1F85  3000               	movlw	0
  8552  1F86  00F0               	movwf	___flge@ff1
  8553  1F87                     l481:	
  8554  1F87  3000               	movlw	0
  8555  1F88  0574               	andwf	___flge@ff2,w
  8556  1F89  00F8               	movwf	??___flge
  8557  1F8A  3000               	movlw	0
  8558  1F8B  0575               	andwf	___flge@ff2+1,w
  8559  1F8C  00F9               	movwf	??___flge+1
  8560  1F8D  3080               	movlw	128
  8561  1F8E  0576               	andwf	___flge@ff2+2,w
  8562  1F8F  00FA               	movwf	??___flge+2
  8563  1F90  307F               	movlw	127
  8564  1F91  0577               	andwf	___flge@ff2+3,w
  8565  1F92  00FB               	movwf	??___flge+3
  8566  1F93  087B               	movf	??___flge+3,w
  8567  1F94  047A               	iorwf	??___flge+2,w
  8568  1F95  0479               	iorwf	??___flge+1,w
  8569  1F96  0478               	iorwf	??___flge,w
  8570  1F97  1D03               	skipz
  8571  1F98  2FA1               	goto	l3119
  8572  1F99  3000               	movlw	0
  8573  1F9A  00F7               	movwf	___flge@ff2+3
  8574  1F9B  3000               	movlw	0
  8575  1F9C  00F6               	movwf	___flge@ff2+2
  8576  1F9D  3000               	movlw	0
  8577  1F9E  00F5               	movwf	___flge@ff2+1
  8578  1F9F  3000               	movlw	0
  8579  1FA0  00F4               	movwf	___flge@ff2
  8580  1FA1                     l3119:	
  8581  1FA1  1FF3               	btfss	___flge@ff1+3,7
  8582  1FA2  2FC7               	goto	l3123
  8583  1FA3  3000               	movlw	0
  8584  1FA4  00F8               	movwf	??___flge
  8585  1FA5  3000               	movlw	0
  8586  1FA6  00F9               	movwf	??___flge+1
  8587  1FA7  3000               	movlw	0
  8588  1FA8  00FA               	movwf	??___flge+2
  8589  1FA9  3080               	movlw	128
  8590  1FAA  00FB               	movwf	??___flge+3
  8591  1FAB  0870               	movf	___flge@ff1,w
  8592  1FAC  02F8               	subwf	??___flge,f
  8593  1FAD  0871               	movf	___flge@ff1+1,w
  8594  1FAE  1C03               	skipc
  8595  1FAF  0F71               	incfsz	___flge@ff1+1,w
  8596  1FB0  2FB2               	goto	u5121
  8597  1FB1  2FB3               	goto	u5122
  8598  1FB2                     u5121:	
  8599  1FB2  02F9               	subwf	??___flge+1,f
  8600  1FB3                     u5122:	
  8601  1FB3  0872               	movf	___flge@ff1+2,w
  8602  1FB4  1C03               	skipc
  8603  1FB5  0F72               	incfsz	___flge@ff1+2,w
  8604  1FB6  2FB8               	goto	u5123
  8605  1FB7  2FB9               	goto	u5124
  8606  1FB8                     u5123:	
  8607  1FB8  02FA               	subwf	??___flge+2,f
  8608  1FB9                     u5124:	
  8609  1FB9  0873               	movf	___flge@ff1+3,w
  8610  1FBA  1C03               	skipc
  8611  1FBB  0F73               	incfsz	___flge@ff1+3,w
  8612  1FBC  2FBE               	goto	u5125
  8613  1FBD  2FBF               	goto	u5126
  8614  1FBE                     u5125:	
  8615  1FBE  02FB               	subwf	??___flge+3,f
  8616  1FBF                     u5126:	
  8617  1FBF  087B               	movf	??___flge+3,w
  8618  1FC0  00F3               	movwf	___flge@ff1+3
  8619  1FC1  087A               	movf	??___flge+2,w
  8620  1FC2  00F2               	movwf	___flge@ff1+2
  8621  1FC3  0879               	movf	??___flge+1,w
  8622  1FC4  00F1               	movwf	___flge@ff1+1
  8623  1FC5  0878               	movf	??___flge,w
  8624  1FC6  00F0               	movwf	___flge@ff1
  8625  1FC7                     l3123:	
  8626  1FC7  1FF7               	btfss	___flge@ff2+3,7
  8627  1FC8  2FED               	goto	l484
  8628  1FC9  3000               	movlw	0
  8629  1FCA  00F8               	movwf	??___flge
  8630  1FCB  3000               	movlw	0
  8631  1FCC  00F9               	movwf	??___flge+1
  8632  1FCD  3000               	movlw	0
  8633  1FCE  00FA               	movwf	??___flge+2
  8634  1FCF  3080               	movlw	128
  8635  1FD0  00FB               	movwf	??___flge+3
  8636  1FD1  0874               	movf	___flge@ff2,w
  8637  1FD2  02F8               	subwf	??___flge,f
  8638  1FD3  0875               	movf	___flge@ff2+1,w
  8639  1FD4  1C03               	skipc
  8640  1FD5  0F75               	incfsz	___flge@ff2+1,w
  8641  1FD6  2FD8               	goto	u5141
  8642  1FD7  2FD9               	goto	u5142
  8643  1FD8                     u5141:	
  8644  1FD8  02F9               	subwf	??___flge+1,f
  8645  1FD9                     u5142:	
  8646  1FD9  0876               	movf	___flge@ff2+2,w
  8647  1FDA  1C03               	skipc
  8648  1FDB  0F76               	incfsz	___flge@ff2+2,w
  8649  1FDC  2FDE               	goto	u5143
  8650  1FDD  2FDF               	goto	u5144
  8651  1FDE                     u5143:	
  8652  1FDE  02FA               	subwf	??___flge+2,f
  8653  1FDF                     u5144:	
  8654  1FDF  0877               	movf	___flge@ff2+3,w
  8655  1FE0  1C03               	skipc
  8656  1FE1  0F77               	incfsz	___flge@ff2+3,w
  8657  1FE2  2FE4               	goto	u5145
  8658  1FE3  2FE5               	goto	u5146
  8659  1FE4                     u5145:	
  8660  1FE4  02FB               	subwf	??___flge+3,f
  8661  1FE5                     u5146:	
  8662  1FE5  087B               	movf	??___flge+3,w
  8663  1FE6  00F7               	movwf	___flge@ff2+3
  8664  1FE7  087A               	movf	??___flge+2,w
  8665  1FE8  00F6               	movwf	___flge@ff2+2
  8666  1FE9  0879               	movf	??___flge+1,w
  8667  1FEA  00F5               	movwf	___flge@ff2+1
  8668  1FEB  0878               	movf	??___flge,w
  8669  1FEC  00F4               	movwf	___flge@ff2
  8670  1FED                     l484:	
  8671  1FED  3080               	movlw	128
  8672  1FEE  06F3               	xorwf	___flge@ff1+3,f
  8673  1FEF  3080               	movlw	128
  8674  1FF0  06F7               	xorwf	___flge@ff2+3,f
  8675  1FF1  0877               	movf	___flge@ff2+3,w
  8676  1FF2  0273               	subwf	___flge@ff1+3,w
  8677  1FF3  1D03               	skipz
  8678  1FF4  0008               	return
  8679  1FF5  0876               	movf	___flge@ff2+2,w
  8680  1FF6  0272               	subwf	___flge@ff1+2,w
  8681  1FF7  1D03               	skipz
  8682  1FF8  0008               	return
  8683  1FF9  0875               	movf	___flge@ff2+1,w
  8684  1FFA  0271               	subwf	___flge@ff1+1,w
  8685  1FFB  1D03               	skipz
  8686  1FFC  0008               	return
  8687  1FFD  0874               	movf	___flge@ff2,w
  8688  1FFE  0270               	subwf	___flge@ff1,w
  8689  1FFF  0008               	return
  8690  2000                     __end_of___flge:	
  8691                           
  8692                           	psect	text26
  8693  1D28                     __ptext26:	
  8694 ;; *************** function ___fleq *****************
  8695 ;; Defined at:
  8696 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  ff1             4    0[COMMON] unsigned char 
  8699 ;;  ff2             4    4[COMMON] unsigned char 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;		None
  8702 ;; Return value:  Size  Location     Type
  8703 ;;		None               void
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0
  8706 ;; Tracked objects:
  8707 ;;		On entry : 300/100
  8708 ;;		On exit  : 300/100
  8709 ;;		Unchanged: 300/0
  8710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8711 ;;      Params:         8       0       0       0       0
  8712 ;;      Locals:         0       0       0       0       0
  8713 ;;      Temps:          4       0       0       0       0
  8714 ;;      Totals:        12       0       0       0       0
  8715 ;;Total ram usage:       12 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; This function calls:
  8718 ;;		Nothing
  8719 ;; This function is called by:
  8720 ;;		_sprintf
  8721 ;; This function uses a non-reentrant model
  8722 ;;
  8723                           
  8724                           
  8725                           ;psect for function ___fleq
  8726  1D28                     ___fleq:	
  8727                           
  8728                           ;incstack = 0
  8729                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8730  1D28  3000               	movlw	0
  8731  1D29  0570               	andwf	___fleq@ff1,w
  8732  1D2A  00F8               	movwf	??___fleq
  8733  1D2B  3000               	movlw	0
  8734  1D2C  0571               	andwf	___fleq@ff1+1,w
  8735  1D2D  00F9               	movwf	??___fleq+1
  8736  1D2E  3080               	movlw	128
  8737  1D2F  0572               	andwf	___fleq@ff1+2,w
  8738  1D30  00FA               	movwf	??___fleq+2
  8739  1D31  307F               	movlw	127
  8740  1D32  0573               	andwf	___fleq@ff1+3,w
  8741  1D33  00FB               	movwf	??___fleq+3
  8742  1D34  087B               	movf	??___fleq+3,w
  8743  1D35  047A               	iorwf	??___fleq+2,w
  8744  1D36  0479               	iorwf	??___fleq+1,w
  8745  1D37  0478               	iorwf	??___fleq,w
  8746  1D38  1D03               	skipz
  8747  1D39  2D42               	goto	l476
  8748  1D3A  3000               	movlw	0
  8749  1D3B  00F3               	movwf	___fleq@ff1+3
  8750  1D3C  3000               	movlw	0
  8751  1D3D  00F2               	movwf	___fleq@ff1+2
  8752  1D3E  3000               	movlw	0
  8753  1D3F  00F1               	movwf	___fleq@ff1+1
  8754  1D40  3000               	movlw	0
  8755  1D41  00F0               	movwf	___fleq@ff1
  8756  1D42                     l476:	
  8757  1D42  3000               	movlw	0
  8758  1D43  0574               	andwf	___fleq@ff2,w
  8759  1D44  00F8               	movwf	??___fleq
  8760  1D45  3000               	movlw	0
  8761  1D46  0575               	andwf	___fleq@ff2+1,w
  8762  1D47  00F9               	movwf	??___fleq+1
  8763  1D48  3080               	movlw	128
  8764  1D49  0576               	andwf	___fleq@ff2+2,w
  8765  1D4A  00FA               	movwf	??___fleq+2
  8766  1D4B  307F               	movlw	127
  8767  1D4C  0577               	andwf	___fleq@ff2+3,w
  8768  1D4D  00FB               	movwf	??___fleq+3
  8769  1D4E  087B               	movf	??___fleq+3,w
  8770  1D4F  047A               	iorwf	??___fleq+2,w
  8771  1D50  0479               	iorwf	??___fleq+1,w
  8772  1D51  0478               	iorwf	??___fleq,w
  8773  1D52  1D03               	skipz
  8774  1D53  2D5C               	goto	l477
  8775  1D54  3000               	movlw	0
  8776  1D55  00F7               	movwf	___fleq@ff2+3
  8777  1D56  3000               	movlw	0
  8778  1D57  00F6               	movwf	___fleq@ff2+2
  8779  1D58  3000               	movlw	0
  8780  1D59  00F5               	movwf	___fleq@ff2+1
  8781  1D5A  3000               	movlw	0
  8782  1D5B  00F4               	movwf	___fleq@ff2
  8783  1D5C                     l477:	
  8784  1D5C  0877               	movf	___fleq@ff2+3,w
  8785  1D5D  0673               	xorwf	___fleq@ff1+3,w
  8786  1D5E  1D03               	skipz
  8787  1D5F  2D6A               	goto	u5085
  8788  1D60  0876               	movf	___fleq@ff2+2,w
  8789  1D61  0672               	xorwf	___fleq@ff1+2,w
  8790  1D62  1D03               	skipz
  8791  1D63  2D6A               	goto	u5085
  8792  1D64  0875               	movf	___fleq@ff2+1,w
  8793  1D65  0671               	xorwf	___fleq@ff1+1,w
  8794  1D66  1D03               	skipz
  8795  1D67  2D6A               	goto	u5085
  8796  1D68  0874               	movf	___fleq@ff2,w
  8797  1D69  0670               	xorwf	___fleq@ff1,w
  8798  1D6A                     u5085:	
  8799  1D6A  1903               	skipnz
  8800  1D6B  2D6E               	goto	l3109
  8801  1D6C  1003               	clrc
  8802  1D6D  0008               	return
  8803  1D6E                     l3109:	
  8804  1D6E  1403               	setc
  8805  1D6F  0008               	return
  8806  1D70                     __end_of___fleq:	
  8807                           
  8808                           	psect	text27
  8809  1B55                     __ptext27:	
  8810 ;; *************** function _Lcd_Write_Int *****************
  8811 ;; Defined at:
  8812 ;;		line 93 in file "./lcd.h"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;  num             2   60[BANK0 ] int 
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;  buff           17   62[BANK0 ] unsigned char [17]
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 300/0
  8823 ;;		On exit  : 300/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8826 ;;      Params:         0       2       0       0       0
  8827 ;;      Locals:         0      17       0       0       0
  8828 ;;      Temps:          0       0       0       0       0
  8829 ;;      Totals:         0      19       0       0       0
  8830 ;;Total ram usage:       19 bytes
  8831 ;; Hardware stack levels used:    1
  8832 ;; Hardware stack levels required when called:    3
  8833 ;; This function calls:
  8834 ;;		_Lcd_Write_String
  8835 ;;		_itoa
  8836 ;; This function is called by:
  8837 ;;		_main
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           
  8842                           ;psect for function _Lcd_Write_Int
  8843  1B55                     _Lcd_Write_Int:	
  8844                           
  8845                           ;./lcd.h: 94:     char buff[17];;./lcd.h: 95:     itoa(buff,num,10);
  8846                           
  8847                           ;incstack = 0
  8848                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8849  1B55  085D               	movf	Lcd_Write_Int@num+1,w
  8850  1B56  00A5               	movwf	itoa@val+1
  8851  1B57  085C               	movf	Lcd_Write_Int@num,w
  8852  1B58  00A4               	movwf	itoa@val
  8853  1B59  300A               	movlw	10
  8854  1B5A  00A6               	movwf	itoa@base
  8855  1B5B  3000               	movlw	0
  8856  1B5C  00A7               	movwf	itoa@base+1
  8857  1B5D  305E               	movlw	(low (Lcd_Write_Int@buff| 0))& (0+255)
  8858  1B5E  160A  158A  23A5  160A  158A  	fcall	_itoa
  8859                           
  8860                           ;./lcd.h: 96:     Lcd_Write_String(buff);
  8861  1B63  305E               	movlw	(low (Lcd_Write_Int@buff| 0))& (0+255)
  8862  1B64  00F5               	movwf	Lcd_Write_String@a
  8863  1B65  3000               	movlw	0
  8864  1B66  00F6               	movwf	Lcd_Write_String@a+1
  8865  1B67  160A  158A  24EB   	fcall	_Lcd_Write_String
  8866  1B6A  0008               	return
  8867  1B6B                     __end_of_Lcd_Write_Int:	
  8868                           
  8869                           	psect	text28
  8870  1BA5                     __ptext28:	
  8871 ;; *************** function _itoa *****************
  8872 ;; Defined at:
  8873 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  buf             1    wreg     PTR unsigned char 
  8876 ;;		 -> Lcd_Write_Int@buff(17), 
  8877 ;;  val             2    4[BANK0 ] int 
  8878 ;;  base            2    6[BANK0 ] int 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  8881 ;;		 -> Lcd_Write_Int@buff(17), 
  8882 ;;  cp              1    0        PTR unsigned char 
  8883 ;;		 -> Lcd_Write_Int@buff(17), 
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      PTR unsigned char 
  8886 ;; Registers used:
  8887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8888 ;; Tracked objects:
  8889 ;;		On entry : 300/0
  8890 ;;		On exit  : B00/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8893 ;;      Params:         0       4       0       0       0
  8894 ;;      Locals:         0       2       0       0       0
  8895 ;;      Temps:          1       0       0       0       0
  8896 ;;      Totals:         1       6       0       0       0
  8897 ;;Total ram usage:        7 bytes
  8898 ;; Hardware stack levels used:    1
  8899 ;; Hardware stack levels required when called:    2
  8900 ;; This function calls:
  8901 ;;		_utoa
  8902 ;; This function is called by:
  8903 ;;		_Lcd_Write_Int
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           
  8908                           ;psect for function _itoa
  8909  1BA5                     _itoa:	
  8910                           
  8911                           ;incstack = 0
  8912                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8913                           ;itoa@buf stored from wreg
  8914  1BA5  00A9               	movwf	itoa@buf
  8915  1BA6  1FA5               	btfss	itoa@val+1,7
  8916  1BA7  2BB8               	goto	l3305
  8917  1BA8  302D               	movlw	45
  8918  1BA9  00FD               	movwf	??_itoa
  8919  1BAA  0829               	movf	itoa@buf,w
  8920  1BAB  0084               	movwf	4
  8921  1BAC  087D               	movf	??_itoa,w
  8922  1BAD  1383               	bcf	3,7	;select IRP bank0
  8923  1BAE  0080               	movwf	0
  8924  1BAF  3001               	movlw	1
  8925  1BB0  00FD               	movwf	??_itoa
  8926  1BB1  087D               	movf	??_itoa,w
  8927  1BB2  07A9               	addwf	itoa@buf,f
  8928  1BB3  09A4               	comf	itoa@val,f
  8929  1BB4  09A5               	comf	itoa@val+1,f
  8930  1BB5  0AA4               	incf	itoa@val,f
  8931  1BB6  1903               	skipnz
  8932  1BB7  0AA5               	incf	itoa@val+1,f
  8933  1BB8                     l3305:	
  8934  1BB8  0825               	movf	itoa@val+1,w
  8935  1BB9  00F9               	movwf	utoa@val+1
  8936  1BBA  0824               	movf	itoa@val,w
  8937  1BBB  00F8               	movwf	utoa@val
  8938  1BBC  0827               	movf	itoa@base+1,w
  8939  1BBD  00FB               	movwf	utoa@base+1
  8940  1BBE  0826               	movf	itoa@base,w
  8941  1BBF  00FA               	movwf	utoa@base
  8942  1BC0  0829               	movf	itoa@buf,w
  8943  1BC1  160A  158A  2709   	fcall	_utoa
  8944  1BC4  0008               	return
  8945  1BC5                     __end_of_itoa:	
  8946                           
  8947                           	psect	text29
  8948  1F09                     __ptext29:	
  8949 ;; *************** function _utoa *****************
  8950 ;; Defined at:
  8951 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  buf             1    wreg     PTR unsigned char 
  8954 ;;		 -> Lcd_Write_Int@buff(17), 
  8955 ;;  val             2    8[COMMON] unsigned int 
  8956 ;;  base            2   10[COMMON] int 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  8959 ;;		 -> Lcd_Write_Int@buff(17), 
  8960 ;;  v               2    0[BANK0 ] unsigned int 
  8961 ;;  c               1    2[BANK0 ] unsigned char 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      PTR unsigned char 
  8964 ;; Registers used:
  8965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 300/0
  8968 ;;		On exit  : B00/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8971 ;;      Params:         4       0       0       0       0
  8972 ;;      Locals:         0       4       0       0       0
  8973 ;;      Temps:          1       0       0       0       0
  8974 ;;      Totals:         5       4       0       0       0
  8975 ;;Total ram usage:        9 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:    1
  8978 ;; This function calls:
  8979 ;;		___lwdiv
  8980 ;;		___lwmod
  8981 ;; This function is called by:
  8982 ;;		_itoa
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           
  8987                           ;psect for function _utoa
  8988  1F09                     _utoa:	
  8989                           
  8990                           ;incstack = 0
  8991                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8992                           ;utoa@buf stored from wreg
  8993  1F09  00A3               	movwf	utoa@buf
  8994  1F0A  0879               	movf	utoa@val+1,w
  8995  1F0B  00A1               	movwf	utoa@v+1
  8996  1F0C  0878               	movf	utoa@val,w
  8997  1F0D  00A0               	movwf	utoa@v
  8998  1F0E                     l3249:	
  8999  1F0E  087B               	movf	utoa@base+1,w
  9000  1F0F  00F1               	movwf	___lwdiv@divisor+1
  9001  1F10  087A               	movf	utoa@base,w
  9002  1F11  00F0               	movwf	___lwdiv@divisor
  9003  1F12  0821               	movf	utoa@v+1,w
  9004  1F13  00F3               	movwf	___lwdiv@dividend+1
  9005  1F14  0820               	movf	utoa@v,w
  9006  1F15  00F2               	movwf	___lwdiv@dividend
  9007  1F16  160A  158A  24AF  160A  158A  	fcall	___lwdiv
  9008  1F1B  0871               	movf	?___lwdiv+1,w
  9009  1F1C  00A1               	movwf	utoa@v+1
  9010  1F1D  0870               	movf	?___lwdiv,w
  9011  1F1E  00A0               	movwf	utoa@v
  9012  1F1F  3001               	movlw	1
  9013  1F20  00FC               	movwf	??_utoa
  9014  1F21  087C               	movf	??_utoa,w
  9015  1F22  07A3               	addwf	utoa@buf,f
  9016  1F23  0820               	movf	utoa@v,w
  9017  1F24  0421               	iorwf	utoa@v+1,w
  9018  1F25  1D03               	btfss	3,2
  9019  1F26  2F0E               	goto	l3249
  9020  1F27  0823               	movf	utoa@buf,w
  9021  1F28  0084               	movwf	4
  9022  1F29  1383               	bcf	3,7	;select IRP bank0
  9023  1F2A  0180               	clrf	0
  9024  1F2B  3001               	movlw	1
  9025  1F2C  02A3               	subwf	utoa@buf,f
  9026  1F2D                     l3259:	
  9027  1F2D  087B               	movf	utoa@base+1,w
  9028  1F2E  00F1               	movwf	___lwmod@divisor+1
  9029  1F2F  087A               	movf	utoa@base,w
  9030  1F30  00F0               	movwf	___lwmod@divisor
  9031  1F31  0879               	movf	utoa@val+1,w
  9032  1F32  00F3               	movwf	___lwmod@dividend+1
  9033  1F33  0878               	movf	utoa@val,w
  9034  1F34  00F2               	movwf	___lwmod@dividend
  9035  1F35  120A  158A  20B9  160A  158A  	fcall	___lwmod
  9036  1F3A  0870               	movf	?___lwmod,w
  9037  1F3B  00FC               	movwf	??_utoa
  9038  1F3C  087C               	movf	??_utoa,w
  9039  1F3D  00A2               	movwf	utoa@c
  9040  1F3E  087B               	movf	utoa@base+1,w
  9041  1F3F  00F1               	movwf	___lwdiv@divisor+1
  9042  1F40  087A               	movf	utoa@base,w
  9043  1F41  00F0               	movwf	___lwdiv@divisor
  9044  1F42  0879               	movf	utoa@val+1,w
  9045  1F43  00F3               	movwf	___lwdiv@dividend+1
  9046  1F44  0878               	movf	utoa@val,w
  9047  1F45  00F2               	movwf	___lwdiv@dividend
  9048  1F46  160A  158A  24AF  160A  158A  	fcall	___lwdiv
  9049  1F4B  0871               	movf	?___lwdiv+1,w
  9050  1F4C  00F9               	movwf	utoa@val+1
  9051  1F4D  0870               	movf	?___lwdiv,w
  9052  1F4E  00F8               	movwf	utoa@val
  9053  1F4F  300A               	movlw	10
  9054  1F50  0222               	subwf	utoa@c,w
  9055  1F51  1C03               	skipc
  9056  1F52  2F57               	goto	l783
  9057  1F53  3007               	movlw	7
  9058  1F54  00FC               	movwf	??_utoa
  9059  1F55  087C               	movf	??_utoa,w
  9060  1F56  07A2               	addwf	utoa@c,f
  9061  1F57                     l783:	
  9062  1F57  3030               	movlw	48
  9063  1F58  00FC               	movwf	??_utoa
  9064  1F59  087C               	movf	??_utoa,w
  9065  1F5A  07A2               	addwf	utoa@c,f
  9066  1F5B  0822               	movf	utoa@c,w
  9067  1F5C  00FC               	movwf	??_utoa
  9068  1F5D  0823               	movf	utoa@buf,w
  9069  1F5E  0084               	movwf	4
  9070  1F5F  087C               	movf	??_utoa,w
  9071  1F60  1383               	bcf	3,7	;select IRP bank0
  9072  1F61  0080               	movwf	0
  9073  1F62  3001               	movlw	1
  9074  1F63  02A3               	subwf	utoa@buf,f
  9075  1F64  0878               	movf	utoa@val,w
  9076  1F65  0479               	iorwf	utoa@val+1,w
  9077  1F66  1D03               	btfss	3,2
  9078  1F67  2F2D               	goto	l3259
  9079                           
  9080                           ;	Return value of _utoa is never used
  9081  1F68  3001               	movlw	1
  9082  1F69  00FC               	movwf	??_utoa
  9083  1F6A  087C               	movf	??_utoa,w
  9084  1F6B  07A3               	addwf	utoa@buf,f
  9085  1F6C  0008               	return
  9086  1F6D                     __end_of_utoa:	
  9087                           
  9088                           	psect	text30
  9089  08B9                     __ptext30:	
  9090 ;; *************** function ___lwmod *****************
  9091 ;; Defined at:
  9092 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  divisor         2    0[COMMON] unsigned int 
  9095 ;;  dividend        2    2[COMMON] unsigned int 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  counter         1    5[COMMON] unsigned char 
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  2    0[COMMON] unsigned int 
  9100 ;; Registers used:
  9101 ;;		wreg, status,2, status,0
  9102 ;; Tracked objects:
  9103 ;;		On entry : 300/0
  9104 ;;		On exit  : 300/0
  9105 ;;		Unchanged: 300/0
  9106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9107 ;;      Params:         4       0       0       0       0
  9108 ;;      Locals:         1       0       0       0       0
  9109 ;;      Temps:          1       0       0       0       0
  9110 ;;      Totals:         6       0       0       0       0
  9111 ;;Total ram usage:        6 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; This function calls:
  9114 ;;		Nothing
  9115 ;; This function is called by:
  9116 ;;		_utoa
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           
  9121                           ;psect for function ___lwmod
  9122  08B9                     ___lwmod:	
  9123                           
  9124                           ;incstack = 0
  9125                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9126  08B9  0870               	movf	___lwmod@divisor,w
  9127  08BA  0471               	iorwf	___lwmod@divisor+1,w
  9128  08BB  1903               	btfsc	3,2
  9129  08BC  28E6               	goto	l2531
  9130  08BD  01F5               	clrf	___lwmod@counter
  9131  08BE  0AF5               	incf	___lwmod@counter,f
  9132  08BF                     l2521:	
  9133  08BF  1BF1               	btfsc	___lwmod@divisor+1,7
  9134  08C0  28CD               	goto	l2523
  9135  08C1  3001               	movlw	1
  9136  08C2                     u3545:	
  9137  08C2  1003               	clrc
  9138  08C3  0DF0               	rlf	___lwmod@divisor,f
  9139  08C4  0DF1               	rlf	___lwmod@divisor+1,f
  9140  08C5  3EFF               	addlw	-1
  9141  08C6  1D03               	skipz
  9142  08C7  28C2               	goto	u3545
  9143  08C8  3001               	movlw	1
  9144  08C9  00F4               	movwf	??___lwmod
  9145  08CA  0874               	movf	??___lwmod,w
  9146  08CB  07F5               	addwf	___lwmod@counter,f
  9147  08CC  28BF               	goto	l2521
  9148  08CD                     l2523:	
  9149  08CD  0871               	movf	___lwmod@divisor+1,w
  9150  08CE  0273               	subwf	___lwmod@dividend+1,w
  9151  08CF  1D03               	skipz
  9152  08D0  28D3               	goto	u3565
  9153  08D1  0870               	movf	___lwmod@divisor,w
  9154  08D2  0272               	subwf	___lwmod@dividend,w
  9155  08D3                     u3565:	
  9156  08D3  1C03               	skipc
  9157  08D4  28DB               	goto	l2527
  9158  08D5  0870               	movf	___lwmod@divisor,w
  9159  08D6  02F2               	subwf	___lwmod@dividend,f
  9160  08D7  0871               	movf	___lwmod@divisor+1,w
  9161  08D8  1C03               	skipc
  9162  08D9  03F3               	decf	___lwmod@dividend+1,f
  9163  08DA  02F3               	subwf	___lwmod@dividend+1,f
  9164  08DB                     l2527:	
  9165  08DB  3001               	movlw	1
  9166  08DC                     u3575:	
  9167  08DC  1003               	clrc
  9168  08DD  0CF1               	rrf	___lwmod@divisor+1,f
  9169  08DE  0CF0               	rrf	___lwmod@divisor,f
  9170  08DF  3EFF               	addlw	-1
  9171  08E0  1D03               	skipz
  9172  08E1  28DC               	goto	u3575
  9173  08E2  3001               	movlw	1
  9174  08E3  02F5               	subwf	___lwmod@counter,f
  9175  08E4  1D03               	btfss	3,2
  9176  08E5  28CD               	goto	l2523
  9177  08E6                     l2531:	
  9178  08E6  0873               	movf	___lwmod@dividend+1,w
  9179  08E7  00F1               	movwf	?___lwmod+1
  9180  08E8  0872               	movf	___lwmod@dividend,w
  9181  08E9  00F0               	movwf	?___lwmod
  9182  08EA  0008               	return
  9183  08EB                     __end_of___lwmod:	
  9184                           
  9185                           	psect	text31
  9186  1CAF                     __ptext31:	
  9187 ;; *************** function ___lwdiv *****************
  9188 ;; Defined at:
  9189 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  9190 ;; Parameters:    Size  Location     Type
  9191 ;;  divisor         2    0[COMMON] unsigned int 
  9192 ;;  dividend        2    2[COMMON] unsigned int 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  quotient        2    5[COMMON] unsigned int 
  9195 ;;  counter         1    7[COMMON] unsigned char 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  2    0[COMMON] unsigned int 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0
  9200 ;; Tracked objects:
  9201 ;;		On entry : 300/0
  9202 ;;		On exit  : 300/0
  9203 ;;		Unchanged: 300/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9205 ;;      Params:         4       0       0       0       0
  9206 ;;      Locals:         3       0       0       0       0
  9207 ;;      Temps:          1       0       0       0       0
  9208 ;;      Totals:         8       0       0       0       0
  9209 ;;Total ram usage:        8 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		_utoa
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           
  9219                           ;psect for function ___lwdiv
  9220  1CAF                     ___lwdiv:	
  9221                           
  9222                           ;incstack = 0
  9223                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9224  1CAF  01F5               	clrf	___lwdiv@quotient
  9225  1CB0  01F6               	clrf	___lwdiv@quotient+1
  9226  1CB1  0870               	movf	___lwdiv@divisor,w
  9227  1CB2  0471               	iorwf	___lwdiv@divisor+1,w
  9228  1CB3  1903               	btfsc	3,2
  9229  1CB4  2CE6               	goto	l2509
  9230  1CB5  01F7               	clrf	___lwdiv@counter
  9231  1CB6  0AF7               	incf	___lwdiv@counter,f
  9232  1CB7                     l2497:	
  9233  1CB7  1BF1               	btfsc	___lwdiv@divisor+1,7
  9234  1CB8  2CC5               	goto	l2499
  9235  1CB9  3001               	movlw	1
  9236  1CBA                     u3475:	
  9237  1CBA  1003               	clrc
  9238  1CBB  0DF0               	rlf	___lwdiv@divisor,f
  9239  1CBC  0DF1               	rlf	___lwdiv@divisor+1,f
  9240  1CBD  3EFF               	addlw	-1
  9241  1CBE  1D03               	skipz
  9242  1CBF  2CBA               	goto	u3475
  9243  1CC0  3001               	movlw	1
  9244  1CC1  00F4               	movwf	??___lwdiv
  9245  1CC2  0874               	movf	??___lwdiv,w
  9246  1CC3  07F7               	addwf	___lwdiv@counter,f
  9247  1CC4  2CB7               	goto	l2497
  9248  1CC5                     l2499:	
  9249  1CC5  3001               	movlw	1
  9250  1CC6                     u3495:	
  9251  1CC6  1003               	clrc
  9252  1CC7  0DF5               	rlf	___lwdiv@quotient,f
  9253  1CC8  0DF6               	rlf	___lwdiv@quotient+1,f
  9254  1CC9  3EFF               	addlw	-1
  9255  1CCA  1D03               	skipz
  9256  1CCB  2CC6               	goto	u3495
  9257  1CCC  0871               	movf	___lwdiv@divisor+1,w
  9258  1CCD  0273               	subwf	___lwdiv@dividend+1,w
  9259  1CCE  1D03               	skipz
  9260  1CCF  2CD2               	goto	u3505
  9261  1CD0  0870               	movf	___lwdiv@divisor,w
  9262  1CD1  0272               	subwf	___lwdiv@dividend,w
  9263  1CD2                     u3505:	
  9264  1CD2  1C03               	skipc
  9265  1CD3  2CDB               	goto	l2505
  9266  1CD4  0870               	movf	___lwdiv@divisor,w
  9267  1CD5  02F2               	subwf	___lwdiv@dividend,f
  9268  1CD6  0871               	movf	___lwdiv@divisor+1,w
  9269  1CD7  1C03               	skipc
  9270  1CD8  03F3               	decf	___lwdiv@dividend+1,f
  9271  1CD9  02F3               	subwf	___lwdiv@dividend+1,f
  9272  1CDA  1475               	bsf	___lwdiv@quotient,0
  9273  1CDB                     l2505:	
  9274  1CDB  3001               	movlw	1
  9275  1CDC                     u3515:	
  9276  1CDC  1003               	clrc
  9277  1CDD  0CF1               	rrf	___lwdiv@divisor+1,f
  9278  1CDE  0CF0               	rrf	___lwdiv@divisor,f
  9279  1CDF  3EFF               	addlw	-1
  9280  1CE0  1D03               	skipz
  9281  1CE1  2CDC               	goto	u3515
  9282  1CE2  3001               	movlw	1
  9283  1CE3  02F7               	subwf	___lwdiv@counter,f
  9284  1CE4  1D03               	btfss	3,2
  9285  1CE5  2CC5               	goto	l2499
  9286  1CE6                     l2509:	
  9287  1CE6  0876               	movf	___lwdiv@quotient+1,w
  9288  1CE7  00F1               	movwf	?___lwdiv+1
  9289  1CE8  0875               	movf	___lwdiv@quotient,w
  9290  1CE9  00F0               	movwf	?___lwdiv
  9291  1CEA  0008               	return
  9292  1CEB                     __end_of___lwdiv:	
  9293                           
  9294                           	psect	text32
  9295  1CEB                     __ptext32:	
  9296 ;; *************** function _Lcd_Write_String *****************
  9297 ;; Defined at:
  9298 ;;		line 87 in file "./lcd.h"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  a               2    5[COMMON] PTR unsigned char 
  9301 ;;		 -> STR_4(5), STR_3(6), STR_2(5), Lcd_flotante@s(7), 
  9302 ;;		 -> Lcd_Write_Int@buff(17), 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  i               2   10[COMMON] int 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9309 ;; Tracked objects:
  9310 ;;		On entry : 200/100
  9311 ;;		On exit  : 300/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9314 ;;      Params:         2       0       0       0       0
  9315 ;;      Locals:         2       0       0       0       0
  9316 ;;      Temps:          3       0       0       0       0
  9317 ;;      Totals:         7       0       0       0       0
  9318 ;;Total ram usage:        7 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    2
  9321 ;; This function calls:
  9322 ;;		_Lcd_Write_Char
  9323 ;; This function is called by:
  9324 ;;		_Lcd_Write_Int
  9325 ;;		_Lcd_flotante
  9326 ;;		_main
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           
  9331                           ;psect for function _Lcd_Write_String
  9332  1CEB                     _Lcd_Write_String:	
  9333                           
  9334                           ;./lcd.h: 88:  int i;;./lcd.h: 89:  for(i=0;a[i]!='\0';i++)
  9335                           
  9336                           ;incstack = 0
  9337                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9338  1CEB  01FA               	clrf	Lcd_Write_String@i
  9339  1CEC  01FB               	clrf	Lcd_Write_String@i+1
  9340  1CED                     l3293:	
  9341  1CED  087A               	movf	Lcd_Write_String@i,w
  9342  1CEE  0775               	addwf	Lcd_Write_String@a,w
  9343  1CEF  00F8               	movwf	??_Lcd_Write_String+1
  9344  1CF0  0876               	movf	Lcd_Write_String@a+1,w
  9345  1CF1  00F7               	movwf	??_Lcd_Write_String
  9346  1CF2  1803               	skipnc
  9347  1CF3  0AF7               	incf	??_Lcd_Write_String,f
  9348  1CF4  1BFA               	btfsc	Lcd_Write_String@i,7
  9349  1CF5  03F7               	decf	??_Lcd_Write_String,f
  9350  1CF6  0877               	movf	??_Lcd_Write_String,w
  9351  1CF7  00F9               	movwf	??_Lcd_Write_String+2
  9352  1CF8  0879               	movf	??_Lcd_Write_String+2,w
  9353  1CF9  1283               	bcf	3,5	;RP0=0, select bank0
  9354  1CFA  1303               	bcf	3,6	;RP1=0, select bank0
  9355  1CFB  00FF               	movwf	127
  9356  1CFC  0878               	movf	??_Lcd_Write_String+1,w
  9357  1CFD  0084               	movwf	4
  9358  1CFE  120A  158A  2000  160A  158A  	fcall	stringtab
  9359  1D03  3A00               	xorlw	0
  9360  1D04  1903               	btfsc	3,2
  9361  1D05  0008               	return
  9362                           
  9363                           ;./lcd.h: 90:     Lcd_Write_Char(a[i]);
  9364  1D06  087A               	movf	Lcd_Write_String@i,w
  9365  1D07  0775               	addwf	Lcd_Write_String@a,w
  9366  1D08  00F8               	movwf	??_Lcd_Write_String+1
  9367  1D09  0876               	movf	Lcd_Write_String@a+1,w
  9368  1D0A  00F7               	movwf	??_Lcd_Write_String
  9369  1D0B  1803               	skipnc
  9370  1D0C  0AF7               	incf	??_Lcd_Write_String,f
  9371  1D0D  1BFA               	btfsc	Lcd_Write_String@i,7
  9372  1D0E  03F7               	decf	??_Lcd_Write_String,f
  9373  1D0F  0877               	movf	??_Lcd_Write_String,w
  9374  1D10  00F9               	movwf	??_Lcd_Write_String+2
  9375  1D11  0879               	movf	??_Lcd_Write_String+2,w
  9376  1D12  1283               	bcf	3,5	;RP0=0, select bank0
  9377  1D13  1303               	bcf	3,6	;RP1=0, select bank0
  9378  1D14  00FF               	movwf	127
  9379  1D15  0878               	movf	??_Lcd_Write_String+1,w
  9380  1D16  0084               	movwf	4
  9381  1D17  120A  158A  2000  160A  158A  	fcall	stringtab
  9382  1D1C  160A  158A  244D  160A  158A  	fcall	_Lcd_Write_Char
  9383  1D21  3001               	movlw	1
  9384  1D22  07FA               	addwf	Lcd_Write_String@i,f
  9385  1D23  1803               	skipnc
  9386  1D24  0AFB               	incf	Lcd_Write_String@i+1,f
  9387  1D25  3000               	movlw	0
  9388  1D26  07FB               	addwf	Lcd_Write_String@i+1,f
  9389  1D27  2CED               	goto	l3293
  9390  1D28                     __end_of_Lcd_Write_String:	
  9391                           
  9392                           	psect	text33
  9393  1C4D                     __ptext33:	
  9394 ;; *************** function _Lcd_Write_Char *****************
  9395 ;; Defined at:
  9396 ;;		line 73 in file "./lcd.h"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;  a               1    wreg     unsigned char 
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;  a               1    4[COMMON] unsigned char 
  9401 ;;  y               1    3[COMMON] unsigned char 
  9402 ;;  temp            1    2[COMMON] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2, status,0, pclath, cstack
  9407 ;; Tracked objects:
  9408 ;;		On entry : 300/0
  9409 ;;		On exit  : 300/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9412 ;;      Params:         0       0       0       0       0
  9413 ;;      Locals:         3       0       0       0       0
  9414 ;;      Temps:          1       0       0       0       0
  9415 ;;      Totals:         4       0       0       0       0
  9416 ;;Total ram usage:        4 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:    1
  9419 ;; This function calls:
  9420 ;;		_Lcd_Port
  9421 ;; This function is called by:
  9422 ;;		_Lcd_Write_String
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           
  9427                           ;psect for function _Lcd_Write_Char
  9428  1C4D                     _Lcd_Write_Char:	
  9429                           
  9430                           ;incstack = 0
  9431                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9432                           ;Lcd_Write_Char@a stored from wreg
  9433  1C4D  00F4               	movwf	Lcd_Write_Char@a
  9434                           
  9435                           ;./lcd.h: 74:    char temp,y;;./lcd.h: 75:    temp = a&0x0F;
  9436  1C4E  0874               	movf	Lcd_Write_Char@a,w
  9437  1C4F  390F               	andlw	15
  9438  1C50  00F1               	movwf	??_Lcd_Write_Char
  9439  1C51  0871               	movf	??_Lcd_Write_Char,w
  9440  1C52  00F2               	movwf	Lcd_Write_Char@temp
  9441                           
  9442                           ;./lcd.h: 76:    y = a&0xF0;
  9443  1C53  0874               	movf	Lcd_Write_Char@a,w
  9444  1C54  39F0               	andlw	240
  9445  1C55  00F1               	movwf	??_Lcd_Write_Char
  9446  1C56  0871               	movf	??_Lcd_Write_Char,w
  9447  1C57  00F3               	movwf	Lcd_Write_Char@y
  9448                           
  9449                           ;./lcd.h: 77:    RD2 = 1;
  9450  1C58  1508               	bsf	8,2	;volatile
  9451                           
  9452                           ;./lcd.h: 78:    Lcd_Port(y>>4);
  9453  1C59  0873               	movf	Lcd_Write_Char@y,w
  9454  1C5A  00F1               	movwf	??_Lcd_Write_Char
  9455  1C5B  3004               	movlw	4
  9456  1C5C                     u4415:	
  9457  1C5C  1003               	clrc
  9458  1C5D  0CF1               	rrf	??_Lcd_Write_Char,f
  9459  1C5E  3EFF               	addlw	-1
  9460  1C5F  1D03               	skipz
  9461  1C60  2C5C               	goto	u4415
  9462  1C61  0871               	movf	??_Lcd_Write_Char,w
  9463  1C62  160A  158A  233F  160A  158A  	fcall	_Lcd_Port
  9464                           
  9465                           ;./lcd.h: 79:    RD3 = 1;
  9466  1C67  1588               	bsf	8,3	;volatile
  9467                           
  9468                           ;./lcd.h: 80:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9469  1C68  300D               	movlw	13
  9470  1C69  00F1               	movwf	??_Lcd_Write_Char
  9471  1C6A                     u6267:	
  9472  1C6A  0BF1               	decfsz	??_Lcd_Write_Char,f
  9473  1C6B  2C6A               	goto	u6267
  9474                           
  9475                           ;./lcd.h: 81:    RD3 = 0;
  9476  1C6C  1283               	bcf	3,5	;RP0=0, select bank0
  9477  1C6D  1303               	bcf	3,6	;RP1=0, select bank0
  9478  1C6E  1188               	bcf	8,3	;volatile
  9479                           
  9480                           ;./lcd.h: 82:    Lcd_Port(temp);
  9481  1C6F  0872               	movf	Lcd_Write_Char@temp,w
  9482  1C70  160A  158A  233F  160A  158A  	fcall	_Lcd_Port
  9483                           
  9484                           ;./lcd.h: 83:    RD3 = 1;
  9485  1C75  1588               	bsf	8,3	;volatile
  9486                           
  9487                           ;./lcd.h: 84:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9488  1C76  300D               	movlw	13
  9489  1C77  00F1               	movwf	??_Lcd_Write_Char
  9490  1C78                     u6277:	
  9491  1C78  0BF1               	decfsz	??_Lcd_Write_Char,f
  9492  1C79  2C78               	goto	u6277
  9493                           
  9494                           ;./lcd.h: 85:    RD3 = 0;
  9495  1C7A  1283               	bcf	3,5	;RP0=0, select bank0
  9496  1C7B  1303               	bcf	3,6	;RP1=0, select bank0
  9497  1C7C  1188               	bcf	8,3	;volatile
  9498  1C7D  0008               	return
  9499  1C7E                     __end_of_Lcd_Write_Char:	
  9500                           
  9501                           	psect	text34
  9502  1D70                     __ptext34:	
  9503 ;; *************** function _Lcd_Set_Cursor *****************
  9504 ;; Defined at:
  9505 ;;		line 37 in file "./lcd.h"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  a               1    wreg     unsigned char 
  9508 ;;  b               1    4[COMMON] unsigned char 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  a               1    7[COMMON] unsigned char 
  9511 ;;  temp            1   10[COMMON] unsigned char 
  9512 ;;  y               1    9[COMMON] unsigned char 
  9513 ;;  z               1    8[COMMON] unsigned char 
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0, pclath, cstack
  9518 ;; Tracked objects:
  9519 ;;		On entry : 200/100
  9520 ;;		On exit  : 200/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9523 ;;      Params:         1       0       0       0       0
  9524 ;;      Locals:         4       0       0       0       0
  9525 ;;      Temps:          2       0       0       0       0
  9526 ;;      Totals:         7       0       0       0       0
  9527 ;;Total ram usage:        7 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    2
  9530 ;; This function calls:
  9531 ;;		_Lcd_Cmd
  9532 ;; This function is called by:
  9533 ;;		_main
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           
  9538                           ;psect for function _Lcd_Set_Cursor
  9539  1D70                     _Lcd_Set_Cursor:	
  9540                           
  9541                           ;incstack = 0
  9542                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9543                           ;Lcd_Set_Cursor@a stored from wreg
  9544  1D70  00F7               	movwf	Lcd_Set_Cursor@a
  9545                           
  9546                           ;./lcd.h: 38:  char temp,z,y;;./lcd.h: 39:  if(a == 1)
  9547  1D71  0377               	decf	Lcd_Set_Cursor@a,w
  9548  1D72  1D03               	btfss	3,2
  9549  1D73  2D95               	goto	l3527
  9550                           
  9551                           ;./lcd.h: 40:  {;./lcd.h: 41:    temp = 0x80 + b - 1;
  9552  1D74  0874               	movf	Lcd_Set_Cursor@b,w
  9553  1D75  3E7F               	addlw	127
  9554  1D76  00F5               	movwf	??_Lcd_Set_Cursor
  9555  1D77  0875               	movf	??_Lcd_Set_Cursor,w
  9556  1D78  00FA               	movwf	Lcd_Set_Cursor@temp
  9557                           
  9558                           ;./lcd.h: 42:   z = temp>>4;
  9559  1D79  087A               	movf	Lcd_Set_Cursor@temp,w
  9560  1D7A  00F5               	movwf	??_Lcd_Set_Cursor
  9561  1D7B  3004               	movlw	4
  9562  1D7C                     u5905:	
  9563  1D7C  1003               	clrc
  9564  1D7D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9565  1D7E  3EFF               	addlw	-1
  9566  1D7F  1D03               	skipz
  9567  1D80  2D7C               	goto	u5905
  9568  1D81  0875               	movf	??_Lcd_Set_Cursor,w
  9569  1D82  00F6               	movwf	??_Lcd_Set_Cursor+1
  9570  1D83  0876               	movf	??_Lcd_Set_Cursor+1,w
  9571  1D84  00F8               	movwf	Lcd_Set_Cursor@z
  9572                           
  9573                           ;./lcd.h: 43:   y = temp & 0x0F;
  9574  1D85  087A               	movf	Lcd_Set_Cursor@temp,w
  9575  1D86  390F               	andlw	15
  9576  1D87  00F5               	movwf	??_Lcd_Set_Cursor
  9577  1D88  0875               	movf	??_Lcd_Set_Cursor,w
  9578  1D89  00F9               	movwf	Lcd_Set_Cursor@y
  9579                           
  9580                           ;./lcd.h: 44:   Lcd_Cmd(z);
  9581  1D8A  0878               	movf	Lcd_Set_Cursor@z,w
  9582  1D8B  120A  118A  2006  160A  158A  	fcall	_Lcd_Cmd
  9583                           
  9584                           ;./lcd.h: 45:   Lcd_Cmd(y);
  9585  1D90  0879               	movf	Lcd_Set_Cursor@y,w
  9586  1D91  120A  118A  2006   	fcall	_Lcd_Cmd
  9587                           
  9588                           ;./lcd.h: 46:  }
  9589  1D94  0008               	return
  9590  1D95                     l3527:	
  9591  1D95  3002               	movlw	2
  9592  1D96  0677               	xorwf	Lcd_Set_Cursor@a,w
  9593  1D97  1D03               	btfss	3,2
  9594  1D98  0008               	return
  9595                           
  9596                           ;./lcd.h: 48:  {;./lcd.h: 49:   temp = 0xC0 + b - 1;
  9597  1D99  0874               	movf	Lcd_Set_Cursor@b,w
  9598  1D9A  3EBF               	addlw	191
  9599  1D9B  00F5               	movwf	??_Lcd_Set_Cursor
  9600  1D9C  0875               	movf	??_Lcd_Set_Cursor,w
  9601  1D9D  00FA               	movwf	Lcd_Set_Cursor@temp
  9602                           
  9603                           ;./lcd.h: 50:   z = temp>>4;
  9604  1D9E  087A               	movf	Lcd_Set_Cursor@temp,w
  9605  1D9F  00F5               	movwf	??_Lcd_Set_Cursor
  9606  1DA0  3004               	movlw	4
  9607  1DA1                     u5925:	
  9608  1DA1  1003               	clrc
  9609  1DA2  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9610  1DA3  3EFF               	addlw	-1
  9611  1DA4  1D03               	skipz
  9612  1DA5  2DA1               	goto	u5925
  9613  1DA6  0875               	movf	??_Lcd_Set_Cursor,w
  9614  1DA7  00F6               	movwf	??_Lcd_Set_Cursor+1
  9615  1DA8  0876               	movf	??_Lcd_Set_Cursor+1,w
  9616  1DA9  00F8               	movwf	Lcd_Set_Cursor@z
  9617                           
  9618                           ;./lcd.h: 51:   y = temp & 0x0F;
  9619  1DAA  087A               	movf	Lcd_Set_Cursor@temp,w
  9620  1DAB  390F               	andlw	15
  9621  1DAC  00F5               	movwf	??_Lcd_Set_Cursor
  9622  1DAD  0875               	movf	??_Lcd_Set_Cursor,w
  9623  1DAE  00F9               	movwf	Lcd_Set_Cursor@y
  9624                           
  9625                           ;./lcd.h: 52:   Lcd_Cmd(z);
  9626  1DAF  0878               	movf	Lcd_Set_Cursor@z,w
  9627  1DB0  120A  118A  2006  160A  158A  	fcall	_Lcd_Cmd
  9628                           
  9629                           ;./lcd.h: 53:   Lcd_Cmd(y);
  9630  1DB5  0879               	movf	Lcd_Set_Cursor@y,w
  9631  1DB6  120A  118A  2006   	fcall	_Lcd_Cmd
  9632  1DB9  0008               	return
  9633  1DBA                     __end_of_Lcd_Set_Cursor:	
  9634                           
  9635                           	psect	text35
  9636  1000                     __ptext35:	
  9637 ;; *************** function _Lcd_Init *****************
  9638 ;; Defined at:
  9639 ;;		line 56 in file "./lcd.h"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;		None
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, status,2, status,0, pclath, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : B00/0
  9650 ;;		On exit  : 300/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9653 ;;      Params:         0       0       0       0       0
  9654 ;;      Locals:         0       0       0       0       0
  9655 ;;      Temps:          2       0       0       0       0
  9656 ;;      Totals:         2       0       0       0       0
  9657 ;;Total ram usage:        2 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:    2
  9660 ;; This function calls:
  9661 ;;		_Lcd_Cmd
  9662 ;;		_Lcd_Port
  9663 ;; This function is called by:
  9664 ;;		_main
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           
  9669                           ;psect for function _Lcd_Init
  9670  1000                     _Lcd_Init:	
  9671                           
  9672                           ;./lcd.h: 57:   Lcd_Port(0x00);
  9673                           
  9674                           ;incstack = 0
  9675                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9676  1000  3000               	movlw	0
  9677  1001  160A  158A  233F  160A  118A  	fcall	_Lcd_Port
  9678                           
  9679                           ;./lcd.h: 58:    _delay((unsigned long)((20)*(4000000/4000.0)));
  9680  1006  301A               	movlw	26
  9681  1007  00F5               	movwf	??_Lcd_Init+1
  9682  1008  30F8               	movlw	248
  9683  1009  00F4               	movwf	??_Lcd_Init
  9684  100A                     u6287:	
  9685  100A  0BF4               	decfsz	??_Lcd_Init,f
  9686  100B  280A               	goto	u6287
  9687  100C  0BF5               	decfsz	??_Lcd_Init+1,f
  9688  100D  280A               	goto	u6287
  9689  100E  0000               	nop
  9690                           
  9691                           ;./lcd.h: 59:   Lcd_Cmd(0x03);
  9692  100F  3003               	movlw	3
  9693  1010  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9694                           
  9695                           ;./lcd.h: 60:  _delay((unsigned long)((5)*(4000000/4000.0)));
  9696  1015  3007               	movlw	7
  9697  1016  00F5               	movwf	??_Lcd_Init+1
  9698  1017  307D               	movlw	125
  9699  1018  00F4               	movwf	??_Lcd_Init
  9700  1019                     u6297:	
  9701  1019  0BF4               	decfsz	??_Lcd_Init,f
  9702  101A  2819               	goto	u6297
  9703  101B  0BF5               	decfsz	??_Lcd_Init+1,f
  9704  101C  2819               	goto	u6297
  9705                           
  9706                           ;./lcd.h: 61:   Lcd_Cmd(0x03);
  9707  101D  3003               	movlw	3
  9708  101E  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9709                           
  9710                           ;./lcd.h: 62:  _delay((unsigned long)((11)*(4000000/4000.0)));
  9711  1023  300F               	movlw	15
  9712  1024  00F5               	movwf	??_Lcd_Init+1
  9713  1025  3047               	movlw	71
  9714  1026  00F4               	movwf	??_Lcd_Init
  9715  1027                     u6307:	
  9716  1027  0BF4               	decfsz	??_Lcd_Init,f
  9717  1028  2827               	goto	u6307
  9718  1029  0BF5               	decfsz	??_Lcd_Init+1,f
  9719  102A  2827               	goto	u6307
  9720  102B  282C               	nop2
  9721                           
  9722                           ;./lcd.h: 63:   Lcd_Cmd(0x03);
  9723  102C  3003               	movlw	3
  9724  102D  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9725                           
  9726                           ;./lcd.h: 65:   Lcd_Cmd(0x02);
  9727  1032  3002               	movlw	2
  9728  1033  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9729                           
  9730                           ;./lcd.h: 66:   Lcd_Cmd(0x02);
  9731  1038  3002               	movlw	2
  9732  1039  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9733                           
  9734                           ;./lcd.h: 67:   Lcd_Cmd(0x08);
  9735  103E  3008               	movlw	8
  9736  103F  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9737                           
  9738                           ;./lcd.h: 68:   Lcd_Cmd(0x00);
  9739  1044  3000               	movlw	0
  9740  1045  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9741                           
  9742                           ;./lcd.h: 69:   Lcd_Cmd(0x0C);
  9743  104A  300C               	movlw	12
  9744  104B  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9745                           
  9746                           ;./lcd.h: 70:   Lcd_Cmd(0x00);
  9747  1050  3000               	movlw	0
  9748  1051  120A  118A  2006  160A  118A  	fcall	_Lcd_Cmd
  9749                           
  9750                           ;./lcd.h: 71:   Lcd_Cmd(0x06);
  9751  1056  3006               	movlw	6
  9752  1057  120A  118A  2006   	fcall	_Lcd_Cmd
  9753  105A  0008               	return
  9754  105B                     __end_of_Lcd_Init:	
  9755                           
  9756                           	psect	text36
  9757  1B26                     __ptext36:	
  9758 ;; *************** function _Lcd_Clear *****************
  9759 ;; Defined at:
  9760 ;;		line 33 in file "./lcd.h"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  2   58[None  ] int 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0, pclath, cstack
  9769 ;; Tracked objects:
  9770 ;;		On entry : 300/0
  9771 ;;		On exit  : 300/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9774 ;;      Params:         0       0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0
  9777 ;;      Totals:         0       0       0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:    2
  9781 ;; This function calls:
  9782 ;;		_Lcd_Cmd
  9783 ;; This function is called by:
  9784 ;;		_main
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           
  9789                           ;psect for function _Lcd_Clear
  9790  1B26                     _Lcd_Clear:	
  9791                           
  9792                           ;./lcd.h: 34:  Lcd_Cmd(0);
  9793                           
  9794                           ;incstack = 0
  9795                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9796  1B26  3000               	movlw	0
  9797  1B27  120A  118A  2006  160A  158A  	fcall	_Lcd_Cmd
  9798                           
  9799                           ;./lcd.h: 35:  Lcd_Cmd(1);
  9800  1B2C  3001               	movlw	1
  9801  1B2D  120A  118A  2006   	fcall	_Lcd_Cmd
  9802  1B30  0008               	return
  9803  1B31                     __end_of_Lcd_Clear:	
  9804                           
  9805                           	psect	text37
  9806  0006                     __ptext37:	
  9807 ;; *************** function _Lcd_Cmd *****************
  9808 ;; Defined at:
  9809 ;;		line 26 in file "./lcd.h"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;  a               1    wreg     unsigned char 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  a               1    3[COMMON] unsigned char 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  1    wreg      void 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0, pclath, cstack
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/100
  9820 ;;		On exit  : 300/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9823 ;;      Params:         0       0       0       0       0
  9824 ;;      Locals:         1       0       0       0       0
  9825 ;;      Temps:          2       0       0       0       0
  9826 ;;      Totals:         3       0       0       0       0
  9827 ;;Total ram usage:        3 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:    1
  9830 ;; This function calls:
  9831 ;;		_Lcd_Port
  9832 ;; This function is called by:
  9833 ;;		_Lcd_Clear
  9834 ;;		_Lcd_Set_Cursor
  9835 ;;		_Lcd_Init
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           
  9840                           ;psect for function _Lcd_Cmd
  9841  0006                     _Lcd_Cmd:	
  9842                           
  9843                           ;incstack = 0
  9844                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9845                           ;Lcd_Cmd@a stored from wreg
  9846  0006  00F3               	movwf	Lcd_Cmd@a
  9847                           
  9848                           ;./lcd.h: 27:  RD2 = 0;
  9849  0007  1283               	bcf	3,5	;RP0=0, select bank0
  9850  0008  1303               	bcf	3,6	;RP1=0, select bank0
  9851  0009  1108               	bcf	8,2	;volatile
  9852                           
  9853                           ;./lcd.h: 28:  Lcd_Port(a);
  9854  000A  0873               	movf	Lcd_Cmd@a,w
  9855  000B  160A  158A  233F  120A  118A  	fcall	_Lcd_Port
  9856                           
  9857                           ;./lcd.h: 29:  RD3 = 1;
  9858  0010  1588               	bsf	8,3	;volatile
  9859                           
  9860                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  9861  0011  3006               	movlw	6
  9862  0012  00F2               	movwf	??_Lcd_Cmd+1
  9863  0013  3030               	movlw	48
  9864  0014  00F1               	movwf	??_Lcd_Cmd
  9865  0015                     u6317:	
  9866  0015  0BF1               	decfsz	??_Lcd_Cmd,f
  9867  0016  2815               	goto	u6317
  9868  0017  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9869  0018  2815               	goto	u6317
  9870  0019  0000               	nop
  9871                           
  9872                           ;./lcd.h: 31:         RD3 = 0;
  9873  001A  1283               	bcf	3,5	;RP0=0, select bank0
  9874  001B  1303               	bcf	3,6	;RP1=0, select bank0
  9875  001C  1188               	bcf	8,3	;volatile
  9876  001D  0008               	return
  9877  001E                     __end_of_Lcd_Cmd:	
  9878                           
  9879                           	psect	text38
  9880  1B3F                     __ptext38:	
  9881 ;; *************** function _Lcd_Port *****************
  9882 ;; Defined at:
  9883 ;;		line 5 in file "./lcd.h"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  a               1    wreg     unsigned char 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  a               1    0[COMMON] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      void 
  9890 ;; Registers used:
  9891 ;;		wreg
  9892 ;; Tracked objects:
  9893 ;;		On entry : 300/0
  9894 ;;		On exit  : 300/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9897 ;;      Params:         0       0       0       0       0
  9898 ;;      Locals:         1       0       0       0       0
  9899 ;;      Temps:          0       0       0       0       0
  9900 ;;      Totals:         1       0       0       0       0
  9901 ;;Total ram usage:        1 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; This function calls:
  9904 ;;		Nothing
  9905 ;; This function is called by:
  9906 ;;		_Lcd_Cmd
  9907 ;;		_Lcd_Init
  9908 ;;		_Lcd_Write_Char
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           
  9913                           ;psect for function _Lcd_Port
  9914  1B3F                     _Lcd_Port:	
  9915                           
  9916                           ;incstack = 0
  9917                           ; Regs used in _Lcd_Port: [wreg]
  9918                           ;Lcd_Port@a stored from wreg
  9919  1B3F  00F0               	movwf	Lcd_Port@a
  9920                           
  9921                           ;./lcd.h: 6:  if(a & 1)
  9922  1B40  1C70               	btfss	Lcd_Port@a,0
  9923  1B41  2B44               	goto	l45
  9924                           
  9925                           ;./lcd.h: 7:   RD4 = 1;
  9926  1B42  1608               	bsf	8,4	;volatile
  9927  1B43  2B45               	goto	l46
  9928  1B44                     l45:	
  9929                           ;./lcd.h: 8:  else
  9930                           
  9931                           
  9932                           ;./lcd.h: 9:   RD4 = 0;
  9933  1B44  1208               	bcf	8,4	;volatile
  9934  1B45                     l46:	
  9935                           
  9936                           ;./lcd.h: 11:  if(a & 2)
  9937  1B45  1CF0               	btfss	Lcd_Port@a,1
  9938  1B46  2B49               	goto	l47
  9939                           
  9940                           ;./lcd.h: 12:   RD5 = 1;
  9941  1B47  1688               	bsf	8,5	;volatile
  9942  1B48  2B4A               	goto	l48
  9943  1B49                     l47:	
  9944                           ;./lcd.h: 13:  else
  9945                           
  9946                           
  9947                           ;./lcd.h: 14:   RD5 = 0;
  9948  1B49  1288               	bcf	8,5	;volatile
  9949  1B4A                     l48:	
  9950                           
  9951                           ;./lcd.h: 16:  if(a & 4)
  9952  1B4A  1D70               	btfss	Lcd_Port@a,2
  9953  1B4B  2B4E               	goto	l49
  9954                           
  9955                           ;./lcd.h: 17:   RD6 = 1;
  9956  1B4C  1708               	bsf	8,6	;volatile
  9957  1B4D  2B4F               	goto	l50
  9958  1B4E                     l49:	
  9959                           ;./lcd.h: 18:  else
  9960                           
  9961                           
  9962                           ;./lcd.h: 19:   RD6 = 0;
  9963  1B4E  1308               	bcf	8,6	;volatile
  9964  1B4F                     l50:	
  9965                           
  9966                           ;./lcd.h: 21:  if(a & 8)
  9967  1B4F  1DF0               	btfss	Lcd_Port@a,3
  9968  1B50  2B53               	goto	l51
  9969                           
  9970                           ;./lcd.h: 22:   RD7 = 1;
  9971  1B51  1788               	bsf	8,7	;volatile
  9972  1B52  0008               	return
  9973  1B53                     l51:	
  9974                           ;./lcd.h: 23:  else
  9975                           
  9976                           
  9977                           ;./lcd.h: 24:   RD7 = 0;
  9978  1B53  1388               	bcf	8,7	;volatile
  9979  1B54  0008               	return
  9980  1B55                     __end_of_Lcd_Port:	
  9981  007E                     btemp	set	126	;btemp
  9982  007E                     wtemp0	set	126


Data Sizes:
    Strings     21
    Constant    144
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     66      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Write_Int@buff(BANK0[17]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Write_Int@buff(BANK0[17]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Write_Int@buff(BANK0[17]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Write_Int@buff(BANK0[17]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 7
		 -> Lcd_flotante@s(BANK1[7]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 17
		 -> Lcd_Write_Int@buff(BANK0[17]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[5]), Lcd_flotante@s(BANK1[7]), 
		 -> Lcd_Write_Int@buff(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    ___fldiv->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    ___lbdiv->___lbmod
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _Lcd_Write_Int->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Int
    _main->_Lcd_flotante
    ___fldiv->___flmul
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _Lcd_Write_Int->___fltol
    _itoa->_utoa

Critical Paths under _main in BANK1

    _main->_Lcd_flotante
    _Lcd_flotante->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   55427
                                             79 BANK0      1     1      0
                                             46 BANK1     20    20      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                      _Lcd_Write_Int
                   _Lcd_Write_String
                       _Lcd_flotante
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                         _conversion
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           7     5      2      68
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1577
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_flotante                                        12     8      4   36783
                                             78 BANK0      1     1      0
                                             35 BANK1     11     7      4
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   35897
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    8929
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6936
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              7     6      1     387
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     390
                                              7 COMMON     5     4      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    5914
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     626
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     533
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3093
                                             70 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2744
                                             50 BANK0     20    12      8
                            ___flmul (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Int                                       19    17      2    2410
                                             60 BANK0     19    17      2
                   _Lcd_Write_String
                            ___fltol (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     648
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Int
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___fltol (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           ___xxtofl (ARG)
     _itoa (ARG)
       _utoa
         ___lwdiv
         ___lwmod
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Lcd_flotante
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           ___xxtofl (ARG)
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             ___xxtofl (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             ___xxtofl (ARG)
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               ___xxtofl (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           ___xxtofl (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           ___xxtofl (ARG)
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
       ___xxtofl (ARG)
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         ___xxtofl (ARG)
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lbdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
     ___xxtofl (ARG)
   ___flsub
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           ___xxtofl (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
       ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _conversion
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     42      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AE      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 20 17:23:51 2019

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          pc 0002  
             ___fldiv@sign 004F                __CFG_CP$OFF 0000                         l50 1B4F  
                       l51 1B53                         l45 1B44                         l46 1B45  
                       l47 1B49                         l48 1B4A                         l49 1B4E  
                       l98 1CA3               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l500 006B  
                      l239 031F                        l280 07BF                        l265 05FA  
                      l290 1BCF                        l621 0172                        l518 097C  
                      l534 1C47                        l623 0150                        l471 118F  
                      l481 1F87                        l617 00D9                        l651 0293  
                      l476 1D42                        l484 1FED                        l477 1D5C  
                      l725 17F3                        l638 022B                        l751 1078  
                      l673 11F3                        l659 02AB                        l764 10CE  
                      l765 10D8                        l757 10B8                        l783 1F57  
                      l695 1332                        l793 1C19                        l697 1340  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
             __CFG_CPD$OFF 0000                        _aux 00E8                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               __CFG_FOSC$XT 0000  
             ___flmul@aexp 0032               ___flmul@bexp 0037                _sprintf$837 00AA  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             __CFG_LVP$OFF 0000               ___fltol@exp1 005B                       l3013 1108  
                     l3031 113F                       l3007 098B                       l3017 1111  
                     l3123 1FC7                       l3051 118B                       l2403 1EA6  
                     l3109 1D6E                       l3221 109D                       l3119 1FA1  
                     l3143 0027                       l3231 10BD                       l3215 1087  
                     l3039 1167                       l2343 1C11                       l2415 1DC4  
                     l2505 1CDB                       l2521 08BF                       l3305 1BB8  
                     l3065 1BC7                       l3209 1070                       l3049 117B  
                     l2441 1E00                       l2433 1DED                       l2523 08CD  
                     l2531 08E6                       l3163 0057                       l3147 0030  
                     l3083 1EBB                       l3243 10F5                       l3219 108B  
                     l3059 119E                       l2371 1E5C                       l2427 1DD1  
                     l2419 1DCB                       l3403 0509                       l2509 1CE6  
                     l2701 0260                       l2621 015B                       l2613 011F  
                     l3173 007A                       l3165 0067                       l3093 1EF3  
                     l3085 1ECB                       l3229 10CC                       l2429 1DDF  
                     l2437 1DF8                       l3413 054B                       l3341 0321  
                     l3333 02E4                       l3317 02D1                       l2527 08DB  
                     l2623 015D                       l2631 016C                       l3183 1E0D  
                     l2455 1BED                       l3431 05EB                       l3343 033B  
                     l3335 031B                       l3503 02BB                       l3249 1F0E  
                     l2553 00A7                       l3097 1F00                       l3185 1E1D  
                     l3193 1E48                       l2457 1BF6                       l2377 1E67  
                     l3425 05AF                       l3505 07E7                       l3259 1F2D  
                     l2723 02A7                       l2555 00AF                       l2467 1C05  
                     l2475 1C30                       l2395 1E93                       l2387 1E6F  
                     l3443 0658                       l3419 05AD                       l3611 11EB  
                     l3293 1CED                       l2573 00CE                       l2549 00A4  
                     l3189 1E3B                       l2389 1E7D                       l3349 034B  
                     l3621 1212                       l3527 1D95                       l2719 02A3  
                     l2647 01A1                       l2639 0180                       l2583 00E3  
                     l2743 1526                       l2903 14CB                       l2399 1E9E  
                     l3463 06A4                       l3455 0687                       l3391 04A2  
                     l3383 0446                       l3375 03E0                       l3359 038D  
                     l3607 11E8                       l2497 1CB7                       l2649 01A3  
                     l2657 01B3                       l2577 00D1                       l2833 1779  
                     l2825 1745                       l2761 154B                       l2745 1528  
                     l3449 066B                       l3561 1C86                       l2499 1CC5  
                     l2683 024C                       l2675 023D                       l2667 021D  
                     l2691 0255                       l2851 17C3                       l2827 1762  
                     l2763 154D                       l2747 1530                       l3483 07AA  
                     l3387 0463                       l3627 121E                       l2837 177B  
                     l2773 1563                       l2765 1555                       l2925 0B00  
                     l3477 0799                       l3485 07AF                       l3709 133C  
                     l3653 128C                       l2847 17AD                       l2943 0C91  
                     l2919 0A7B                       l3399 04EE                       l3671 1297  
                     l3647 126D                       l3655 1249                       l3591 11C5  
                     l3735 0CD4                       l2697 025E                       l2689 0253  
                     l2961 08FC                       l2857 17DC                       l2937 0C0C  
                     l2929 0B2B                       l3497 07D5                       l3673 12B4  
                     l3657 1291                       l3593 11CD                       l2955 1B3D  
                     l3683 12CD                       l3587 11C2                       l2965 0905  
                     l3693 12FF                       l3679 12CB                       l2897 1434  
                     l3793 0333                       l3697 1318                       l2987 0955  
                     l2979 0935                       l2997 0968                       l2999 0978  
                     STR_1 08B0                       STR_2 08A6                       STR_3 08A0  
                     STR_4 08AB                       u3145 1C1A                       u3235 1E72  
                     u5005 1EBF                       u4205 1666                       u3255 1E7E  
                     u3335 1DD4                       u3505 1CD2                       u5121 1FB2  
                     u5025 1ECD                       u4305 1754                       u3265 1E8A  
                     u5122 1FB3                       u3515 1CDC                       u5123 1FB8  
                     u5035 1EE2                       u3435 1C33                       u3275 1E94  
                     u3355 1DE5                       u5124 1FB9                       u3700 0140  
                     u5141 1FD8                       u5125 1FBE                       u5045 1EF4  
                     u4245 16FA                       u3365 1DEE                       u5142 1FD9  
                     u5126 1FBF                       u4415 1C5C                       u5143 1FDE  
                     u5215 0058                       u4175 160D                       u5144 1FDF  
                     u3545 08C2                       u5145 1FE4                       u5305 1E2B  
                     u5146 1FE5                       u3475 1CBA                       u5315 1E3C  
                     u4275 1731                       u4435 1362                       u3565 08D3  
                     u5085 1D6A                       u5245 0070                       u5405 10C5  
                     u4285 1749                       u4445 13AD                       u4605 0B4E  
                     u4525 09BD                       u6125 129B                       u3495 1CC6  
                     u3575 08DC                       u3831 01DE                       u3823 01C5  
                     u3815 01A7                       u3735 0161                       u4375 1798  
                     u4455 13F7                       u4615 0B88                       u4535 09F7  
                     u6215 12EA                       u6055 1252                       u3840 01F2  
                     u3832 01DF                       u3841 01F3                       u3833 01E4  
                     u5185 0039                       u4385 17B6                       u4625 0BCF  
                     u4545 0A3E                       u6225 1308                       u6145 12A6  
                     u6065 125B                       u3842 01F8                       u3834 01E5  
                     u3690 013F                       u6307 1027                       u3843 01F9  
                     u3835 01EA                       u4715 0937                       u4395 17CE  
                     u4475 144C                       u6235 1323                       u3836 01EB  
                     u6317 0015                       u3685 0133                       u5285 1E11  
                     u5445 10E0                       u5365 1094                       u4805 0981  
                     u4725 0948                       u4485 148E                       u4645 0C22  
                     u4565 0A91                       u6085 1266                       u4735 0956  
                     u4495 14D6                       u4655 0C5C                       u4575 0ACB  
                     u6095 127B                       u5385 10B0                       u4905 117C  
                     u4665 0C94                       u4585 0B03                       u5705 05B2  
                     u6257 1C9B                       u6267 1C6A                       u5715 05E1  
                     u6277 1C78                       u3885 023F                       u4845 1141  
                     u5805 0763                       u5645 046C                       u6287 100A  
                     u4935 1194                       u4855 1156                       u4775 0969  
                     u5655 04AD                       u6297 1019                       u5905 1D7C  
                     u3985 027D                       u4865 1169                       u5745 0602  
                     u5925 1DA1                       u4965 1BD0                       u5765 0674  
                     u5685 04EC                       u4975 1BD7                       u5855 07C6  
                     u5775 0681                       u5865 07D3                       u5945 1C8D  
                     u5795 0701               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0075  
                     _main 0CBC                       _init 1B17                       _itoa 1BA5  
                     _temp 00EC                       btemp 007E                       _utoa 1F09  
                     start 0000         ??_Lcd_Write_String 0077            ___fldiv@new_exp 0050  
          __end_of_Lcd_Cmd 001E              ___fltol@sign1 005A            __end_of___fladd 02B6  
                    ?_main 0070                      ?_init 0070            __end_of___fldiv 1348  
                    ?_itoa 0024            __end_of___awdiv 1EAB            __end_of___lbdiv 1C07  
          __end_of___flneg 1B26              __CFG_WDTE$OFF 0000            __end_of___awmod 1E05  
          __end_of___lbmod 1C4D            __end_of___flmul 1800            __end_of___flsub 1BA5  
          __end_of___fltol 0089            __end_of___lldiv 1F09                      ?_utoa 0078  
          ___awdiv@divisor 0077            __end_of___llmod 1E51            __end_of___lwdiv 1CEB  
          __end_of___lwmod 08EB            ___awdiv@counter 0020                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008    __size_of_Lcd_Set_Cursor 004A  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088            __end_of_dpowers 08A0                      _scale 0994  
          __end_of_isdigit 1B3F             __CFG_BOREN$OFF 0000                      pclath 000A  
                    utoa@c 0022                      utoa@v 0020                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07EC            ___lbdiv@divisor 0077  
          ___lbdiv@counter 007A           __end_of_Lcd_Init 105B           __end_of_Lcd_Port 1B55  
          __initialization 07EC               __end_of_main 1000               __end_of_init 1B1D  
             __end_of_itoa 1BC5               __end_of_utoa 1F6D       __end_of_Lcd_flotante 1B87  
                   ??_main 006F                     ??_init 0070                     ??_itoa 007D  
                   ??_utoa 007C         __size_of_Lcd_Clear 000B       __size_of__tdiv_to_l_ 00A9  
                   _ADCON0 001F                     _ADCON1 009F           ___llmod@dividend 0074  
                   ?_scale 003E                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0079                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0031  
         __end_of___xxtofl 10FE             __CFG_PWRTE$OFF 0000           __end_of__powers_ 0844  
                   ___flge 1F6D                     ___fleq 1D28                  ??___fladd 005A  
                   ___wmul 1BC5                  ??___fldiv 0046                  ??___awdiv 007B  
                ??___lbdiv 0078                  ??___flneg 0074                  ??___awmod 0074  
                ??___lbmod 0071                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 0074                  ??___lwmod 0074                     _fround 1348  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
    __end_of_Lcd_Write_Int 1B6B                  ??_isdigit 0070         __size_of__Umul8_16 0023  
         Lcd_Write_Int@num 005C                  ??_sprintf 00A5           ___lbdiv@dividend 0079  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074            ___lbmod@divisor 0070  
  __end_of__initialization 07FC            ___lbmod@counter 0075                 ___flneg@f1 0070  
        __end_of_Lcd_Clear 1B31                 ___fltol@f1 0051             __pcstackCOMMON 0070  
            __end_of_scale 0CBC           ___lbdiv@quotient 007B             _Lcd_Set_Cursor 1D70  
               __div_to_l_ 10FE                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0042  
          __div_to_l_@quot 0020                 __pbssBANK1 00E2              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074      __size_of_Lcd_flotante 001C          __end_of__Umul8_16 1C2A  
               __pmaintext 0CBC                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070                    ?_fround 003E  __size_of_Lcd_Write_String 003D  
   __end_of_Lcd_Set_Cursor 1DBA                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070               _Lcd_flotante 1B6B                 __stringtab 0800  
           _Lcd_Write_Char 1C4D                    _Lcd_Cmd 0006                 _conversion 1C7E  
        __end_of__npowers_ 0878            __size_of___flge 0093            __size_of___fleq 0048  
                  ___fladd 0089                    ___fldiv 11A7                    ___awdiv 1E51  
                  ___lbdiv 1BE6                    ___flneg 1B1D                    ___awmod 1DBA  
                  ___lbmod 1C2A                    ___flmul 150B                    ___flsub 1B87  
                  ___fltol 001E                    ___lldiv 1EAB            __size_of___wmul 0021  
                  ___llmod 1E05                    ___lwdiv 1CAF                 _fround$834 004D  
               _fround$835 0049                    ___lwmod 08B9            __size_of_fround 01C3  
          ?_Lcd_Set_Cursor 0074                    __ptext1 1B17                    __ptext2 1C7E  
                  __ptext3 11A7                    __ptext4 1B6B                    __ptext5 02B6  
                  __ptext6 0994                    __ptext7 1DBA                    __ptext8 1E51  
                  __ptext9 1B31                ?__div_to_l_ 0070                    _dpowers 0878  
                  _isdigit 1B31                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _sensor1 00E6                    _sensor2 00E4                    _sensor3 00E2  
                  _sprintf 02B6     __end_of_Lcd_Write_Char 1C7E       end_of_initialization 07FC  
                  itoa@buf 0029                    itoa@val 0024            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  Lcd_Port@a 0070          Lcd_Write_Int@buff 005E  
                  utoa@buf 0023             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
                  utoa@val 0078              ??__tdiv_to_l_ 0078                ___fladd@grs 0065  
         ___lbmod@dividend 0074              ___xxtofl@sign 0078                ___fldiv@grs 0052  
              ___fldiv@rem 004B            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 007A                ___lbmod@rem 0076                ___flmul@grs 0033  
              ?_conversion 0070        __size_of__div_to_l_ 00A9                  _Lcd_Clear 1B26  
           __end_of___flge 2000             __end_of___fleq 1D70             __end_of___wmul 1BE6  
         _Lcd_Write_String 1CEB             __end_of_fround 150B        start_initialization 07EC  
      __end_of__tdiv_to_l_ 0994          __size_of_Lcd_Init 005B          __size_of_Lcd_Port 0016  
      conversion@resultado 0074            ___llmod@divisor 0070            ___llmod@counter 0079  
   __size_of_Lcd_Write_Int 0016                 ?_Lcd_Clear 0070                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 1C07  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                   ??_fround 0042  
            sprintf@tmpval 00B7                  ___fladd@a 0056                  ___fladd@b 0052  
      __size_of_conversion 0031                 fround@prec 0051                  ___fldiv@a 003E  
                ___fldiv@b 0042                  ___flmul@a 0028                  ___flmul@b 0024  
                ___flsub@a 0066                  ___flsub@b 006A                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00A3  
                 ?_Lcd_Cmd 0070                sprintf@flag 00AF                sprintf@eexp 00B5  
              sprintf@fval 00BE                sprintf@prec 00BC           ___lwdiv@dividend 0072  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 0052                   ?___fldiv 003E  
                 ?___awdiv 0077                   ?___lbdiv 0077                   ?___flneg 0070  
                 ?___awmod 0070                   ?___lbmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 0844                 ?__Umul8_16 0070  
                 ?___lwdiv 0070                   ?___lwmod 0070                  __pstrings 0800  
              __tdiv_to_l_ 08EB               ??__div_to_l_ 0078              _Lcd_Write_Int 1B55  
                 ?_isdigit 0070                  _scale$836 004C           ___lwdiv@quotient 0075  
                 ?_sprintf 00A0             __size_of_scale 0328             ___wmul@product 0074  
                 Lcd_Cmd@a 0073         __end_of__div_to_l_ 11A7                   _GO_nDONE 00FA  
              ??_Lcd_Clear 0074                __stringbase 080F          ___wmul@multiplier 0070  
           ?_Lcd_Write_Int 005C           ??_Lcd_Write_Char 0071                   _Lcd_Init 1000  
                 _Lcd_Port 1B3F              Lcd_flotante@f 00C3              Lcd_flotante@s 00C7  
          conversion@canal 0076   __end_of_Lcd_Write_String 1D28               ??_conversion 0072  
         __size_of_Lcd_Cmd 0018                ??__Umul8_16 0072           __size_of___fladd 022D  
         __size_of___fldiv 01A1           __size_of___awdiv 005A           __size_of___lbdiv 0021  
         __size_of___flneg 0009           __size_of___awmod 004B           __size_of___lbmod 0023  
         __size_of___flmul 02F5           __size_of___flsub 001E           __size_of___fltol 006B  
         __size_of___lldiv 005E           __size_of___llmod 004C           __size_of___lwdiv 003C  
         __size_of___lwmod 0032         __end_of__stringtab 0810                _isdigit$618 0070  
               sprintf@val 00B1         __end_of_conversion 1CAF                   ___xxtofl 105B  
         __size_of_isdigit 000E                   _main$830 00D2                   _main$831 00D6  
                 _main$832 00DA                   _main$833 00DE                   _main$829 00CE  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 1348  
                 __ptext11 1C2A                   __ptext20 1EAB                   __ptext12 1BE6  
                 __ptext21 001E                   __ptext13 150B                   __ptext30 08B9  
                 __ptext22 1B87                   __ptext14 1C07                   __ptext31 1CAF  
                 __ptext23 0089                   __ptext15 08EB                   __ptext32 1CEB  
                 __ptext24 1B1D                   __ptext16 10FE                   __ptext33 1C4D  
                 __ptext25 1F6D                   __ptext17 105B                   __ptext34 1D70  
                 __ptext26 1D28                   __ptext18 1BC5                   __ptext35 1000  
                 __ptext27 1B55                   __ptext19 1E05                   __ptext36 1B26  
                 __ptext28 1BA5                   __ptext37 0006                   __ptext29 1F09  
                 __ptext38 1B3F                   __powers_ 0810           __size_of_sprintf 0536  
            __size_of_main 0344              __size_of_init 0006              __size_of_itoa 0020  
            __size_of_utoa 0064            ??_Lcd_Write_Int 007E                   itoa@base 0026  
                 isdigit@c 0071                   scale@scl 0050              ?_Lcd_flotante 00C3  
       Lcd_Write_Char@temp 0072                  sprintf@ap 00AE           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00BB           __tdiv_to_l_@quot 0020  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 080A  
       Lcd_Set_Cursor@temp 007A               ?__tdiv_to_l_ 0070                   utoa@base 007A  
   __Umul8_16@multiplicand 0070                   sprintf@c 00C2                   sprintf@f 00A0  
         ___lldiv@quotient 0079            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 080A                   stringtab 0800             ??_Lcd_flotante 006E  
            ___fladd@signs 0062               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
